[{"title":"AdGuard installieren","type":0,"sectionRef":"#","url":"adguard-browser-extension/installation/","content":"","keywords":""},{"title":"How to install AdGuard Browser extension for Google Chrome or Chromium browsers​","type":1,"pageTitle":"AdGuard installieren","url":"adguard-browser-extension/installation/#how-to-install-adguard-browser-extension-for-google-chrome-or-chromium-browsers","content":"Open the extension's page in Chrome Web Store and click Add to Chrome.  In the opened dialog box, click Add extension.  "},{"title":"How to install AdGuard Browser extension for Opera​","type":1,"pageTitle":"AdGuard installieren","url":"adguard-browser-extension/installation/#how-to-install-adguard-browser-extension-for-opera","content":"Open the page addons.opera.com.  Click Add to Opera. "},{"title":"How to install AdGuard Browser extension for Firefox​","type":1,"pageTitle":"AdGuard installieren","url":"adguard-browser-extension/installation/#how-to-install-adguard-browser-extension-for-firefox","content":"Open the page addons.mozilla.org.  Click Add to Firefox. "},{"title":"How to install AdGuard Browser extension for Yandex Browser​","type":1,"pageTitle":"AdGuard installieren","url":"adguard-browser-extension/installation/#how-to-install-adguard-browser-extension-for-yandex-browser","content":"Click the browser settings button in the upper right corner of the browser, then choose Add-ons in the drop-down menu. Scroll down to find AdGuard, then click Install.  "},{"title":"How to install AdGuard Browser extension for Microsoft Edge​","type":1,"pageTitle":"AdGuard installieren","url":"adguard-browser-extension/installation/#how-to-install-adguard-browser-extension-for-microsoft-edge","content":"Find AdGuard Browser extension in the Edge Add-ons store and click Get.  In the opened dialog window, press Add extension.  Alternatively, you can install AdGuard Browser extension for Edge from the Chrome Web Store. Open its web page in your Edge browser and select Allow extensions from other stores on the banner at the top of the page.  In the opened dialog box, click Allow.  Click Add to Chrome.  In the opened dialog window, click Add extension to install AdGuard Browser extension.  "},{"title":"How to install AdGuard Browser extension for Safari​","type":1,"pageTitle":"AdGuard installieren","url":"adguard-browser-extension/installation/#how-to-install-adguard-browser-extension-for-safari","content":"AdGuard for Safari is not a browser extension in a common sense. You can read more about it in a dedicated article. Or you can download the installation file directly from this page. "},{"title":"Integrationsmodus (Legacy)","type":0,"sectionRef":"#","url":"adguard-browser-extension/integration-mode/","content":"","keywords":""},{"title":"What is the integration mode?​","type":1,"pageTitle":"Integrationsmodus (Legacy)","url":"adguard-browser-extension/integration-mode/#what-is-the-integration-mode","content":"In older versions of AdGuard Browser extension, if you had it installed along with one of the AdGuard desktop apps (AdGuard for Windows or AdGuard for Mac), the extension took upon itself the functions of AdGuard Assistant — a tool that helped manage the filtering right from the web page. At the same time, the ad blocking itself was completely under of the desktop app's control, the extension and its settings played no role in that. The problem was, in some cases the app and the extension would hamper each other’s work. Some websites would stop being protected by the desktop program and were backed up only by the extension which has less possibilities. Thus, starting with AdGuard Browser Extension v3.5, the integration mode was removed. Instead, the new AdGuard Browser Assistant was implemented. "},{"title":"AdGuard Browser Assistant​","type":1,"pageTitle":"Integrationsmodus (Legacy)","url":"adguard-browser-extension/integration-mode/#adguard-browser-assistant","content":" AdGuard Browser Assistant is a new browser extension that works and feels just like the integration mode but much lighter, without redundant functions, and doesn't interfere with the desktop apps. You can read more about Browser Assistant for Windows or Mac, or download it from our website. AdGuard Browser Assistant is available in all major browsers. "},{"title":"Installation","type":0,"sectionRef":"#","url":"adguard-content-blocker/installation/","content":"Installation The application is available in five stores: Google Play, Samsung Galaxy store, Huawei AppGallery, Aptoide, and F-Droid. To install AdGuard Content Blocker from Google Play, search AdGuard Content Blocker and tap Install. Note: AdGuard Content Blocker works in two browsers: Yandex Browser and Samsung Internet Browser. After the installation is completed, tap Open to run the app. If you have a supported browser installed on your device, the app will ask you to enable AdGuard. If you don't have a supported browser, you will be prompted to choose and install one. After the browser is installed, you can start AdGuard Content Blocker to block ads and trackers in it.","keywords":""},{"title":"Funktionsübersicht","type":0,"sectionRef":"#","url":"adguard-browser-extension/overview/","content":"","keywords":""},{"title":"Availability​","type":1,"pageTitle":"Funktionsübersicht","url":"adguard-browser-extension/overview/#br-extension","content":"AdGuard Browser extension is available for most major browsers. You can easily find it in your browser’s online store or on our official website.  We have a standalone extension for Safari. Since the release of Safari 13, most of the ad-blocking extensions have experienced huge issues and many of them stopped functioning. We had to develop a separate extension for Safari that has some differences in comparison with the extension described in this article. Do not forget that the functionality of each extension is strictly limited by the browser’s capabilities. So if you want to get full-fledged protection, consider installing a standalone program for your computer. There's a reason why. "},{"title":"Ad blocking​","type":1,"pageTitle":"Funktionsübersicht","url":"adguard-browser-extension/overview/#adblocker","content":"Blocking ads is clearly the key functionality of any ad blocker, and AdGuard is not an exception. The extension will successfully block ads on any page in your browser. Ad blocking is based on so-called filter lists, or simply filters. Filters can be enabled or disabled in your extension's settings. You can customize ad blocking by activating specific filters. "},{"title":"Filters​","type":1,"pageTitle":"Funktionsübersicht","url":"adguard-browser-extension/overview/#filters","content":"In essence, filter lists are sets of rules written in a special language. Your ad blocker interpretes the rules and implements them. As a result, you stop seeing ads on your webpages.  All filters are grouped according to their role. For example, there are categories for ad-blocking filters, privacy protection filters, social media-related filters, etc. You can enable either individual filters or the entire group at once.  Custom filters​ While the features of other filter groups are more or less predictable, there is a group called Custom that may raise additional questions.  In this tab, you can add filters that are not present in the extension by default. There are plenty of publicly available filters on the Internet. Moreover, you can create and add your own filters. In fact, you can build any set of filters and customize ad blocking the way you like. To add a filter, just click Add custom filter, enter the URL or the file path of the filter you want to be added and click Next.  "},{"title":"User rules​","type":1,"pageTitle":"Funktionsübersicht","url":"adguard-browser-extension/overview/#user-rules","content":"User rules is another tool that helps you customize the blocking of ads.  There are several ways to add new rules. The most straightforward is to just type a rule in, but it requires some knowledge of the rule syntax. You can import a ready-to-use filter list from a text file as well. Make sure that different rules are separated by line breaks. Note that importing a ready-to-use filter list is better done in the Custom filters tab. Besides, you can export your own filtering rules. This option is good for transferring your list of rules between browsers or devices. When you add a website to the Allowlist (more on that below) or use the Assistant tool for hiding an element on the page, a corresponding rule is also saved in User rules. "},{"title":"Allowlist​","type":1,"pageTitle":"Funktionsübersicht","url":"adguard-browser-extension/overview/#allowlist","content":"The allowlist is used to exclude certain websites from filtering. Blocking rules are not applied to the websites on the list.  The allowlist can be inverted, too: you can unblock ads everywhere except on the websites added to this list. To do that, activate the Invert allowlist option.  You can also import and export existing allowlists. It is useful, for instance, if you want to apply the same allowing rules in each of your browsers. "},{"title":"Stealth Mode​","type":1,"pageTitle":"Funktionsübersicht","url":"adguard-browser-extension/overview/#stealth-mode","content":"Stealth Mode aims to ensure the protection of sensitive personal data from online trackers and fraudsters.  In Stealth Mode, you can prevent a website from seeing the search queries from you used to find it on the Internet, automatically delete third-party and website’s own cookies, etc. A separate article is devoted to all these features. Note that some of the Stealth Mode options available in full-fledged apps are not present in the browser extensions due to technical restrictions. "},{"title":"Other features and options​","type":1,"pageTitle":"Funktionsübersicht","url":"adguard-browser-extension/overview/#other","content":"Apart from the large key modules of AdGuard Browser extension, there are several more specific features that can be configured in the General and Additional settings tabs of the extension settings. "},{"title":"Allgemein​","type":1,"pageTitle":"Funktionsübersicht","url":"adguard-browser-extension/overview/#general","content":"In the General tab, you can allow search ads and the self-promotion of websites, enable the automatic activation of language-specific filters, indicate the filters update interval, etc.  Besides, here you can enable Phishing and malware protection. You can save your settings configuration by clicking the Export settings button. The settings will be saved as a .json file. To upload the previously saved settings configuration, use the Import settings function. You can even use it to quickly switch between different settings profiles or even to transfer settings configurations between different browsers. "},{"title":"Additional settings​","type":1,"pageTitle":"Funktionsübersicht","url":"adguard-browser-extension/overview/#misc","content":"The Additional settings section contains a range of various settings that are related to the ad blocking process and application usability.  From this tab, you can activate optimized filters, enable notifications about extension updates, open the Filtering log, or clear the statistics of blocked ads and trackers. Besides, you can opt to help us with the development of filters by sending the statistics on applied rules: which ones are triggered, on which websites, and how often. This option is disabled by default as we do not collect user data without consent. Yet, if you enable it, all data will be strictly anonymized. "},{"title":"Über uns​","type":1,"pageTitle":"Funktionsübersicht","url":"adguard-browser-extension/overview/#about","content":"In the About section, you can find infos about the current version, links to the EULA and Privacy policy, and to the repository of the Browser extension on GitHub.  "},{"title":"Extension’s main menu​","type":1,"pageTitle":"Funktionsübersicht","url":"adguard-browser-extension/overview/#main-menu","content":"The extension's main page can be accessed by clicking on the extension's icon on the toolbar of your browser.  On the main page, you can hide any element on any page manually (a corresponding rule will be added to the User rules), open the Filtering log to view the complete information about your browser's traffic and block requests on the go, or look at a website’s security report. Besides, you can submit a complaint about any website (for example, if there are missed ads on the page, our filter engineers will review the report and fix the problem) and see the statistics on applied blocking rules. All web requests made by the browser are displayed in the Filtering log, along with detailed information about each request. The Filtering log makes it easy, for example, to monitor requests blocked by AdGuard Browser extension. Besides, it allows you to block any request or add a previously blocked request to Allowlist in two clicks. The Filtering log also offers you a wide variety of options for sorting web requests, which can be helpful when creating your own filtering rules. You can open the Filtering log by selecting the corresponding item in the main menu, or from the settings page (in the &quot;Additional settings&quot; tab). By clicking the icons in the top right corner of the extension's main menu, you can open the extension settings or pause the protection. "},{"title":"AdGuard Browser extension vs. standalone apps​","type":1,"pageTitle":"Funktionsübersicht","url":"adguard-browser-extension/overview/#comparison","content":"The main advantage of AdGuard standalone programs over browser extensions is that the programs can block ads in every browser and in almost all apps. You may use different browsers at the same time, the app will filter ads and online threats in all of them equally well. The second difference is that the possibilities of extension-based ad blockers are strictly limited by browser guidelines. The browser extensions have to conform to the policies of the browsers, where ad blocking might be restricted. Thus, some types of filtering rules are not supported by the extensions. The functionality of the desktop apps is not limited, so they have a better filtering quality. Whereas AdGuard Browser extension is free and easy to install, and has filters to block ads and fight online threats, the full-fledged apps are more powerful and have a list of advanced features. See all the differences in the comparative table below.  1 – within browser restrictions and only in the browser where it is installed; 2 – the extension is unable to detect requests from other extensions. If a malicious or tracking extension sends a request to its server to show you ads or track your activity, AdGuard Browser extension will not be able to block that request; 3 – not all types of ads and threats can be blocked by browser extensions due to certain browser limitations. Some elements may get to the page and slow down the loading process. Besides, unlike browser-based ad blockers, the AdGuard app blocks ads before they are loaded to the browser. This saves traffic and speeds up page loading. "},{"title":"Funktionsübersicht","type":0,"sectionRef":"#","url":"adguard-content-blocker/overview/","content":"Funktionsübersicht AdGuard has two Android apps: AdGuard for Android and AdGuard Content Blocker. AdGuard for Android has a much wider range of functionality: it blocks ads, trackers, and annoyances in browsers and apps, uses filters as well as domain-level ad blocking, and supports user rules. AdGuard Content Blocker has a limited functionality. Full-fledged ad blockers can’t be introduced to Google Play due to the policy of the store. Google Play has banned &quot;apps that block or interfere with another app displaying ads&quot;. Thus, AdGuard for Android can be downloaded on AdGuard's official website only. As an alternative, Google offers to developers the Content blocking API. The API has strict limitations and is currently supported by two browsers: Yandex Browser and Samsung Internet browser. Many complex filtering rules supported in other AdGuard products don't work with this API. AdGuard Content Blocker was designed to fit the Google Play policy framework. Compared to other AdGuard products, AdGuard Content Blocker has less ad blocking capabilities: AdGuard Content Blocker works only in browsers that support the content blocking technology. Currently, there are two: Yandex Browser and Samsung Internet browser.Within the existing technology, the functionality of AdGuard Content Blocker is limited: for example it cannot block ads and trackers in apps or other browsers, has no filtering log and doesn't support filtering at the domain level. However, AdGuard Content Blocker has 35 filters that allow you to block ads, trackers, and annoyances in two supported browsers. You can also customize ad blocking by selecting appropriate language-specific filters or adding user rules. AdGuard Content Blocker is a free open-source software. Its source code is available on GitHub. For a better and more customizable ad blocking experience, try using the full-fledged Android app. AdGuard for Android can be downloaded from our website.","keywords":""},{"title":"Installation","type":0,"sectionRef":"#","url":"adguard-for-android/installation/","content":"","keywords":""},{"title":"Systemanforderungen​","type":1,"pageTitle":"Installation","url":"adguard-for-android/installation/#systemanforderungen","content":"OS version: Android 5.0 or higher. RAM: at least 2 GB. Free disk space: 120 MB. "},{"title":"Installation​","type":1,"pageTitle":"Installation","url":"adguard-for-android/installation/#installation","content":"Most Android-based apps are distributed via Google Play; however, AdGuard is not presented there, because Google prohibits distribution of network-level ad blockers via Google Play, i.e. apps that block commercials in other apps. You will find more information about Google restrictive policy in our blog. That’s why you can only install AdGuard for Android manually. To use the app on your mobile device, you will need to do the following. First of all, allow installing apps from unknown sources in your device’s OS settings. For this you will need to: For Android 8+: start downloading AdGuard apk (see the next step), you'll be prompted to allow permission. Tap Settings in the opened window and enable Allow from this source switch. Then resume the installation.For Android 6 and 7: open Settings, then select Additional settings in System &amp; Device. Switch on Unknown sources and press OK in the system warning window.  For Android 5: open Settings, then select Security in the Personal section. Switch on Unknown sources and press OK in the system warning window.  You can now install the app on your device. Start the browser and type in the following URL: https://adguard.com/apk, or scan this QR code:  You will see the request to save the downloaded file. Press OK.  When the download is complete, the system will ask you if you want to install the AdGuard app. Press Install.  You will then be asked to read the License agreement and AdGuard's Privacy Policy. You can also participate in product development. To do this, you should check boxes Send automatic crash reports and Send technical and interaction data. Tap Accept after that.  Then you'll need to choose between a Quick and Thorough setups.  The latter starts a first launch sequence to configure the app to suit your needs. First, you'll be asked whether you want to enable search ads:  The next step is to block or keep social widgets (e.g. &quot;Like&quot; buttons):  Next is Annoyances: cookie notifications, support windows etc.:  You don't have to choose anything on this screen: just take note of the information on how to watch YouTube videos without ads:  Up next is privacy settings. Choose a desirable protection level:  On the next screen, select whether you want to get notifications about dangerous websites:  The next step is rather important. It's about HTTPS filtering, and we recommend turning it on for the best ad-blocking quality:  The last step is to enable local VPN:  The AdGuard app installation is complete. "},{"title":"Uninstalling/Reinstalling AdGuard​","type":1,"pageTitle":"Installation","url":"adguard-for-android/installation/#uninstallingreinstalling-adguard","content":"If you need to reinstall AdGuard on your mobile device, first delete it by opening Settings and choosing Installed Apps (Android 6), Apps (Android 5 and 7) or Apps &amp; notifications (Android 8+). Find AdGuard in the list of installed apps and press Uninstall.  To reinstall the app, repeat the actions described in the Installation section. "},{"title":"Features overview","type":0,"sectionRef":"#","url":"adguard-for-android/overview/","content":"","keywords":""},{"title":"Ad blocking​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#ad-blocking","content":"Any ad blocker's main purpose is to block ads, and for the majority of AdGuard software ad-blocking algorithms are mostly the same. The mechanism of filtering ads is described here.  The ad-blocking feature is pretty obvious in its concept, but there are some points worthy of a separate mention. Most importantly, AdGuard works as a universal filter sifting through your apps traffic and deciding what to do with this or that web request. The whole process is managed by filters — lists of special rules. The program has a default and constantly updated set of filters but you can also add your own filtering rules and filters to this set. Most mobile ad blockers for Android use this principle, but what is pretty much the whole app in their case is only one of the many features for AdGuard. Read this comparative article to learn the differences between AdGuard and other ad blockers. "},{"title":"Filters​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#filters","content":"The program uses a lot of different filters, our own and third-party ones, sorted by language and their purpose. For example, filters in the Annoyances category are very different from the language-specific ones.  Find out more about all the filters available for AdGuard products by reading their descriptions in the app or this comprehensive article. "},{"title":"Custom filters​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#custom-filters","content":" AdGuard allows you to create your own custom filters, using the same type of rules that we have in our filters. If you want to try your hand at this, we would recommend studying the article on creating your own ad filters which describes the AdGuard rules syntax in detail and provides plenty of examples. Tip: use the Import feature to transfer your rules to a different device. "},{"title":"HTTPS-Filterung​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#https-filtering","content":"Nowadays almost all websites work via HTTPS, the web protocol where the last S letter stands for &quot;secure&quot;. It happened so that most advertisers use this protocol as well, this is why HTTPS filtering is really crucial for a modern ad blocker.  To be able to filter HTTPS traffic, AdGuard needs to install a certificate into your device's user storage. On older versions of Android OS this was done automatically during the onboarding process or later via AdGuard settings, and it only required a couple of taps. On Android 11 and later automatic certificate installation is no longer available. Now you need to install the certificate manually. Here is the installation instruction: Go to the app's main screen and tap Turn on next to the HTTPS filtering is off message (it will be highlighted in orange if the AdGuard certificate is not installed yet). A new screen will appear, tap Next, Next and Save it now when prompted to download the AdGuard certificate. After the certificate is downloaded, you will see a new screen. Tap Open security settings. This will bring up system settings. Scroll down to Advanced, open it and then tap Encryption &amp; credentials (these settings may be called variously on different devices — the main thing is to choose advanced security settings). Tap Install certificate and then CA certificate. A warning message will appear. Read through it and tap Install anyway to proceed. Select the recently downloaded AdGuard certificate. A CA certificate installed toast message should show up. The AdGuard certificate is successfully installed and HTTPS filtering is working now! If you update from Android 10 to Android 11, there's a chance that the already installed certificate will still be accepted. Otherwise, the HTTPS filtering is off warning will appear on the main screen, highlighted in orange. So you'll need to go through the same process of reinstalling the certificate manually. In case you have problems with the certificate installation, read this article or contact our support team at support@adguard.com. We want to emphasize that AdGuard Ad Blocker will function without HTTPS filtering. However, it won't be able to properly filter ads on sites that use the HTTPS protocol (most of sites do that). So if you want to use the full functionality of the app and get the best ad filtering quality and processing speed, we strongly recommend you to activate HTTPS-filtering. "},{"title":"Stealth Mode​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#stealth-mode","content":"Many websites gather information about their visitors, such as their IP addresses, information about the browser and operating system installed, screen resolution, and even what page the user came or was redirected from. Some web pages use cookies to mark the browser and save your personal settings, user preferences, or &quot;recognize&quot; you upon your next visit. Stealth Mode safeguards your personal information from such data and statistics gathering systems. You can flexibly adjust the work of Stealth Mode: for instance, you can prohibit the website to receive the search request you used to find it on the Internet, automatically delete both third-party and website’s own cookies, and disable location sharing in your browser that can be used to track your whereabouts. To learn all the main features and options you can manage in the Stealth mode settings, read this article.  "},{"title":"Browsing Security​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#browsing-security","content":"Phishing is a fraudulent online practice aimed at obtaining sensitive information like usernames, passwords, credit card details and such from internet users. This form of fraud, effected through spoof emailing and fake websites posing as trusted mediums like banks, social services etc., is causing more financial damage every year. As for malware (malicious software), it is as the name suggests — any type of software designed with the intent to damage the personal computer or other device it gets into. What once began as a prank now is a tool to steal confidential information from users and businesses.  Fortunately, AdGuard's Browsing Security module protects you from visiting phishing and malicious websites. It also warns you about malware being downloaded onto your device. In case you want to learn more about Browsing Security, read this article. But note that AdGuard for Android is not an antivirus. It will neither stop the actual download of a virus nor delete the already existing ones. For the complete protection of your device, we recommend using AdGuard in tandem with a dedicated AV tool.  At the same time, we'd like to emphasize that your personal data is not transferred anywhere, and AdGuard does not know which websites you are visiting. The security check is not performed against an open web address (URL) but through hash prefixes (hash is a certain data structure that renders unambiguous each address added to the base). However, you can send us information on the websites you visit to improve the database, if you opt to. Learn more about AdGuard's phishing and malware protection. Control your apps One of the main stated purposes of AdGuard for Android is to give users back the full control over their devices. With AdGuard, you can see comprehensive information about all web requests coming through your device. No app will be able to go online without you knowing. "},{"title":"Apps management​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#apps-management","content":"In the Apps Management module you can choose which apps should have Wi-Fi or mobile data access, which will be filtered by AdGuard and which not. You can also change the background Internet access rules for your apps when the screen is locked. These settings can be applied to all installed apps at once or on the individual basis.  You can find extra settings in the upper right corner of the Apps Management screen. They will help you fine-tune AdGuard for Android to your preference. For example, you can make the common settings applicable to each and every app, or select the apps which need a more detailed approach.  By tapping the icons, you will see a screen showing app-specific traffic to help you make more informed decisions. AdGuard is of help not only with ad filtering and privacy protection, it can aid your device function better, saving battery life and traffic as well. "},{"title":"Filtering log​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#filtering-log","content":"In the Filtering Log, you can directly observe all web requests made by browsers and apps. Thanks to this feature, you have full control over all processes on your device.  You can block each request right there in one tap (or unblock it, if the request is already blocked). There's also detailed information about each request, although it is mostly aimed at the advanced users, particularly those who create their own filtering rules. We will be elaborating on it just a bit further below. "},{"title":"User rules​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#user-rules","content":"As mentioned above, AdGuard for Android uses a set of filters to block ads. And then there is the User rules section that allows you to create and adjust your own filtering rules. It is located in the Settings tab of the AdGuard menu.  When you first install AdGuard, the User rules section is empty. To fill it with rules, you will need to understand the basics of the rules syntax. Don't worry if you are not familiar with it, here's a good place to start should you feel an urge to delve deeper into custom rules creation. By the way, whenever you use Filtering Log to block anything, a corresponding rule will appear in User rules, so use it if you ever want to undo the blocking. And generally speaking, Filtering Log and User rules go together particularly well: you can use the former to monitor requests in order to build a correct rule for the User rules. "},{"title":"DNS filtering​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#dns-filtering","content":"The DNS Filtering module allows to configure DNS settings on the user's device, including the chosen DNS server, DNS protocol, and DNS filters that block ads and trackers.  A bit of a theory refresher: DNS stands for &quot;Domain name system&quot;, and its purpose is to translate domain names into something browsers can understand, i.e. IP addresses. So, each time you go to a website, your browser sends a DNS request to a server, usually determined by your ISP. That server either redirects the request to another (upstream) server or replies with an IP address. If you use a special DNS server instead of a default one, it can send unsafe and potentially dangerous requests to the &quot;void&quot;. Thus, the responses with the IP addresses won't be received and &quot;bad requests&quot; will be nipped in the bud. DNS filtering has its own separate tab within the AdGuard for Android app home screen. Here you can choose which type of DNS you wish to use (it can be either regular DNS or high-security DNS — we will get to that later on) as well as enable DNS-level blocking. "},{"title":"DNS blocking​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#dns-blocking","content":"DNS blocking is a standalone feature that complements AdGuard protection suite.  There are two methods of DNS blocking: Some DNS servers can block DNS requests to potentially harmful domains.There is built-in DNS filtering that works right on your device and can block DNS requests, in addition to what's blocked by the selected DNS server. How exactly does DNS filtering work? It has a special DNS filter which contains a large list of ad and tracker domains, which it uses in conjunction with User rules to recognize 'bad' requests. Every request is checked against this filter, and if there's a hit, instead of forwarding it to the DNS server, it is being rerouted to a 'blackhole'. The simplicity of this approach is both a benefit and a disadvantage. The main advantage of this approach is that it's both battery life friendly and traffic-saving. Once a domain is blocked, it won't be requested again within an hour. The disadvantage would be the &quot;roughness&quot; of this method: specific URLs can't be blocked, only whole domains. Sometimes the only way to block ads by DNS is to add a rule that will break something at the same time. In this case, we just don't add this rule and the ad remains unblocked — because the alternative where the website does not work at all is even worse. "},{"title":"DNS servers​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#dns-servers","content":"But AdGuard for Android &quot;DNS package&quot; does not end just there. One of the useful perks is an option to select absolutely any DNS server to use. At your service is a list consisting of dozens of servers to choose from, from our own AdGuard DNS servers to other popular providers like Google DNS, Cloudflare and others. On top of that, if your favorite server is not in the default list, you still can enter its address manually and use it anyway. See the comprehensive list of popular DNS providers — you can find many DNS servers there and any to AdGuard with a tap of a finger. There are several reasons to use a custom DNS server instead of one offered by your ISP by default. Some servers are faster, some provide ad blocking or parental control solutions, some enhance your privacy etc. But DNS servers not only vary by function. Besides, they can also differ by supported protocol types. There are three main types of protocols that DNS servers work over: HTTPS, TLS, and QUIC. Correspondingly, there are DNS-over-HTTPS (DoH), DNS-over-TLS (DoT) and DNS-over-QUIC (DoQ). While the first two are standard protocols, the third (DoQ) is experimental, yet the most outstanding one. We'll describe it later. Choosing a DNS server from a trusted provider is essential to protect DNS traffic. When user's DNS traffic is safe, their privacy and security are increased, and it's easier to prevent eavesdropping and manipulation of DNS data via man-in-the-middle attacks (MITMs). "},{"title":"DNS-over-QUIC​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#dns-over-quic","content":"DNS-over-QUIC (DoQ) is a rather new encryption protocol and AdGuard DNS is the first public resolver that supports it. Unlike DoH and DoT, it uses QUIC as a transport protocol and finally brings DNS back to its roots — working over UDP. It brings all the good things that QUIC has to offer — out-of-the-box encryption, reduced connection times, better performance when data packets are lost. Also, QUIC is supposed to be a transport-level protocol and there are no risks of metadata leaks that could happen with DoH. To learn more about DNS-over-QUIC, check out this article dedicated entirely to it. To enable DoQ in AdGuard for Android, perform the following steps: Open the app, then open the side menuGo to Settings → DNS Filtering and enable itSelect any of AdGuard DNS servers from the list of available serversUnder Server type choose DNS-over-QUIC "},{"title":"DNS user filter​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#dns-user-filter","content":"It is very much like the regular User filter, but for DNS requests.  You'll find DNS user filter at Settings → DNS Filtering → DNS Requests blocking. DNS User filter supports two types of syntax: a limited portion of AdGuard syntax and &quot;hosts&quot; syntax. You can read more about it in our Knowledge Base. "},{"title":"Custom DNS filters​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#custom-dns-filters","content":"You can add any custom DNS filters or custom hosts lists. A useful feature considering how popular hosts lists are among Internet users.  This option is available on the Settings → DNS Filtering → DNS Requests blocking screen. "},{"title":"Proxy and TOR​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#proxy-and-tor","content":"A proxy server is basically another computer serving as a hub that processes your internet requests. You can set up AdGuard to route all your device's traffic through any proxy — and you'll be able to configure the whole thing right inside the app. And here is an instruction on how to set up a proxy. Some popular VPN providers offer an alternative way to use their service as a proxy. This can be used to run them alongside AdGuard in local VPN mode.  Contrary to a popular opinion, using a proxy server is not just about bypassing access restriction to geoblocked resources. It is about security! If you are using a proxy server, intruders won't know what websites you visit. You can also use AdGuard along with the anonymity network TOR (we have already integrated AdGuard with Tor for your convenience!). Here is a Wiki article where the whole concept of TOR network is nicely explained in case you wish to find out more. "},{"title":"Extensions support​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#extensions-support","content":"Userscripts (we also call them extensions) are basically mini-programs written in JavaScript that extend the functionality of one or more websites. Usually, you'd need some special userscript manager to add them, and it's traditionally more of a desktop thing. But with AdGuard everything is possible! Now you can add any userscripts by URL or load them from a file, and AdGuard will serve as a userscript manager and take care of the rest. Go to Settings → Extensions to enable some of the pre-installed extensions or to add custom userscripts.  By the way, you can tap any added userscript to see more details, and to reinstall or delete it. "},{"title":"Compatibility with AdGuard VPN​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#compatibility-with-adguard-vpn","content":"The best kind of compatibility is when you install two apps and they just start working together. Presuming you already have AdGuard Ad Blocker installed, just download AdGuard VPN from Play Store (you can get there right from the ad blocker app, there's an item in General settings).  Both apps will detect each other and do everything that's needed for smooth joint work. All that will be left for you is to enjoy both ad-free Internet and the benefits of a VPN. It also works the other way around just as well: install AdGuard Ad Blocker on top of an already-running AdGuard VPN and you're good. If you'd like to disable Compatibility Mode for any reason, it's very simple to do so from AdGuard Ad Blocker settings, just toggle the switch. Additionally, you can add AdGuard Ad Blocker and AdGuard VPN tiles to your device's notification bar and toggle them in one tap at your own will — thanks to Compatibility Mode the configuration will change immediately and silently. "},{"title":"Lizenz​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#lizenz","content":"While some ot the features in AdGuard for Android are free, others require purchasing a license. There are Personal (up to three devices) and Family (up to 9 devices), Yearly and Lifetime license keys. The premium version offers the following features to its users: Stealth ModeBrowsing securityExtensionsAd blocking in all apps (not only browsers)Custom filters Read this article to learn how to activate the license key. "},{"title":"Other features​","type":1,"pageTitle":"Features overview","url":"adguard-for-android/overview/#other-features","content":"There are too many features to describe them all in detail, so let us simply list them here: When you visit certain screens for the first time, there will appear tooltips that describe the purpose of that screen and its main featuresYou can export or import AdGuard settings (for a faster switch between the settings profiles or to transfer your profile between different devices)Select an update channel, i.e. the mode in which the application receives its updates (stable release channel, less stable beta channel and raw &quot;nightly&quot; channelBy tapping a little battery icon on the main screen of the app you will get to the &quot;Battery Usage&quot; screen. System battery stats are often wrong, so we decided to have our own, one that would reflect the real state of thingsYou can change the app's language in the General Settings tab "},{"title":"How to protect AdGuard from being disabled by the system","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/background-work/","content":"","keywords":""},{"title":"Asus​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#asus","content":"Information on Asus devices is still far from being exhaustive so there may be more issues than listed here. We're going to update this part of the article when we know more. The main source of potential problems with background work on Asus devices is associated with the optimization app called Power Master. It is pre-installed and has pretty aggressive default settings, e.g. to block apps from starting and to kill background tasks when your screen turns off. To make sure apps background processing works, set up the following: 1) Go to Mobile Manager → PowerMaster → Settings (or Battery-saving options) → Uncheck Clean up in suspend 2) Go to Mobile Manager → PowerMaster → Settings (or Battery-saving options) → Uncheck Auto-deny apps from auto starting Alternatively, instead of unchecking Auto-deny apps from auto starting entirely, you can go to Settings → Battery-saving options → Auto-start manager → AdGuard and uncheck it. "},{"title":"Xiaomi​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#xiaomi","content":"Xiaomi (and especially MIUI) devices are among the most troublesome ones when it comes to background work. They are known to limit background processes and have non-standard permissions with a lack of proper documentation to top it off. Sometimes apps just don't work right on Xiaomi phones and there's little that can be done about that. Below are some actions you might attempt to perform if you run into any trouble regarding AdGuard's background work on various Xiaomi devices. "},{"title":"MIUI 12.0.8+​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#miui-1208","content":"To let your AdGuard app run successfully in the background, do the following: In Settings → Apps → Manage apps → scroll down to locate AdGuard, set Autostart to &quot;On&quot;.  Scroll down to Battery saver, tap it, and set to &quot;No restrictions&quot;.  In Other Permissions, set all possible permissions to &quot;On&quot; Run the Security app. Tap on the Gear icon at the top-right corner of the screen.  Tap Boost speed in Feature Settings.  Tap Lock apps.  In the Lock apps screen, set the toggle switch for the AdGuard app to On.  That’s all! You’ve successfully pinned the AdGuard app. "},{"title":"MIUI 12​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#miui-12","content":"Go to Settings → Apps → Manage apps → AdGuard.  Set Autostart to &quot;On&quot;Set all possible permissions in Other Permissions to &quot;On&quot;Set Battery saver to No restrictions  Now launch the active apps manager by swiping up from the bottom of the screen and look for the AdGuard app.  Tap and hold it until a special menu pops up. Select a lock icon.  The lock icon should appear above the app window.  "},{"title":"MIUI 10-11​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#miui-10-11","content":"To let your app run successfully in the background, configure its settings as follows: Set Autostart to &quot;On&quot;  Settings → Battery &amp; performance → switch-off Battery saver function  Then open App battery saver settings → AdGuard → No restrictions  "},{"title":"All models​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#all-models","content":"The following steps should be performed on any Xiaomi device that keeps killing the AdGuard app: Power management​ Please enable: Settings → Advanced Settings → Battery manager → set Power plan to PerformanceDevice Settings → Advanced Settings → Battery Manager → Protected apps – AdGuard needs to be ProtectedDevice Settings → Apps → AdGuard → Battery → Power-intensive prompt and Keep running after screen offSettings → Additional Settings → Battery &amp; Performance → Manage apps’ battery usage and here: Switch Power Saving Modes to &quot;Off&quot;Choose the following options: Saving Power in The Background → Choose apps → AdGuard → Background Settings → No restrictions App battery saver​ Set Security → Battery → App Battery Saver → AdGuard to No restriction App pinning​ To set up AdGuard's background work for Xiaomi devices you should pay attention to Battery and Permissions. Tap the Recent tasks button and swipe AdGuard down to make options visible (as shown on the screenshot):  Tap on the lock icon. This will stop Xiaomi from closing AdGuard automatically. It should look like this:  Go to Battery Select the battery saver app Find and select AdGuard Set up the following Background settings:  Go to Permissions Select Autostart Make sure that autostart function is enabled for AdGuard:  "},{"title":"Samsung​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#samsung","content":"On many Samsung devices, any app that is unused for 3 days will not be able to start from background. You should turn off Adaptive battery and Put apps to sleep options wherever possible to prevent that. Note that after an app or OS update, these settings often revert to their default values and will need to be turned off again. "},{"title":"Android 11+​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#android-11","content":"On Android 11, Samsung will prevent apps (including AdGuard) from working in background by default unless you exclude them from battery optimizations. To make sure AdGuard will not get killed in the background: Lock AdGuard in Recent Open Recent apps.Find AdGuard.Long-press the icon of the AdGuard app. To keep AdGuard working properly: Go to Settings → Apps → AdGuard → Battery → Optimize battery usage  In the drop-down menu, select All. Then find AdGuard on the list and set the state for it to Don’t optimize (on some models, there may be a switch that you need to toggle off).  On some devices, the relevant setting may be named differently and be located in other places. Among the possible paths is: Settings → Apps → (⁝) menu → Special Access → Optimize battery usage → Find AdGuard on the list and uncheck it Disable automatic optimization. To do so: Open Battery → (⁝) menu → Choose Automation → Toggle off all of the settings there Again, the exact path may differ, for example on some devices you should go to: Phone Settings → Device care → Tap the (⁝) 3-dot menu → Advanced → Disable Auto optimization and Optimize settings If your phone has it, disable Adaptive battery: Open phone Settings → Battery → More battery settings → Toggle off Adaptive battery Disable Sleeping apps (the exact name of this setting and the path to it may vary depending on the device): Open phone Settings → Battery → Background usage limits → Disable Put unused apps to sleep "},{"title":"Android 9 & 10​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#android-9--10","content":"Go to Phone settings → Device care → Tap on the Battery item → (⁝) 3-dot menu → Settings and uncheck Put unused apps to sleep and Auto-disable unused apps. Check that Phone settings → Apps → Sleep as Android → Battery → Background restriction is set to App can use battery in background for AdGuard. Remove AdGuard from Sleeping apps. To do that: Go to Phone settings → Device care  Tap Battery  Tap the 3-dot menu → Settings  Tap Sleeping apps  Wake up AdGuard using the trashcan icon  "},{"title":"Old Samsung devices​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#old-samsung-devices","content":"For early Samsung devices, there is no huge need for setting up the background operation, but if in your case the AdGuard app is getting closed or disappears from the recent tasks after a while, do the following: Tap the Recent tasks button, tap the Additional settings icon. It should look like this: Tap Lock Apps: Tap on the lock icon "},{"title":"Huawei​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#huawei","content":"Huawei and their Android customization EMUI belongs to the most troublesome on the market with respect to non-standard background process limitations. On default settings, virtually all apps that work in background will face problems and ultimately break. "},{"title":"App Launch on some EMUI 8, 9 and 10 devices (Huawei P20, Huawei P20 Lite, Huawei Mate 10…)​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#app-launch-on-some-emui-8-9-and-10-devices-huawei-p20-huawei-p20-lite-huawei-mate-10","content":"This feature may or may not be available for all devices or may be labeled differently. Go to phone Settings → Battery → App launch  Turn off Manage all automatically  Set AdGuard to Manage manually and enable all toggles.  Disable Startup manager that prevents apps from running automatically after the phone starts up. Go to Settings → All → Startup manager → Toggle AdGuard off Also for reliable background processes you may need to uninstall PowerGenie as detailed below. "},{"title":"EMUI 9+ devices and PowerGenie​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#emui-9-devices-and-powergenie","content":"Note: On phones with EMUI 9+ (Android P+) there is a task killer app called PowerGenie which forces to quit all apps not whitelisted by Huawei and does not give users any configuration options. See below how to uninstall it. Huawei is extremely inventive in breaking apps on their devices. In addition to all the non-standard power management measures described below, they introduced a task killer app built right into EMUI 9 on Android Pie. It is called PowerGenie and it kills all apps that are not on its whitelist. You cannot add custom apps on their pre-defined whitelist. This means there is no other way to achieve proper app functionality on Huawei than uninstalling PowerGenie. Unfortunately, this is a system app that can only be fully uninstalled using ADB (Android Debug Bridge). Source: XDA forum. You need to: It is not confirmed, but it might be possible to just disable PowerGenie in Phone settings → Apps. If this setting is present in your device's settings, you may skip the following steps. However, it would need to be re-applied every time you reboot your device. If there is no such setting, follow this instruction: 1) Install ADB on your computer; 2) Connect your phone with a data cable; 3) Enable Developer options; 4) Enable USB debugging within Developer options on your phone; 5) Run the following commands on your computer: adb shell pm uninstall --user 0 com.huawei.powergenie adb shell pm uninstall -k --user 0 com.huawei.android.hwaps If AdGuard keeps getting killed, also try running adb shell pm stopservice hwPfwService "},{"title":"EMUI 6+ devices (and some EMUI 5 devices):​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#emui-6-devices-and-some-emui-5-devices","content":"Phone settings → Advanced Settings → Battery manager → Power plan set to Performance;Phone Settings → Advanced Settings → Battery Manager → Protected apps – set AdGuard as Protected;Phone Settings → Apps → Your app → Battery → Power-intensive prompt [uncheck] and Keep running after screen off [check];Phone settings → Apps → Advanced (At the bottom) → Ignore optimizations → Press Allowed → All apps → Find AdGuard on the list and set to Allow. Huawei P9 Plus:​ Open device settings → Apps → Settings → Special access → choose Ignore battery optimization → select Allow for AdGuard. "},{"title":"Huawei P20, Huawei Honor 9 Lite and Huawei Mate 9 Pro:​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#huawei-p20-huawei-honor-9-lite-and-huawei-mate-9-pro","content":"Open device settings → Battery → App launch&gt; then set AdGuard to Manage manually and make sure everything is turned on. "},{"title":"Huawei P20, Huawei P20 Lite, Huawei Mate 10:​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#huawei-p20-huawei-p20-lite-huawei-mate-10","content":"Phone settings → Battery → App launch and then set AdGuard to Manage manually and make sure everything is turned on. Also for reliable background processes you may need to uninstall PowerGenie as described above. "},{"title":"Early Huawei​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#early-huawei","content":"Old Huawei devices are the easiest to set up, it is enough to perform two simple steps to lock AdGuard in the background so it won't be terminated by battery saving or background killer process. Tap the Recent tasks button: Tap on the lock icon: Besides, to set up the background work of AdGuard more effectively, you should open device settings and do the following: Go to Settings → open Battery Manager → set Power plan to Performance;Then choose Protected apps in the Battery Manager and check if AdGuard is Protected;Go to Apps in the main settings and click AdGuard there → choose Battery → enable Power-intensive prompt and Keep running after screen is off;Then in the Apps section open Settings (at the bottom) → Special access → choose Ignore battery optimization → press Allowed → All apps → find AdGuard on the list and set it to Deny. "},{"title":"Meizu​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#meizu","content":"Meizu has almost the same approach to the background process limitations as Huawei and Xiaomi. So you can avoid disabling the background work of AdGuard and any other app by adjusting the following settings: Go to Advanced Settings → open Battery Manager → set Power plan to Performance;Then choose Protected apps in the Battery Manager and check if AdGuard is Protected;Go to Apps section and click AdGuard there → choose Battery → enable Power-intensive prompt and Keep running after screen is off. "},{"title":"Nokia​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#nokia","content":"Nokia devices running Android 9+ have The Evenwell Power saver disabled, which was the main culprit for killing bacground processes. If AdGuard still gets killed on your Nokia phone, check out the legacy instruction. "},{"title":"Nokia 1 (Android Go)​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#nokia-1-android-go","content":"1) Install ADB on your computer; 2) Connect your phone with a data cable; 3) Enable Developer options; 4) Enable USB debugging within Developer options on your phone; 5) Uninstall the com.evenwell.emm package via the following adb commands: adb shell pm uninstall --user 0 com.evenwell.emm "},{"title":"Nokia 3.1 and 5.1​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#nokia-31-and-51","content":"On these devices there is a task killer called DuraSpeed that terminates all background apps. It can't be uninstalled or disabled by regular means. These actions require ADB, and even then, when disabled, DuraSpeed will re-enable itself on reboot. You need a tasker app like MacroDroid for automatic DuraSpeed's disabling. 1) Install ADB on your computer; 2) Connect your phone with a data cable; 3) Enable Developer options; 4) Enable USB debugging within Developer options on your phone; 5) Grant MacroDroid (or your choice of automation app) the ability to write to the global settings store by entering this command: adb shell pm grant com.arlosoft.macrodroid android.permission.WRITE_SECURE_SETTINGS 6) Create a task triggered at Device Boot that performs the following: System Setting: type Global, name setting.duraspeed.enabled, value -1System Setting: type System, name setting.duraspeed.enabled, value -1System Setting: type Global, name setting.duraspeed.enabled, value 0System Setting: type System, name setting.duraspeed.enabled, value 0  NOTE: You need both Global and System type settings. The screenshot shows only Global as an example. "},{"title":"Other Nokia models​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#other-nokia-models","content":"Go to phone Settings → Apps → See all apps. Tap on the right top corner menu → Show system. Find Power saver app on the list, select it and tap Force close. It will remain stopped for a while but will restart at some point. From now on, AdGuard should work normally and use the standard Android battery optimizations until Power Saver restarts. An alternative, more permanent solution for more tech-savvy users: 1) Install ADB on your computer; 2) Connect your phone with a data cable; 3) Enable Developer options; 4) Enable USB debugging within Developer options on your phone; 5) Uninstall the com.evenwell.powersaving.g3 package via the following adb commands: adb shell pm uninstall --user 0 com.evenwell.powersaving.g3 "},{"title":"Oppo​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#oppo","content":"Sometimes background services are being killed (including accessibility services, which then need re-enabling) when you turn the screen off. So far, a workaround for this is: Go to Security Centre → tap Privacy Permissions → Startup manager and allow AdGuard app to run in background. Other solutions: Pin AdGuard to the recent apps screenEnable AdGuard in the app list inside the security app’s &quot;startup manager&quot; and &quot;floating app list&quot; (com.coloros.safecenter / com.coloros.safecenter.permission.Permission)Turn off battery optimizations "},{"title":"OnePlus​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#oneplus","content":"Devices with OxygenOS on board are the most problematic, with its OS-specific cache cleaning and free RAM, including OS optimization. In addition, OxygenOS can interrupt the AdGuard's work if you do not use it for a while. To avoid these unwanted consequences, follow these steps. "},{"title":"Locking the app​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#locking-the-app","content":"Go to Settings Battery → Battery optimization Find AdGuard Tap on it and select Don't optimize option Tap Done to save Open recent apps menu (as showed on this screenshot): Lock AdGuard app:  On some OnePlus phones there is also a thing called App Auto-Launch and Deep Optimization which essentially prevents apps from working in the background. Please disable it for AdGuard. "},{"title":"Battery optimization​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#battery-optimization","content":"Open device settings → Battery → Battery optimization → switch to the All apps list (top menu) → choose AdGuard → activate Don’t optimize Open device settings → Battery → Battery Optimization → (⁝) three-dot menu → Advanced Optimization → Disable Deep Optimization "},{"title":"App Auto-Launch​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#app-auto-launch","content":"App Auto-Launch (on some OnePlus phones) essentially prevents apps from working in the background. Please disable it for AdGuard. "},{"title":"Enhanced / Advanced optimization​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#enhanced--advanced-optimization","content":"For OnePlus 6 and above: Open System settings → Battery → Battery optimization → (⁝) three-dot menu → Advanced optimizationDisable Deep optimization / Adaptive BatteryDisble Sleep standby optimization. OnePlus tries to learn when you are usually asleep, and in those times it will then disable the phone’s network connections. This setting will prevent push notifications from being delivered. For OnePlus below 6: Turn off System settings → Battery → Battery optimization → (⁝) three-dot menu → Enhanced optimization. "},{"title":"Recent apps clearing behaviour​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#recent-apps-clearing-behaviour","content":"Normally when you swipe an app away, it won’t close. On OnePlus this may however work in a different way. Recent app clear behaviour manager might be set up in a way that swiping the app to close will kill it. To return it to the &quot;normal&quot; mode: Go to Settings → Advanced → Recent app management → Switch to Normal clear "},{"title":"Sony​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#sony","content":"Sony was the first mobile OS developer to introduce non-standard background process optimization. It is called Stamina mode and it instantly breaks all background processes if enabled. To solve this: Go to Settings → Battery → Disable STAMINA mode  On Android 11+, on the same screen with STAMINA mode, there is a setting called Adaptive battery, you should disable it too. You also need to be set AdGuard as Excepted from Power-saving feature: System settings ​→ Apps &amp; Notifications ​→ Advanced ​→ Special app access ​→ Power saving feature → Switch AdGuard to Excepted "},{"title":"Wiko​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#wiko","content":"Wiko devices are problematic in terms of non-standard background process optimizations. To let AdGuard work in background, do the following: Go to Phone Assistant → Battery → turn off Eco ModeGo back and go to Manual modeTap on the Gear icon on top right → Background apps whitelist → Select AdGuard "},{"title":"Android stock devices Pixel/Nexus/Essential​","type":1,"pageTitle":"How to protect AdGuard from being disabled by the system","url":"adguard-for-android/solving-problems/background-work/#android-stock-devices-pixelnexusessential","content":"Android stock OS normally does not conflict with apps working in the background, but if you are facing any issues you will need to switch on the Always-on VPN mode. Go to Settings → Network and Internet Tap VPN and choose AdGuard Set up Always-on VPN mode "},{"title":"Battery and traffic consumption issues","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/battery/","content":"","keywords":""},{"title":"Own battery usage stats screen​","type":1,"pageTitle":"Battery and traffic consumption issues","url":"adguard-for-android/solving-problems/battery/#own-battery-usage-stats-screen","content":"To mitigate this misconception, we added a new screen called 'Battery usage'. You can access it by tapping on the battery icon in the top right corner of the main screen.  Inside you will find a chart that shows the AdGuard battery resource consumption within the last 24 hours, with an option to get more detailed hour-to-hour data by tapping on the dots on the chart. Besides that, there’s also a numeric breakdown of the relevant data and a short technical explanation. "},{"title":"Real example​","type":1,"pageTitle":"Battery and traffic consumption issues","url":"adguard-for-android/solving-problems/battery/#real-example","content":"On the screenshots below you can see the battery resource consumption statistics for a night and subsequent morning:   From these screenshots you can see that: AdGuard, as expected, is at the top of the chart. This is generally typical for smartphones (and not at all for tablets without 4G, since WiFi is much less 'costly' in terms of battery consumption). Pay attention to the number of sent Mobile and WiFi packages, which were attributed to AdGuard (Mobile packets sent и Wi-Fi packets sent) on the second screenshot. On the third screenshot are stats for one of the real traffic consumers, Yandex.Browser. It was not attributed almost any traffic at all, while in reality 70% of the total traffic was consumed by it. "},{"title":"How much battery resource does AdGuard really consume?​","type":1,"pageTitle":"Battery and traffic consumption issues","url":"adguard-for-android/solving-problems/battery/#how-much-battery-resource-does-adguard-really-consume","content":"First, let us lay down a little bit of theory and links with necessary data. Android derives traffic consumption judging on so-called Power Profile, which is given by every manufacturer: https://source.android.com/devices/tech/power/values.html Main part of Power Profile is a set of values in mAh which define battery consumption for every component of the device: https://source.android.com/devices/tech/power/values.html For example, from the table above: wifi.active= 31mA additional consumption in mAh caused by WiFi data exchange. radio.active= 100-300mA additional consumption in mAh caused by data exchange over Mobile network. cpu.active= 100-200mA additional consumption in mAh caused by CPU work. AdGuard by itself almost doesn't consume any traffic, so for the sake of evaluating battery resource consumption let's get rid of 'Mobile/WiFi packets' and stcik to 'CPU'. Formulа to calculate the consumption: &quot;CPU TIME (ms)&quot; X &quot;cpu.active&quot; / (60 60 1000) = &quot;POWER USE mAh&quot; Let's put real numbers into this formula. Let's take CPU total from the second screenshot and convert into milliseconds: 506000 A coefficient cpu.active for 2GHz will be roughly equal to 225mAh Final result 506000 225 / (60 60 * 1000) = 31,625mAh "},{"title":"Conclusion​","type":1,"pageTitle":"Battery and traffic consumption issues","url":"adguard-for-android/solving-problems/battery/#conclusion","content":"Real consumption is several times less than it is shown in Android statistics. Instead of 220mAh it should be somewhere around 31-40mAh. On the other hand, browser's consumption should be not 66mAh, but ~200mAh. "},{"title":"Known compatibility issues with Android apps","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/compatibility-issues/","content":"","keywords":""},{"title":"VPN apps​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#vpn-apps","content":"Other VPN apps are incompatible with AdGuard running in the Local VPN filtering mode since you cannot have two active VPNs at the same time. To solve this problem we suggest you: use AdGuard VPN — it has Integrated mode that allows two apps to operate seamlesslyuse AdGuard in Local HTTP Proxy mode. Please note that 'manual' HTTP Proxy mode is not supported on devices since Android 10if you use a third-party VPN app, figure out whether it supports SOCKS4/SOCKS5 mode. If it does, you can configure your VPN app to work as outbound proxy and set up local outbound proxy with params from the third-party app. For instance, AdGuard can be automatically configured with 'Orbot: Proxy with Tor' "},{"title":"Private DNS​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#private-dns","content":"The Private DNS feature was introduced in Android Pie. Before version Q, Private DNS didn't break AdGuard DNS filtering logic and the DNS forwarding through AdGuard worked normally. But starting from version Q, the presence of Private DNS forces apps to redirect traffic through the system resolver instead of AdGuard. See Android devs blog for more details. Some device manufacturers keep Private DNS settings hidden and set 'Automatic' mode as a default one. Thus, disabling Private DNS is impossible but we can make the system think that the upstream is not valid by blocking it with a $network rule. For instance, if the system uses Google DNS by default, we can add rules |8.8.4.4^$network and |8.8.8.8^$network to block Google DNS. "},{"title":"Unsupported browsers​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#unsupported-browsers","content":""},{"title":"UC Browsers: UC Browser, UC Browser for x86, UC Mini, UC Browser HD​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#uc-browsers-uc-browser-uc-browser-for-x86-uc-mini-uc-browser-hd","content":"To be able to filter HTTPS traffic, AdGuard requires the user to add a certificate to the device's trusted user certificates. Unfortunately, UC-family browsers don't trust user certificates, so AdGuard cannot perform HTTPS filtering there. Solution Requires root access. To solve this problem, move the certificate to the system certificate store. "},{"title":"Opera mini: Opera mini, Opera mini with Yandex​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#opera-mini-opera-mini-opera-mini-with-yandex","content":"Opera mini drives traffic through a compression proxy by default and AdGuard is not able to decompress and filter it at the same time. Solution There is no solution at this moment. "},{"title":"Dolphin Browser: Dolphin Browser, Dolphin Browser Express​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#dolphin-browser-dolphin-browser-dolphin-browser-express","content":"AdGuard cannot filter its traffic when operating in Manual proxy mode because this browser ignores system proxy settings. Solution Use Local VPN filtering mode. "},{"title":"Puffin Browser: Puffin Browser, Puffin Browser Pro​","type":1,"pageTitle":"Known compatibility issues with Android apps","url":"adguard-for-android/solving-problems/compatibility-issues/#puffin-browser-puffin-browser-puffin-browser-pro","content":"Puffin Browser drives traffic through a compression proxy by default and AdGuard is not able to decompress and filter it at the same time. Solution There is no solution at this moment. "},{"title":"Manual installation of the security certificate into the Firefox browser","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/firefox-certificates/","content":"","keywords":""},{"title":"Method 1​","type":1,"pageTitle":"Manual installation of the security certificate into the Firefox browser","url":"adguard-for-android/solving-problems/firefox-certificates/#method-1","content":"This method works in Firefox for Android version 90.0 and later. To make Firefox trust the AdGuard certificate, do the following: Run the browser.Go to Settings → About Firefox.  Tap the Firefox logo five times.Navigate to Settings → Secret Settings.  Toggle Use third party CA certificates. "},{"title":"Method 2​","type":1,"pageTitle":"Manual installation of the security certificate into the Firefox browser","url":"adguard-for-android/solving-problems/firefox-certificates/#method-2","content":"This method will only work on rooted devices. Install and configure adb; On the Windows platform, Samsung owners may need to install this utility. Activate the developer mode and enable USB debugging: Open the Settings app on your phone;Go to System section (last item in the settings menu). In this section, find the sub-item About phone;Tap the Build number line 7 times. After that, you will receive a notification that You are now a developer (If necessary, enter an unlock code for the device);Open System Settings → Developer Options → Scroll down and enable USB debugging → Confirm debugging is enabled in the window Allow USB debugging after reading the warning carefully. Install the Firefox browser (release version);Open the AdGuard settings → Network → HTTPS Filtering → Install the certificate in Firefox → INSTALL FOR OLD VERSIONS;Open the folder data/data/org.mozilla.firefox/files/mozilla using adb shell su and cd data/data/..., then browse to the folder named xxxxxxx.default and memorize its name;In the specified folder we are interested in two files: cert9.dbkey4.db We need to move these files to a folder of the browser where the security certificate issue occurred: data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyy.default. The full command will look like this: adb shell sucp -R data/data/org.mozilla.firefox/files/mozilla/xxxxxxxxxx.default/cert9.db data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyyyyyy.defaultcp -R data/data/org.mozilla.firefox/files/mozilla/xxxxxxxxxx.default/key4.db data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyyyyyy.default In case you received the system notification permission denied, you should first move the specified files to the permission-free directory. And after that you should move them to the necessary folder in your Firefox browser. The full command should look something like this: adb shell sucp -R data/data/org.mozilla.firefox/files/mozilla/xxxxxxxx.default/cert9.db sdcard/Downloadcp -R data/data/org.mozilla.firefox/files/mozilla/xxxxxxxxx.default/key4.db sdcard/Downloadcp -R sdcard/Download/cert9.db data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyyyyyy.defaultcp -R sdcard/Download/key4.db data/data/org.mozilla.&lt;browser_name&gt;/files/mozilla/yyyyyyyyyy.default If adb shell su does not work, you should try adb shell initially, and then su. "},{"title":"How to get HAR files","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/har/","content":"","keywords":""},{"title":"What are HAR files?​","type":1,"pageTitle":"How to get HAR files","url":"adguard-for-android/solving-problems/har/#what-are-har-files","content":"The HAR (HTTP ARchive) format is a JSON-formatted archive file for logging of a web browser's interaction with a site. The specifications of HAR format defines an archival data for HTTP transactions that used by a browser to export detailed information about web pages it loads. More detailed description of HAR file format and its specification you can find at softwareishard.com website. "},{"title":"How to get HAR files​","type":1,"pageTitle":"How to get HAR files","url":"adguard-for-android/solving-problems/har/#how-to-get-har-files","content":"Sometimes we need to analyze it to block specific ads that are difficult to reproduce for some reason. To get HAR files follow these steps: Open AdGuard and go to &quot;Settings&quot;.Choose &quot;Advanced&quot; in the menu.Choose &quot;Low Level Settings&quot;.Activate &quot;pref.har.capture&quot; (you will have to restart the protection).Now reproduce the problem - open the app, perform the necessary actions to make the ad appear.Now turn &quot;pref.har.capture&quot; off again.Go back and tap &quot;Export logs and system info&quot; → Save. Please send the file with logs (that you've got as a result) to the AdGuard support service. Note: Our support team will process your ticket much faster if you specify the HelpDesk ticket number or the GitHub issue number in your message. "},{"title":"How to analyze HAR files​","type":1,"pageTitle":"How to get HAR files","url":"adguard-for-android/solving-problems/har/#how-to-analyze-har-files","content":"Here are some sources that we can recommend to analyze HAR files: HTTP Archive Viewer master is a HAR analyzer tool, visualizes HTTP Archive (HAR) log files created by HTTP tracking tools.Fiddler is a web debugging proxy, lets you capture, inspect, monitor all HTTP(S) traffic between your computer and the Internet, mock requests, and diagnose network issues. "},{"title":"How to collect a full log","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/log/","content":"","keywords":""},{"title":"Collecting debug log​","type":1,"pageTitle":"How to collect a full log","url":"adguard-for-android/solving-problems/log/#collecting-debug-log","content":"To collect debug log and send it to us you need to perform following steps: Open AdGuard and go to &quot;Settings&quot;. Choose &quot;Advanced&quot;. Set &quot;Logging level&quot; to &quot;Record everything&quot;. It's desirable to close all background apps that don't concern the problem beforehand. Reproduce the problem and set the logging level back to &quot;Default&quot;. Notice the exact time when it happened. Send us a message from program by choosing &quot;Support&quot; → &quot;Send Feedback&quot; in the menu. Don't forget to check the &quot;Send detailed system info&quot; checkbox under the text field and to include the timestamp from the step 4 into the message. As an alternative, you can export the logs (along with the state.txt file that contains system information and information about AdGuard settings) directly into a local file. It can be convenient, for example, if you are having a conversation with a developer on GitHub, forum or on another platform. To export logs and system information into a file, go to &quot;Settings&quot; — &quot;Advanced&quot; and tap &quot;Export logs and system info&quot;. Select the destination folder and tap &quot;Save&quot;. "},{"title":"Collecting web requests log​","type":1,"pageTitle":"How to collect a full log","url":"adguard-for-android/solving-problems/log/#collecting-web-requests-log","content":"To collect web requests log and send it to us you need to perform following steps: Open AdGuard and go to &quot;Settings&quot;. Choose &quot;Advanced&quot;. Set &quot;Logging level&quot; to &quot;Record web requests&quot;. It's desirable to close all background apps that don't concern the problem beforehand. Reproduce the problem and set the logging level back to &quot;Default&quot;. Notice the exact time when it happened. Send us a message from program by choosing &quot;Support&quot; → &quot;Send Feedback&quot; in the menu. Don't forget to check the &quot;Send detailed system info&quot; checkbox under the text field and to include the timestamp from the step 4 into the message. As an alternative, you can export the logs (along with the state.txt file that contains system information and information about AdGuard settings) directly into a local file. It can be convenient, for example, if you are having a conversation with a developer on GitHub, forum or on another platform. To export logs and system information into a file, go to &quot;Settings&quot; — &quot;Advanced&quot; and tap &quot;Export logs and system info&quot;. Select the destination folder and tap &quot;Save&quot;. "},{"title":"Moving CA certificate to System store on rooted devices","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/https-certificate-for-rooted/","content":"","keywords":""},{"title":"How to install AdGuard's Certificate to System store (on a rooted device)​","type":1,"pageTitle":"Moving CA certificate to System store on rooted devices","url":"adguard-for-android/solving-problems/https-certificate-for-rooted/#how-to-install-adguards-certificate-to-system-store-on-a-rooted-device","content":"Enable HTTPS filtering in AdGuard for Android and save AdGuard's certificate to the User store (use this instruction if needed)Go to AdGuard app → Menu (≡) → Settings → Network → HTTPS filtering → Security certificate → tap “Copy to the system store” That is enough for older versions of Magisk. However, if you have a newer version, you will get this message: Unable to copy the certificate to the system store. Try using “AdGuard Certificate” module. In that case, proceed to steps below: Go to Magisk → Settings  Enable Zygisk   Download the .zip file (of “AdGuard Certificate” module) from the latest release on GitHub Go to Magisk → Modules → Install from storage and select the downloaded .zip file    Reboot  If a new version of &quot;AdGuard certificate&quot; module comes out, repeat steps 3-7 to update the module. The module does its work during the system boot. If your AdGuard certificate changes, you'll have to reboot the device for the new certificate to be copied to the system store. "},{"title":"Bromite browser​","type":1,"pageTitle":"Moving CA certificate to System store on rooted devices","url":"adguard-for-android/solving-problems/https-certificate-for-rooted/#bromite-browser","content":"Please note that in order for Bromite browser to work properly, in addition to the steps mentioned above, you need to set &quot;Allow user certificates&quot; in chrome://flags to &quot;Enabled&quot; state. "},{"title":"Chrome and Chromium-based browsers​","type":1,"pageTitle":"Moving CA certificate to System store on rooted devices","url":"adguard-for-android/solving-problems/https-certificate-for-rooted/#chrome-and-chromium-based-browsers","content":"Long story short, you will have no problems with HTTPS filtering in Chrome and Chromium-based browsers on rooted devices, if you use &quot;AdGuard Certificate&quot; module. Here is a bit more detailed explanation: Chrome (and subsequently many other Chromium-based browsers) has recently started requiring CT logs for CA certs found in the System store. &quot;AdGuard Certificate&quot; module copies AdGuard's CA certificate from the User store to the System store. It also contains a Zygisk module that reverts any modifications done by Magisk for certain browsers. This way the browsers only find AdGuard’s certificate in the User store and don’t complain about the missing CT log, while other apps continue to use the same certificate from the System store. "},{"title":"How to get Logcat log","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/logcat/","content":"","keywords":""},{"title":"General Instruction​","type":1,"pageTitle":"How to get Logcat log","url":"adguard-for-android/solving-problems/logcat/#general-instruction","content":"For troubleshooting problems with crashes a regular log is almost always not enough. In such cases to identify the origin of the problem we need the system log. Below is the instruction how to collect and get it. "},{"title":"Capture a bug report from a device​","type":1,"pageTitle":"How to get Logcat log","url":"adguard-for-android/solving-problems/logcat/#capture-a-bug-report-from-a-device","content":"To get a bug report directly from your device, do the following: Be sure you have Developer Options enabled. In Developer options, tap Take bug report.  Select the type of bug report you want and tap Report. &gt;After a moment you get a notification that the bug report is ready (see figure 2).  To share the bug report, tap the notification.  Send this log to our support team. Note: Our support team will process your ticket much faster if you specify the HelpDesk ticket number or the GitHub issue number in your message to support. "},{"title":"Additional Instruction (for old Android versions)​","type":1,"pageTitle":"How to get Logcat log","url":"adguard-for-android/solving-problems/logcat/#additional-instruction-for-old-android-versions","content":"On old Android devices there is no such option to take a bug report automatically. It has to be done manually by following this instruction: Part #1: prepare the device Switch device to the developer mode. To do this: go to Settings → About → tap Build Number 7 times. Go to Developer Options. Enable USB debugging. Increase Logger buffer sizes to 4MB per log buffer. 4MB should be enough for storing the logs we need until you're able to do the second part (getting log from the device); Important: you need to reproduce the problem after you've done with the first part! Part #2: get the log Connect your device to PC with USB cable. Download and install Minimal ADB: http://forum.xda-developers.com/showthread.php?t=2317790 Direct download link: https://www.androidfilehost.com/?fid=24052804347803384 Run this command in the console (it will be opened after install): adb logcat -v threadtime -d &gt; C:\\logcat.txt Send this log to us by contacting support or by any other way. Alternative way for ROOT users: Download and run Logcat. Choose Record in the menu. Choose a name for a log file or just press OK. Now you can press Home button, CatLog will continue recording the log in background. Reproduce the issue. Open CatLog and press Stop record in the menu. Send this log to our support team. Note: Our support team will process your ticket much faster if you specify the HelpDesk ticket number or the GitHub issue number in your message to support. "},{"title":"Low Level Settings guide","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/low-level-settings/","content":"","keywords":""},{"title":"How to reach the Low-level settings​","type":1,"pageTitle":"Low Level Settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#how-to-reach-the-low-level-settings","content":"Das Ändern von Low-Level-Einstellungen kann Probleme mit der Leistung von AdGuard verursachen, die Internetverbindung unterbrechen oder Ihre Sicherheit und Privatsphäre gefährden. You should only open this section if you are sure of what you are doing or our support-team has asked you about it. To go to Low-level settings, open the AdGuard app and tap the gear icon in the lower right corner of the screen. Then choose General → Advanced → Low-level settings. "},{"title":"Low-level settings​","type":1,"pageTitle":"Low Level Settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#low-level-settings","content":"For AdGuard v4.0 for Android we've completely redesigned the low-level settings: divided them into thematic blocks, made them clearer, added validation of entered values and other safety valves, got rid of some settings, and added others. "},{"title":"DNS protection​","type":1,"pageTitle":"Low Level Settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#dns-protection","content":"Fallback upstreams​ Here you can specify the fallback DNS resolver(s) to be used if the configured server is unavailable. There are three options: Automatic DNS, None, and Custom DNS. If no fallback server is specified, the Automatic DNS — the system DNS or AdGuard DNS — will be used. None means no fallback at all. Selecting Custom DNS allows you to list IPv4 and IPv6 server addresses to use as upstreams. Fallback domains​ Here you can list domains that will be forwarded directly to fallback upstreams if they exist. Detect search domains​ If this option is enabled, AdGuard will detect search domains and automatically forward them to fallback upstreams. Bootstrap upstreams​ Bootstrap DNS for DoH, DoT, and DoQ servers. The Automatic DNS - the system DNS or AdGuard DNS - is used by default. By selecting Custom DNS, you can list IPv4 and IPv6 server addresses to use as bootstrap upstreams. Sperrmodus für Regeln im Adblock-Stil​ Here you can specify the response type for domains blocked by DNS rules based on adblock rule syntax (for instance, ||example.org^). Respond with REFUSED (default)Respond with NXDOMAINRespond with Custom IP address (IPv4 and IPv6 addresses can be specified here) Sperrmodus für Hosts-Regeln​ Here you can specify the response type for domains blocked by DNS rules based on hosts rule syntax (for instance, &lt;ip&gt; &lt;domain&gt; 0.0.0.0 example.com). Respond with REFUSEDRespond with NXDOMAINRespond with Custom IP address (IPv4 and IPv6 addresses can be specified here) – default DNS request timeout​ Hier können Sie die Zeit in Millisekunden angeben, die AdGuard auf die Antwort des ausgewählten DNS-Servers warten soll, bevor er auf den Fallback zurückgreift. Wenn Sie dieses Feld nicht ausfüllen oder einen ungültigen Wert eingeben, wird der Wert von 5.000 verwendet. Blocked response TTL​ Hier können Sie den TTL-Wert (Time to Live) angeben, der als Antwort auf eine blockierte Anfrage zurückgegeben wird. DNS cache size​ Here you can specify the maximum number of cached responses. Default value is 1000. ECH blocking​ If enabled, AdGuard strips Encrypted Client Hello parameters from DNS responses. Ignore unavailable outbound proxy​ Enable this feature to make AdGuard send DNS requests directly if the outbound proxy is unavailable. Try HTTP/3 for DNS-over-HTTPS upstreams​ By default, all DNS requests for DNS-over-HTTPS are sent via HTTP/2 protocol. If enabled, AdGuard uses HTTP/3 to speed up DNS query resolution for DoH upstreams. SERVFAIL failure response​ Once enabled, AdGuard sends a SERVFAIL response to the client if all upstreams, including fallback ones, fail to reply. When this setting is disabled, no response is sent to the client. Use fallback for non-fallback domains​ Enable this feature if you want AdGuard to use fallback upstream for all domains. Otherwise, fallback upstream will only be used for fallback domains and search domains if the corresponding option is enabled. Validate DNS upstreams​ Enable to make AdGuard test DNS upstreams before adding or updating custom DNS servers. "},{"title":"Filtering​","type":1,"pageTitle":"Low Level Settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#filtering","content":"Capture HAR​ Here you can enable HAR file capture. Use it only for debugging purposes! If the setting is enabled, AdGuard will create a directory named &quot;har&quot; inside the app cache directory. It contains information about all filtered HTTP requests in HAR 1.2 format and can be analyzed with the Fiddler program. "},{"title":"HTTPS-Filterung​","type":1,"pageTitle":"Low Level Settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#https-filterung","content":"Encrypted Client Hello​ Jede verschlüsselte Internetverbindung hat einen unverschlüsselten Teil. Dies ist das allererste Paket, das den Namen des Servers enthält, mit dem Sie sich verbinden. Die verschlüsselte Client-Hallo-Technologie soll dieses Problem lösen und das letzte bisschen an unverschlüsselter Information verschlüsseln. To benefit from it, enable the Encrypted Client Hello option. Er verwendet einen lokalen DNS-Proxy, um nach der ECH-Konfiguration für die Domain zu suchen. Wenn es gefunden wird, wird das ClientHello-Paket verschlüsselt. OCSP checking​ Once enabled, this option runs asynchronous OCSP checks to check whether the website’s SSL certificate is revoked. If the OCSP check is completed within the minimum timeout, AdGuard will immediately block the connection if the certificate is revoked or establish the connection if the certificate is valid. If the verification takes too long, AdGuard will establish a connection and continue checking the certificate in the background. If it is revoked, current and future connections to the domain will be blocked. Redirect DNS-over-HTTPS requests​ IF enabled, DNS-over-HTTPS requests will be redirected to the DNS Protection module. We recommend disabling fallback upstreams and use only encrypted DNS servers to maintain privacy. "},{"title":"Outbound Proxy​","type":1,"pageTitle":"Low Level Settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#outbound-proxy","content":"Show the Filter DNS requests setting​ When this feature is enabled, the string Filter DNS requests appears in the Settings ➝ Filtering ➝ Network ➝ Proxy ➝ Proxy server ➝ Add proxy server section with the switch next to it. By toggling the switch, you can enable filtering of DNS requests passing through the proxy. "},{"title":"Protection​","type":1,"pageTitle":"Low Level Settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#protection","content":"Port ranges​ Here you can specify port ranges that should be filtered. Log removed HTML events​ If enabled, AdGuard records blocked HTML elements in the filtering log. Scriplet debugging​ If you need to activate debugging of scriptlets, enable this feature. Then there will be messages in the browser log that some scriplet rules have been applied. Excluded apps​ Here you can list package names and UIDs that you want to exclude from AdGuard protection. QUIC bypass packages​ Here you can specify package names for which AdGuard should bypass QUIC traffic. Reconfigure Automatic proxy when network changes​ Enable this setting if you want the protection to restart to reconfigure the automatic proxy settings when the device connects to another network. The state of this setting affects operation only if the current routing mode is Automatic proxy. IPv6 filtering​ If enabled, AdGuard filters IPv6 networks if an IPv6 network interface is available. IPv4 ranges excluded from filtering​ Filtering for IPv4 ranges, listed in this section, will be disabled. IPv6 ranges excluded from filtering​ Filtering for IPv6 ranges, listed in this section, will be disabled. TCP keepalive for outgoing sockets​ If enabled, AdGuard sends a keepalive probe after the specified time period to ensure if the TCP connection is alive. Here you can specify the TCP keepalive idle time before starting keepalive probes and time between keepalive probes for an unresponsive peer. After a system-defined number of unsuccessful attempts to get a response from the server, the system automatically closes the TCP connection. "},{"title":"Local VPN settings​","type":1,"pageTitle":"Low Level Settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#local-vpn-settings","content":"Recovery delay for revoked VPN​ Here you can set the time of a delay in milliseconds before AdGuard tries to restore VPN protection after it has been revoked by a third-party VPN app or by deleting the VPN profile. The default value is 5000 ms. Reschedule delay for revoked VPN recovery​ Here you can set the time of a delay in milliseconds before AdGuard reschedules the restoration of VPN protection after it has been revoked by a third-party VPN app or by deleting the VPN profile. The default value is 5000 ms. MTU​ Here you can set the maximum transmission unit (MTU) of the VPN interface. The recommended range is 1500-1900 bytes. Restore VPN automatically​ If enabled, this feature automatically re-enables AdGuard’s local VPN after it has been turned off due to network absence, tethering, or low-power mode. Packet capture (PCAP)​ If enabled, AdGuard will create the special file name timestamp.pcap (for instance, 1682599851461.pcap). It contains all network packets transferred through the VPN. This file is located in the app cache directory and can be analyzed with the Wireshark program. Include Wi-Fi gateway in VPN routes​ If you want the gateway IP addresses to be added to VPN routes when on Wi-Fi, enable this feature. IPv4 address​ Here you can enter the IP address that will be used to create a TUN interface. By default, it is 172.18.11.218. Forcibly route LAN IPv4​ When enabled, AdGuard filters all LAN connections, including local IPv4 network traffic, even if the Route all LAN IPv4 connections option is enabled. Route all LAN IPv4 connections​ Once enabled, AdGuard excludes LAN connections from filtering for simple networks. May not work for complex networks. Works only with the Forcibly route LAN IPv4 option disabled. IPv6 address​ Here you can enter the IP address that will be used to create a TUN interface. By default, it is 2001:db8:ad:0:ff::. "},{"title":"Sonstiges​","type":1,"pageTitle":"Low Level Settings guide","url":"adguard-for-android/solving-problems/low-level-settings/#sonstiges","content":"Detect Samsung Pay​ Korean users may encounter issues with Samsung Pay when AdGuard is enabled. Activate this feature to pause AdGuard's protection and use the Samsung Pay app seamlessly. "},{"title":"Сertificate installation issues on devices with Android 11+","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/manual-certificate/","content":"","keywords":""},{"title":"Certificate installation in a Secure folder​","type":1,"pageTitle":"Сertificate installation issues on devices with Android 11+","url":"adguard-for-android/solving-problems/manual-certificate/#certificate-installation-in-a-secure-folder","content":"If you use the Secure folder on your Android (this applies mainly to Samsung devices), you may face some difficulties when installing the HTTPS certificate. The thing is that the Secure folder has its own storage where the certificates are stored. However, in case you do everything according to the instructions described here, the certificate is installed into the main storage and plays no role for your ad blocker in the Secure folder. So, in order to resolve this issue and install the certificate for your AdGuard for Android into the Secure folder's storage, follow this instruction: After installing the application and connecting to VPN tap Turn on next to the HTTPS filtering is off message.Tap Next → Next → Save it now → Allow.Save the certificate (at this stage, you can rename it to make it easier to find).After the How to install a certificate? screen appears, DO NOT tap Open Settings.Minimize the application and go to the secure folder.Tap the three-dot menu and go to additional security settings.Tap Install from memory → CA certificate → Install anyway → Enter a graphic key/password/fingerprint → Find the saved certificate and select it.Return to the AdGuard application and close the screen &quot;How to install a certificate?&quot; by tapping the cross button.Done! The certificate has been installed. "},{"title":"Problems caused by multiple user profiles","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/multiple-profiles-issue/","content":"Problems caused by multiple user profiles Hinweis This article covers AdGuard for Android, a multifunctional ad blocker that protects your device at the system level. To see how it works, download the AdGuard app On Android 9 and later, if AdGuard is installed for more than one user profile on your device, you may encounter problems when uninstalling the app. When you uninstall AdGuard from one user profile, the app will still appear on the app list, but you won't be able to uninstall or reinstall it. It happens because AdGuard is installed for a different user profile on the device. If you try to reinstall AdGuard after an unsuccessful removal attempt, you will see the error message &quot;You can't install the app on your device&quot;. To solve this problem, you need to uninstall the application for all users: go to Settings → All apps → AdGuard. Tap the three dots at the upper right corner and select Uninstall for all users.","keywords":""},{"title":"How to setup outbound proxy","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/outbound-proxy/","content":"","keywords":""},{"title":"How to use AdGuard with Tor​","type":1,"pageTitle":"How to setup outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#how-to-use-adguard-with-tor","content":"Open AdGuard and go to Settings → Network → Proxy settings. Download &quot;Orbot: Proxy with Tor&quot; by tapping Integrate with Tor or directly from Google Play. Open Orbot and press the Start button on the application's main screen. Go back to the Proxy Settings screen of AdGuard. Tap the Integrate with Tor button. All the required fields will be pre-filled: Field\tValueProxy type\tSOCKS4 or SOCKS5 Proxy host\t127.0.0.1 Proxy port\t9050 Or you can tap Add proxy, enter these values manually, and set Orbot as a default proxy. Aktivieren Sie den AdGuard-Schutz. Now AdGuard will forward all traffic through Orbot. If you disable Orbot, Internet connection will be unavailable until you disable outbound proxy settings in AdGuard. "},{"title":"How to use AdGuard with PIA (Private Internet Access)​","type":1,"pageTitle":"How to setup outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#how-to-use-adguard-with-pia-private-internet-access","content":"Here we presume that you are already a PIA VPN client and have it installed on your device. Open AdGuard and go to Settings → Network → Proxy settings. Tap the Add proxy server button and enter the following data: Field\tValueProxy type\tSOCKS5 Proxy host\tproxy-nl.privateinternetaccess.com Proxy port\t1080 You also need to fill out the Username/Password fields. To do so, log in to the Client Control Panel on the PIA website. Click the Generate Password button under the Generate PPTP/L2TP/SOCKS Password section. A username starting with &quot;x&quot; and a random password will be shown. Use them to fill out the Username and Password fields in AdGuard. Set this proxy as a default one by toggling the switch, then click Save. Aktivieren Sie den AdGuard-Schutz. "},{"title":"How to use AdGuard with TorGuard​","type":1,"pageTitle":"How to setup outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#how-to-use-adguard-with-torguard","content":"Here we presume that you are already a TorGuard client and have it installed on your device. Open AdGuard and go to Settings → Network → Proxy settings. Tap the Add proxy server button and enter the following data: Field\tValueProxy type\tSOCKS5 Proxy host\tproxy.torguard.org or proxy.torguard.io Proxy port\t1080 or 1085 or 1090 For Username and Password fields, enter your proxy username and proxy password you have chosen at TorGuard signup. Set this proxy as a default one by toggling the switch, then click Save. Aktivieren Sie den AdGuard-Schutz. "},{"title":"How to use AdGuard with NordVPN​","type":1,"pageTitle":"How to setup outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#how-to-use-adguard-with-nordvpn","content":"Open AdGuard and go to Settings → Network → Proxy settings. Tap the Add proxy server button and enter the following data: Field\tValueProxy type\tSOCKS5 Proxy host\tany server save for &quot;Obfuscated&quot; from this list Proxy port\t1080 For Username and Password fields, enter your NordVPN Username and Password. Set this proxy as a default one by toggling the switch, then click Save. Aktivieren Sie den AdGuard-Schutz. "},{"title":"How to use AdGuard with Shadowsocks​","type":1,"pageTitle":"How to setup outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#how-to-use-adguard-with-shadowsocks","content":"Here we presume that you have already configured a Shadowsocks server and a client on your device. Note: You should remove Shadowsocks application from filtering before setting up the process (AdGuard - Apps management - Shadowsocks - Disable AdGuard protection) to avoid infinite loops and drops. Open AdGuard and go to Settings → Network → Proxy settings. Tap the Add proxy server and fill the fields: Field\tValueProxy type\tSOCKS5 Proxy host\t127.0.0.1 Proxy port\t1080 Tap Save and select "},{"title":"Limitations​","type":1,"pageTitle":"How to setup outbound proxy","url":"adguard-for-android/solving-problems/outbound-proxy/#limitations","content":"There is a factor that can prevent certain traffic from being routed through the outgoing proxy. AdGuard will only re-route traffic that goes through it. Basically, it means apps that have Ad blocking flag enabled in the Apps Management tab. "},{"title":"Problems caused by using a Restricted Mode profile","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/restricted-profile/","content":"","keywords":""},{"title":"Solutions​","type":1,"pageTitle":"Problems caused by using a Restricted Mode profile","url":"adguard-for-android/solving-problems/restricted-profile/#solutions","content":"You have three ways to solve the issue: "},{"title":"Option 1: Grant permissions to AdGuard using ADB​","type":1,"pageTitle":"Problems caused by using a Restricted Mode profile","url":"adguard-for-android/solving-problems/restricted-profile/#option-1-grant-permissions-to-adguard-using-adb","content":"Please note, that this approach is available starting from AdGuard v3.5 nightly 6. If you're using an older version, you can get the latest update here. Activate the developer mode and enable USB debugging: Open the Settings app phone;Go to System section (last item in the settings menu). In this section, find the sub-item About phone;Tap the Build number line 7 times. After that, you will receive a notification that You are now a developer (If necessary, enter an unlock code for the device);Open System Settings → Developer Options → Scroll down and enable USB debugging → Confirm debugging is enabled in the window Allow USB debugging after reading the warning carefully. If you have any difficulties or additional questions, full instructions can be found here. Install and configure adb; On the Windows platform, Samsung owners may need to install this utility. Connect your device using a USB cable to the computer or laptop on which you installed ADB;Open the command line on your PC: Cmd.exe if you are using Windows;Terminal if you are using macOS; Enter the command adb shell pm grant com.adguard.android android.permission.INTERACT_ACROSS_USERS and press Enter. "},{"title":"Option 2: Remove restricted user account​","type":1,"pageTitle":"Problems caused by using a Restricted Mode profile","url":"adguard-for-android/solving-problems/restricted-profile/#option-2-remove-restricted-user-account","content":"About how to manage user accounts from an Android device you can find here. Please note, that in some cases restricted user accounts are created implicitly and cannot be removed. For instance, when you use Dual messenger or Dual app features on Samsung or LG devices. You can read below how to fix the issue in these cases. "},{"title":"Option 3: Use AdGuard in Local HTTP proxy mode (requires root)​","type":1,"pageTitle":"Problems caused by using a Restricted Mode profile","url":"adguard-for-android/solving-problems/restricted-profile/#option-3-use-adguard-in-local-http-proxy-mode-requires-root","content":"To enable this mode, open AdGuard Settings → Network → Filtering method → Local HTTP proxy "},{"title":"LG and Samsung devices​","type":1,"pageTitle":"Problems caused by using a Restricted Mode profile","url":"adguard-for-android/solving-problems/restricted-profile/#lg-and-samsung-devices","content":"Owners of LG or Samsung phones may also encounter a similar issue. It can be caused by using Dual App/Dual Messenger function (which automatically creates a restricted profile). To solve this issue, you need to disable this feature. "},{"title":"Samsung​","type":1,"pageTitle":"Problems caused by using a Restricted Mode profile","url":"adguard-for-android/solving-problems/restricted-profile/#samsung","content":"Open Settings;Press Advanced;Scroll down and press Dual messenger;Disable the Dual messenger for all applications;Lock the device for 5 minutes;Unlock the screen and try again to create the VPN profile. "},{"title":"LG​","type":1,"pageTitle":"Problems caused by using a Restricted Mode profile","url":"adguard-for-android/solving-problems/restricted-profile/#lg","content":"Open Settings;Choose General tab;Scroll down and press Dual app;Remove all applications from the list;Reboot your device. "},{"title":"How to use Samsung Pay with AdGuard in South Korea","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/samsungpay-with-adguard-in-south-korea/","content":"How to use Samsung Pay with AdGuard in South Korea Hinweis This article covers AdGuard for Android, a multifunctional ad blocker that protects your device at the system level. To see how it works, download the AdGuard app This problem occurs almost exclusively on devices registered in South Korea. Samsung Pay occasionally doesn't work on such devices with running VPN services. However, there is a way to solve this problem. By default, AdGuard uses Local VPN to filter traffic. This was the reason why the South Korean users had to disable AdGuard when making payments with Samsung Pay. Now it is possible to avoid such difficulties. The &quot;pref.samsungpay.autopause.enable&quot; feature was developed specifically for South Korean users. So, what process does it initiate? If the &quot;pref.samsungpay.autopause.enable&quot; option is enabled, the AdGuard app is suspended when a user opens the Samsung Pay app. But once the app is closed, AdGuard resumes operation. Let's see how it works. Note: this feature will work only if the Local VPN filtering mode is chosen in AdGuard settings. If another mode is being used, Samsung Pay will function without any interruptions.","keywords":""},{"title":"How to block ads in the YouTube app","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/youtube-ads/","content":"","keywords":""},{"title":"Watch YouTube in the AdGuard app​","type":1,"pageTitle":"How to block ads in the YouTube app","url":"adguard-for-android/solving-problems/youtube-ads/#watch-youtube-in-the-adguard-app","content":" Open the YouTube app and start the video you want to watch.Tap the Share button and select AdGuard for Android from the list of apps. That's it! A new window with the video will open where you'll be able to watch it without being interrupted by ads. You can also watch YouTube in a browser and there will be no ads if you have AdGuard installed and enabled. "},{"title":"How to automate AdGuard for Android","type":0,"sectionRef":"#","url":"adguard-for-android/solving-problems/tasker/","content":"","keywords":""},{"title":"AdGuard interface​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#adguard-interface","content":"There are a lot of tasker apps out there, for example Tasker, AutomateIt etc. AdGuard provides an interface that allows these apps to setup various automation rules.  Thanks to this interface, any app can send a special message (called &quot;intent&quot;) that contains the name of the action and some additional data, if needed. AdGuard will look at this intent and perform the required actions. "},{"title":"Security concerns​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#security-concerns","content":"Wouldn't it be a bit dangerous, you might ask — to let some random apps manage what AdGuard does? It would, and that's why a password is sent along with the intent. This password will be generated by AdGuard automatically, but you can, of course, change it at any time. "},{"title":"Available actions​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#available-actions","content":"So, ready to get your hands dirty? Here are actions that, when included in the intent, will be understood by AdGuard: start starts the protection, no extra data is needed; stop stops the protection, no extra data required; pause pauses the protection. The difference between this and stop is that a notification will appear that restarts the protection when you tap it. No extra data required; update checks for available filter and app updates, no additional data is needed;  dns_filtering turns DNS filtering on and off. Requires an extra flag: enable:true or enable:false enables or disables DNS filtering, accordingly.  dns_server switches between DNS servers, you need to include additional data: server:adguard dns switches to AdGuard DNS server; Note: the full list of supported provider names can be found inside AdGuard DNS settings under the &quot;Custom DNS settings&quot; server:custom switches to the previously added server named custom; server:tls://dns.adguard.com creates a new server and switches to it if the previously added servers and providers don't contain a server with the same address. Otherwise, it switches to the respective server. You can add server addresses as IP ( regular DNS), sdns://… (DNSCrypt or DNS-over-HTTPS), https://… (DNS-over-HTTPS) or tls://... (DNS-over-TLS); server:1.1.1.1, tls://1.1.1.1 creates a server with comma separated addresses and switches to it. When adding a server via server:1.1.1.1, tls://1.1.1.1, the previously added server is removed. server:system resets DNS settings to default system DNS servers.  proxy_state enables/disables the outbound proxy. Requires an extra flag: enable:true or enable:false activates or deactivates the outbound proxy, accordingly.  proxy_default sets the proxy from the list of previously added ones as default or creates a new one if server has not been added before. You need to specify additional data: server:[name] where [name] is the name of the outbound proxy from the list. Or you can configure server parameters manually: server:[type=…&amp;host=…&amp;port=…&amp;username=…&amp;password=…&amp;udp=…&amp;trust=…]. proxy_remove removes the proxy server from the list of previously added ones. server:[name] where [name] is the name of the outbound proxy from the list. Or you can configure remove parameters manually: server:[type=…&amp;host=…&amp;port=…&amp;username=…&amp;password=…&amp;udp=…&amp;trust=…]. Compulsory parameters: [type] — proxy server type: HTTP;SOCKS4;SOCKS5;HTTPS_CONNECT. [host] — outbound proxy domain or IP address; [port] — outbound proxy port (integer number from 1 to 65535); Optional parameters: [login and password] — only if proxy requires it. This data is ignored when setting up SOCKS4; [udp] applied only on SOCKS5 server type and include option UDP through SOCKS5. It is necessary to set true or false value; [trust] applies for HTTPS_CONNECT server type only and include option Trust any certificates. It is necessary to set true or false value. Example: setting by name: server:MyServer manually settings: server:host=1.2.3.4&amp;port=80&amp;type=SOCKS5&amp;username=foo&amp;password=bar&amp;udp=true  Don't forget to include the password as an extra and mention package name and class! You need to do so for every intent! Extra: password:******* Package name: com.adguard.android Class: com.adguard.android.receiver.AutomationReceiver Note: Before v4.0 the class was called com.adguard.android.receivers.AutomationReceiver but then we changed its name to com.adguard.android.receiver.AutomationReceiver. If you used this feature, please pay attention and use the new name. "},{"title":"Execution without notification​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#execution-without-notification","content":"To perform a task without showing a toast, add an additional EXTRA quiet: true "},{"title":"Example​","type":1,"pageTitle":"How to automate AdGuard for Android","url":"adguard-for-android/solving-problems/tasker/#example","content":" "},{"title":"Installation","type":0,"sectionRef":"#","url":"adguard-for-ios/installation/","content":"","keywords":""},{"title":"System requirements​","type":1,"pageTitle":"Installation","url":"adguard-for-ios/installation/#system-requirements","content":""},{"title":"iPhone​","type":1,"pageTitle":"Installation","url":"adguard-for-ios/installation/#iphone","content":"Requires iOS 11.2 or later. "},{"title":"iPad​","type":1,"pageTitle":"Installation","url":"adguard-for-ios/installation/#ipad","content":"Requires iPadOS 11.2 or later. "},{"title":"iPod touch​","type":1,"pageTitle":"Installation","url":"adguard-for-ios/installation/#ipod-touch","content":"Requires iOS 11.2 or later. "},{"title":"AdGuard for iOS installation​","type":1,"pageTitle":"Installation","url":"adguard-for-ios/installation/#adguard-for-ios-installation","content":"AdGuard for iOS is an app presented in the App Store. To install it on your device, open the App Store and tap the Search icon on the bottom of the screen.  Type adguard in the search bar and tap the string adGuard which will be among search results.  On the opened page of the App Store tap GET under the string AdGuard - adblock&amp;privacy and then tap INSTALL. You may be requested to enter your Apple ID login and password. Type it in and wait for the installation to complete.  "},{"title":"AdGuard Pro for iOS installation​","type":1,"pageTitle":"Installation","url":"adguard-for-ios/installation/#adguard-pro-for-ios-installation","content":"AdGuard Pro is a paid version of AdGuard for iOS, offering an expanded set of functions (same as &quot;AdGuard&quot; app with premium enabled). To install it on your device run the App Store application and tap the Search icon on the bottom of the screen.  Type adguard in the search form, and then tap the string adGuard pro - adblock which will be shown among search results.  On the opened page of the App Store tap the button with the cost of the license under the string AdGuard Pro - adblock, and then tap BUY. You may be requested to enter your Apple ID login and password. Type it in and wait for the installation to complete.  The license can be activated via entering user credentials from an AdGuard account. To that end, it is required that a user has at least one spare license key. "},{"title":"Features overview","type":0,"sectionRef":"#","url":"adguard-for-ios/overview/","content":"","keywords":""},{"title":"Features​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#features","content":"AdGuard and AdGuard Pro for iOS offer lots of features for blocking ads, trackers and creating user rules, both in Safari and on network level. "},{"title":"Content blockers​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#content-blockers","content":"Content blockers serve as 'containers' for filtering rules that do the actual job of blocking ads and tracking. AdGuard for iOS contains six content blockers: General, Privacy, Social, Security, Custom, and Other. Previously Apple only allowed each content blocker to contain a maximum of 50K filtering rules, but with iOS 15 release the upper limit has moved to 150K rules. All content blockers, their statuses, which thematic filters they currently include, and a total number of used filtering rules can be found on the respective screen in Advanced settings (tap the gear icon at the bottom right → General → Advanced settings → Content blockers).  Tip: keep all content blockers enabled for the best filtering quality. "},{"title":"Filters​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#filters","content":"Content blockers' work is based on filters, also sometimes referred to as filter lists. Each filter is a list of filtering rules. If you have an enabled ad blocker when browsing, it constantly checks the visited pages and elements on them against these filtering rules, and blocks anything that matches. Rules are developed to block ads, trackers, and more. All filters are grouped into thematic categories. To see the full list of these categories (not to be confused with content blockers), open the Protection section by tapping the shield icon, then go to Safari protection → Filters.  There are eight of them, each category unites several filters that serve and share a common purpose, i.e. blocking ads, social media widgets, cookie notices, protecting the user from online scams. To decide which filters suit your needs, read their descriptions and navigate by the labels (ads, privacy, recommended, etc.). More enabled filters does not guarantee that there will be less ads. A large number of various filters enabled simultaneously reduces the quality of ad blocking. Custom filters category is empty by default for users to add there their filters by URL. You can find filters on the Internet or even try to create one by yourself. "},{"title":"User rules​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#user-rules","content":"Here you can add new rules — either by entering them manually, or by using the AdGuard manual blocking tool in Safari. Use this tool to customize Safari filtering without adding an entire filter list. Learn how to create your own ad filters. But please note that many of them won't work in Safari on iOS.  "},{"title":"Allowlist​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#allowlist","content":"The third section of the Safari protection screen. If you want to disable ad blocking on a certain website, Allowlist will be of help. It allows you to add domains and subdomains to exlcusions. AdGuard for iOS has an Import/Export feature, so the allowlist from one device can be easily transferred to another. "},{"title":"DNS protection​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#dns-protection","content":"DNS protection module enhances your privacy by encrypting your DNS traffic. Unlike with Safari content blocking, DNS protection works system-wide, i.e. beyond Safari, in apps and other browsers. You have to enable this module before you're able to use it. You can do this on the home screen by tapping the shield icon at the top of the screen, or by going to the Protection → DNS protection tab. To be able to manage DNS settings, AdGuard apps require establishing a local VPN. It will not route your traffic through any remote servers. Nevertheless, the system will ask you to confirm access permission. "},{"title":"DNS implementation​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#dns-implementation","content":" This section has two options: AdGuard and Native implementation. Basically, these are two methods of setting up DNS. In Native implementation, the DNS is handled by the system and not the app. This means that AdGuard doesn't have to create a local VPN. Sadly, this will not help you circumvent system restrictions and use AdGuard alongside other VPN-based applications — if any VPN is enabled, native DNS is ignored. Consequently, you won't be able to filter traffic locally or to use our brand new DNS-over-QUIC protocol (DoQ). "},{"title":"DNS servers​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#dns-servers","content":"The first section you'll see on the DNS Protection screen is DNS server. It shows the currently selected DNS server and encryption type. To change either, tap the button to enter the DNS server screen.  Servers differ by their speed, employed protocol, trustworthiness, logging policy, etc. By default, AdGuard will suggest several DNS servers from among the most popular ones (including AdGuard DNS). Tap any to change the encryption type (if such option is provided by the server's owner) or to view the server's homepage. We added labels such as No logging policy, Ad blocking, Security to help you make a choice. In addition, at the bottom of the screen there is an option to add a custom DNS server. It supports regular, DNSCrypt, DNS-over-HTTPS, DNS-over-TLS, and DNS-over-QUIC servers. "},{"title":"Network settings​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#network-settings","content":" Users can also handle their DNS security on the Network settings screen. Filter mobile data and Filter Wi-Fi enable or disable DNS protection for the respective network types. Further down, at Wi-Fi exceptions, you can exclude particular Wi-Fi networks from DNS protection (for example, you might want to exclude your home network if you use AdGuard Home). "},{"title":"DNS filtering​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#dns-filtering","content":"To get access to this setting, Advanced mode has to be enabled from the General settings screen. After that, a new section will appear on the DNS protection screen. Tap it to customize your DNS traffic by applying own rules.  DNS filters​ Similar to filters that work in Safari, DNS filters are sets of rules written according to special syntax. AdGuard will monitor your DNS traffic and block requests that match one or more rules. You can use filters such as AdGuard DNS filter or add hosts files as filters. Multiple filters can be added simultaneously. To know how to do it, get acquainted with this exhaustive manual. Allowlist and Blocklist​ On top of DNS filters, you can have targeted impact on DNS filtering by adding single domains to Blocklist or to Allowlist. Blocklist even supports the same DNS syntax, and both of them can be imported and exported, just like Allowlist in Safari content blocking. "},{"title":"Advanced protection​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#advanced-protection","content":"In iOS 15 Apple has added the support for Safari Web Extensions, and we in turn added a new Advanced protection module to AdGuard for iOS. It allows AdGuard to apply advanced filtering rules, such as CSS rules, CSS selectors, and scriptlets, and therefore to deal even with the complex ads, such as YouTube ads.  To enable Advanced protection, open the Protection tab by tapping the second left icon at the bottom of the screen, select the Advanced protection module, activate the feature by toggling the switch slider, and follow the instructions below. The Advanced protection only works on iOS 15 and later versions. If you are using earlier versions of iOS, you will see the YouTube ad blocking module in the app instead of the Advanced protection.  "},{"title":"Compatibility with AdGuard VPN​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#compatibility","content":"In most cases, the ad blocker and the VPN application cannot work together, simply because there are certain system limitations. Nevertheless we've managed to find a solution to befriend AdGuard VPN and AdGuard Ad Blocker. For your convenience we've added the AdGuard VPN block to the Protection section, so you can easily switch between two apps. "},{"title":"Assistant​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#assistant","content":" Assistant is a tool that helps you manage filtering in Safari right from the browser without switching back to the app. To see it, do the following: open Safari and tap the arrow-in-a-box symbol. Then scroll down to AdGuard/AdGuard Pro (depending on the app you use) and tap it to fetch a window with several options: Enable on this page. Turn the switch off to add the current domain to the Allowlist.Block an element on this page. Tap it to enter the 'Element blocking' mode: choose any element on the page, adjust the size by tapping 'plus' or 'minus', preview if necessary and then tap the checkmark icon to confirm. The selected element will be hidden from the page and a corresponding rule will be added to User rules. Remove or disable it there to revert the change.Report an issue on this page. Opens a web reporting tool that will help you send a report to our support team in just a few taps. Use it if you noticed a missed ad or an incorrect blocking on the page. On iOS 15 devices, the Assistant features are available through AdGuard Safari Web Extension, which enhances the capabilities of AdGuard for iOS and allows you to take advantage of iOS 15. With this web extension, AdGuard can apply advanced filter rules and, as a result, block more ads. "},{"title":"Activity​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#activity","content":"This is the 'information hub' of AdGuard's DNS protection suite. You can quickswitch to it by tapping the third icon in the row at the screen bottom. N.b. this screen is only seen when DNS protection is enabled.  Here AdGuard displays stats about device's DNS requests, such as total number, number of encrypted requests and average processing time. AdGuard can display the stats for a day, a week, a month, or in total. Below is the Recent activity feed. AdGuard stores the last 1500 DNS requests that have originated on your device and shows their attributes such as protocol type and target domain. AdGuard does not send this information anywhere. It is 100% local and does not leave your device. Tap any request to view more details. There will also be buttons to add the request to Blocklist/Allowlist in one tap.  Above the activity feed, there are Most active companies. Aggregated data on the last 1500 requests are shown here. "},{"title":"Statistics​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#statistics","content":"Aside from the Activity screen, you can find global statistics on the home screen and on widgets. "},{"title":"Low-level settings​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#low-level-settings","content":" To open the Low-level settings, go to Settings → General → (Enable Advanced mode if it's off) → Advanced settings → Low-level settings. For the most part, the settings in this section are best left untouched: only use them if you're sure about what you're doing, or if the support team has asked for them. But some settings could be changed without any risk. "},{"title":"Block IPv6​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#blockipv6","content":"For any DNS query sent to get an IPv6 address, our app returns an empty response (as if this IPv6 address does not exist). Now there is an option not to return IPv6 addresses. At this point the description of this function becomes too technical: configuring or disabling IPv6 is the exclusive domain of advanced users. Presumably, if you are one of them, it will be good to know that we now have this feature, if not – there is no need to dive into it. "},{"title":"Bootstrap and Fallback servers​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#bootstrap-fallback","content":"Fallback is a backup DNS server. If you chose a DNS server and something happened to it, a fallback is needed to set the backup DNS server until the main server responds. With Bootstrap, it’s a little more complicated. For AdGuard for iOS to use a custom secure DNS server, our app needs to get its IP address first. For this purpose, the system DNS is used by default, but sometimes this is not possible for various reasons. In such cases, Bootstrap could be used to get the IP address of the selected secure DNS server. Here are two examples to illustrate when a custom Bootstrap server might help: When a system default DNS server does not return the IP address of a secure DNS server and it is not possible to use a secure one.When our app and third-party VPN are used simultaneously and it is not possible to use System DNS as a Bootstrap. "},{"title":"Other features​","type":1,"pageTitle":"Features overview","url":"adguard-for-ios/overview/#other-features","content":"While Safari content blocking and DNS protection are indisputably two major modules of AdGuard/AdGuard Pro, there are some other minor features that don't fall into either of them directly but still can be useful and are worth knowing about. Dark theme   Residing right at the top of Settings → General screen, this setting allows you to switch between dark and light themes. Widgets  AdGuard supports widgets that provide quick access to Safari content blocking and DNS protection switches, and also show global requests stats. Auto-update over Wi-Fi only If this setting is enabled, AdGuard will use only Wi-Fi for background filter updates. Invert the Allowlist An alternative mode for Safari filtering, it unblocks ads everywhere except for the specified websites from the list. Disabled by default. Advanced mode Aside from unlocking DNS filtering, it grants access to Advanced settings. We don't recommend messing with those, unless you know what you're doing or you have consulted with technical support first. Reset statistics Clears all statistical data, such as number of requests, etc. Reset settings This option will reset all your settings. Support Use this option to contact support, report a missed ad (although we advise to use the Assistant or AdGuard's Safari Web extension for your own convenience), export logs or to make a feature request. Über uns Contains the current version of the app and an assortment of rarely needed options and links. "},{"title":"How to block YouTube ads in Safari","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/block-youtube-ads/","content":"","keywords":""},{"title":"How to block ads on YouTube in Safari​","type":1,"pageTitle":"How to block YouTube ads in Safari","url":"adguard-for-ios/solving-problems/block-youtube-ads/#how-to-block-ads-on-youtube-in-safari","content":"Unfortunately, ad blocking in the YouTube app is technically impossible, but if you watch YouTube in Safari, there is a way. We developed an action extension (available since AdGuard v4.2 for iOS) designed specifically to block ads there. After you update your app to v4.2, this extension will be installed automatically, you don't have to follow any complicated instructions. Other than ads, the extension removes the placeholder remaining after blocking on iPads. Plus, YouTube videos are played automatically again and you don't have to make an extra tap.  To activate the extension and block ads on YouTube, do the following: Open youtube.com in Safari.Tap the Share button.Tap &quot;Block YouTube Ads (by AdGuard)&quot;. YouTube is now ad-free! Please note that you need to run this extension again if you reload the page. In some cases the AdGuard extension may be not displayed. If you don't see it, try to follow the instruction again or restart your device "},{"title":"How to avoid compatibility problem with FaceTime","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/facetime-compatibility-issues/","content":"How to avoid compatibility problem with FaceTime Hinweis This article covers AdGuard for iOS, a multifunctional ad blocker that protects your device at the system level. To see how it works, download the AdGuard app It turned out that Full-Tunnel mode might interfere not only with compatibility with other VPN applications, but also with FaceTime. Some users have encountered the problem that FaceTime does not work on the device when the AdGuard app for iOS is in Full-Tunnel mode. It is likely but not guaranteed that FaceTime will work when AdGuard is in Full-Tunnel mode without VPN icon because it is also incompatible with other VPN apps and unstable. If you want to use FaceTime and make sure that video/audio calls don't stop working, use Split-Tunnel mode. To enable it, follow the instructions: Go to AdGuard for iOS Settings → General settings.Enable Advanced mode and go to the Advanced settings section that appears right after.Open Tunnel mode and select Split-Tunnel. Done! Now there should be no problems with FaceTime compatibility.","keywords":""},{"title":"Low-level Settings guide","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/low-level-settings/","content":"","keywords":""},{"title":"How to reach the Low-level settings​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#how-to-reach-the-low-level-settings","content":"Das Ändern von Low-Level-Einstellungen kann Probleme mit der Leistung von AdGuard verursachen, die Internetverbindung unterbrechen oder Ihre Sicherheit und Privatsphäre gefährden. You should only open this section if you are sure of what you are doing or our support-team has asked you about it. To go to Low-level settings, tap the gear icon at the bottom right of the screen to open Settings. Select the General section and then toggle on the Advanced mode switch, after that the Advanced settings section will appear below. Tap Advanced settings to reach the Low-level settings section. "},{"title":"Low-level settings​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#low-level-settings","content":""},{"title":"Tunnel mode​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#tunnel-mode","content":"There are two main tunnel modes: Split and Full. Split-Tunnel mode provides compatibility of AdGuard and so-called &quot;Personal VPN&quot; apps. In Full-Tunnel mode no other VPN can work simultaneously with AdGuard. There is a specific feature of Split-Tunnel mode: if DNS proxy does not perform well, for example, if the response from the AdGuard DNS server was not returned in time, iOS will &quot;amerce&quot; it and reroute traffic through DNS server, specified in iOS settings. No ads are blocked at this time and DNS traffic is not encrypted. In Full-Tunnel mode only the DNS server specified in AdGuard settings is used. If it does not respond, the Internet will simply not work. Enabled Full-Tunnel mode may cause the incorrect performance of some programs (for instance, Facetime), and lead to problems with app updates. By default, AdGuard uses Split-Tunnel mode as the most stable option. There is also an additional mode called Full-Tunnel (without VPN icon). This is exactly the same as Full-Tunnel mode, but it is set up so that the VPN icon is not displayed in the system line. "},{"title":"Blocking mode​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#blocking-mode","content":"In this module you can select the way AdGuard will respond to DNS queries that should be blocked: REFUSED — respond with REFUSED code NXDOMAIN — respond with NXDOMAIN code Unspecified IP — respond with zero IP address Custom IP — respond with a manually set IP address "},{"title":"Block IPv6​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#block-ipv6","content":"By moving the toggle to the right, you activate IPv6 query blocking (AAAA requests). "},{"title":"Blocked response TTL​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#blocked-response-ttl","content":"Hier können Sie den TTL-Wert (Time to Live) angeben, der als Antwort auf eine blockierte Anfrage zurückgegeben wird. "},{"title":"Bootstrap servers​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#bootstrap-servers","content":"For DNS-over-HTTPS, DNS-over-TLS, and DNS-over-QUIC a bootstrap server is required for getting the IP address of the main DNS server. If not specified, the DNS server from iOS settings is used as the bootstrap server. "},{"title":"Fallback-Server​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#fallback-server","content":"Here you can specify an alternate server to which a request will be rerouted if the main server fails to respond. If not specified, the system DNS server will be used as the fallback. It is also possible to specify none, in this case, there will be no fallback server set and only the main DNS server will be used. "},{"title":"Background app refresh time​","type":1,"pageTitle":"Low-level Settings guide","url":"adguard-for-ios/solving-problems/low-level-settings/#background-app-refresh-time","content":"Here you can select the frequency at which the application will check for filter updates while in the background. Note that update checks will not be performed more often than the specified period, but the exact intervals may not be respected. "},{"title":"How to activate premium features","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/premium-activation/","content":"How to activate premium features Hinweis This article covers AdGuard for iOS, a multifunctional ad blocker that protects your device at the system level. To see how it works, download the AdGuard app There are two options to activate premium features on AdGuard for iOS app: Purchase a subscription. Just tap the Get Premium plaque anywhere in the app and follow the on-screen instructions. All you'll need to do is enter your Apple ID password and confirm the purchase. You can choose between a monthly, yearly and lifetime subscriptions. Use an AdGuard license (you can purchase it at the AdGuard website). Log into your AdGuard personal account via the app: go to AdGuard app → Settings → License screen and tap the Login button there. You'll be asked to enter your AdGuard Personal account credentials*. After you do, if you have any valid license key in your account, it will be automatically picked up to activate Premium in your AdGuard for iOS app. As an alternative, you can just enter a valid license key in the e-mail field leaving password field blank to activate Premium features. PS: AdGuard Pro for iOS (our other iOS app) can only be purchased from App Store.","keywords":""},{"title":"How to configure system-wide filtering with AdGuard for iOS","type":0,"sectionRef":"#","url":"adguard-for-ios/solving-problems/system-wide-filtering/","content":"","keywords":""},{"title":"About system-wide filtering​","type":1,"pageTitle":"How to configure system-wide filtering with AdGuard for iOS","url":"adguard-for-ios/solving-problems/system-wide-filtering/#about-system-wide-filtering","content":"System-wide filtering means blocking ads and trackers beyond the Safari browser, i.e. in other apps and browsers. This article will tell you how to set it up on your iOS device. On iOS, the only way to block ads and trackers system-wide is to use DNS filtering. First, you have to enable DNS protection. To do so, open AdGuard for iOS settings → DNS protection and switch it on.  Now, if your purpose is to block ads and trackers system-wide, you have two options: Enable AdGuard DNS server (Settings → DNS protection → DNS server → AdGuard DNS).Add a DNS filter/hosts file that will block ad and tracking domains, e.g. AdGuard DNS filter. The second option takes a bit more time to set up but has several advantages: You can use any DNS server at your discretion and you are not tied up to a specific blocking server.You can add multiple DNS filters and/or hosts files at the same time, but you can't use multiple DNS servers at once.  "},{"title":"How to add a DNS filter/hosts file​","type":1,"pageTitle":"How to configure system-wide filtering with AdGuard for iOS","url":"adguard-for-ios/solving-problems/system-wide-filtering/#how-to-add-a-dns-filterhosts-file","content":"You can add any DNS filter or hosts file, the instruction will be the same for all of them. For the sake of the example, let's add AdGuard DNS filter. It is composed of several other filters (AdGuard Base filter, Social Media filter, Tracking Protection filter, Mobile Ads filter, EasyList, EasyPrivacy, etc.) and it's simplified specifically to be better compatible with DNS-level ad blocking. Open AdGuard for iOS settings → General.Enable Advanced mode. The Advanced settings tab will appear. Open it.   Note: We don't recommend touching other settings you'll find inside the Advanced settings tab, especially when it comes to Low-level settings. Some of them might break the Internet connection or compromise your privacy and security, so it's better to be careful. The text below describes the exact actions required to add AdGuard DNS filter. Copy this link: https://raw.githubusercontent.com/AdguardTeam/FiltersRegistry/master/filters/filter_15_DnsFilter/filter.txt (it's a link for AdGuard DNS filter)Open AdGuard for iOS settings → DNS protection → DNS filtering (available while Advanced mode is enabled) → DNS filters.Click Add a filter, paste the link into the filter URL field, and click 'Next'.  Add any number of other DNS filters the same way by pasting a different URL at step 3. You can find various filters and links to them here. "},{"title":"Browser-Assistent","type":0,"sectionRef":"#","url":"adguard-for-mac/browser-assistant/","content":"","keywords":""},{"title":"Vorteile​","type":1,"pageTitle":"Browser-Assistent","url":"adguard-for-mac/browser-assistant/#vorteile","content":""},{"title":"Unabhängigkeit​","type":1,"pageTitle":"Browser-Assistent","url":"adguard-for-mac/browser-assistant/#unabhängigkeit","content":"AdGuard Browser-Assistent ist eine Erweiterung, die in einem Browser installiert wird, sodass Sie nicht warten müssen, bis das Benutzerskript in die gefilterte Website eingefügt wird, wie dies bei der vorherigen der Fall war. Mit anderen Worten, es ist unabhängiger von der Haupt-AdGuard-App. Dennoch benötigt Browser-Assistent das installierte AdGuard für Mac, da es keinen Sinn macht, die Erweiterung ohne die App zu verwenden. "},{"title":"Kompatibilität mit der Haupt-App​","type":1,"pageTitle":"Browser-Assistent","url":"adguard-for-mac/browser-assistant/#kompatibilität-mit-der-haupt-app","content":"Wenn Sie sich angewöhnt haben, unsere bisherige AdGuard-Werbeblocker-Erweiterung im Integrationsmodus zu verwenden, wird Ihnen vielleicht die Lösung gefallen, die wir für den neuen Browser-Assistenten entwickelt haben. Hintergrundinformationen: In früheren Versionen der AdGuard-Browsererweiterung (vor v3.5) übernahm die Erweiterung, wenn Sie sie zusammen mit einem Desktop-AdGuard für Mac installiert hatten, die Funktionen des Assistenten, hörte auf, sich selbst zu filtern, und verließ sich dabei auf die App. Die Erweiterung und die App funktionierten zusammen, aber manchmal schlug die Integration fehl. Einige Websites würden nicht mehr durch das Desktop-Programm geschützt und nur noch von der weniger leistungsstarken Erweiterung gesichert. Bei der Verwendung des Browser-Assistenten spielen all diese Probleme keine Rolle, da es im Wesentlichen keine Konflikte geben kann. Die Rolle des Browser-Assistenten ist gut definiert und kann das Funktionieren der Haupt-App nicht beeinträchtigen, sodass Sie sich keine Sorgen machen müssen. "},{"title":"Intelligentes Onboarding​","type":1,"pageTitle":"Browser-Assistent","url":"adguard-for-mac/browser-assistant/#intelligentes-onboarding","content":"Wenn AdGuard für Mac zum ersten Mal installiert wird, begegnet ein Benutzer als erstes dem Onboarding. Während dieses Vorgangs lernt der Benutzer schnell die Einstellungen von AdGuard kennen und kann die Filterung nach seinen Wünschen anpassen. In einer Phase ermittelt AdGuard den Standardbrowser des Benutzers und stellt ihm einen Download-Link für den neuen Assistenten zur Verfügung.  In seltenen Fällen kann es vorkommen, dass ein Browser mit dem Browser-Assistenten nicht kompatibel ist, und dem Benutzer wird stattdessen angeboten, die Legacy-Version zu installieren. "},{"title":"Separate Registerkarte in den Einstellungen​","type":1,"pageTitle":"Browser-Assistent","url":"adguard-for-mac/browser-assistant/#separate-registerkarte-in-den-einstellungen","content":"Der neue Browser-Assistent hat eine eigene Registerkarte in den Einstellungen von AdGuard für Mac, zusammen mit Privatsphären-Modus, Internetsicherheit, Kindersicherung und anderen. Machen Sie sich keine Sorgen, wenn Sie die Möglichkeit verpasst haben, den Browser-Assistenten während des Onboardings zu installieren, Sie finden diese Option in den Einstellungen der App. Außerdem gibt es ein Kontrollkästchen, um den alten Assistenten zu aktivieren.  "},{"title":"Assistent für ältere Browser​","type":1,"pageTitle":"Browser-Assistent","url":"adguard-for-mac/browser-assistant/#assistent-für-ältere-browser","content":"Legacy-Assistent ist die vorherige Version von Assistent, die lediglich ein Benutzerskript und keine Browsererweiterung ist. Grundsätzlich gibt es zwei Fälle, in denen Sie ihn anstelle des neuen Browser-Assistenten auswählen möchten: 1) Der neue Assistent ist für Ihren Browser nicht verfügbar; 2) Sie sind an das grüne Schild-Symbol gewöhnt und möchten alles so lassen, wie es war. Wenn Sie sich in einem dieser Szenarien wiedererkennen, ist die Legacy-Version genau das Richtige für Sie. "},{"title":"Wie man AdGuard Browser-Assistenten installiert​","type":1,"pageTitle":"Browser-Assistent","url":"adguard-for-mac/browser-assistant/#wie-man-adguard-browser-assistenten-installiert","content":"Technisch gesehen müssen Sie dies nicht selbst tun: Während des Onboarding-Prozesses ermittelt die AdGuard-App Ihren Standardbrowser und bietet an, den Browser-Assistenten dafür zu installieren. Wenn Sie diesen Schritt jedoch verpasst haben, können Sie ihn selbst herunterladen. AdGuard Browser-Assistent ist für alle gängigen Browser verfügbar: Chrome, Firefox, Safari, Edge, Opera und Yandex. Um den Browser-Assistenten für Ihren Standardbrowser zu installieren, können Sie dies direkt über die App-Einstellungen tun, aber Sie haben auch die Möglichkeit, ihn für andere Browser zu installieren. Um das benötigte zu installieren (oder viele, es ist nicht verboten, aber sogar empfohlen), gehen Sie zu unserer Website, klicken Sie auf das Browsersymbol und dann auf die Schaltfläche Installieren. Das war's! "},{"title":"Safari Web extension","type":0,"sectionRef":"#","url":"adguard-for-ios/web-extension/","content":"","keywords":""},{"title":"What it does​","type":1,"pageTitle":"Safari Web extension","url":"adguard-for-ios/web-extension/#what-it-does","content":"By default, Safari provides only basic tools to content blockers. These tools don't allow the level of performance that can be found in content blockers on other operating systems (Windows, Mac, Android). For example, AdGuard apps on other platforms can use such effective weapons against ads as CSS rules, CSS selectors, and scriptlets. Unfortunately, these instruments are absolutely irreplaceable when dealing with more complex cases such as pre-roll ads on YouTube, for example. AdGuard's Safari Web extension compliments AdGuard by giving it the ability to employ these types of filtering rules. Besides that, AdGuard's Safari Web extension can be used to quickly manage AdGuard for iOS right from the browser. Tap the Extensions button — it's the one with a jigsaw icon, depending on your device type it may be located to the left or to the right of the address bar. Find AdGuard in the list and tap it.  On iPads AdGuard's Safari Web extension is accessible directly by tapping the AdGuard icon in the browser's address bar. You will see the following list of options: Enabling/disabling protection on the website. Turning the switch off will disable AdGuard completely for the current website and add a respective exclusion rule. Turning the switch back on will resume protection for the website and delete the rule. Any such change will require some time to take effect. Blocking elements on the page manually. Tap the Block elements on this page button to prompt a pop-up for element blocking. Select any element on the page you want to hide, adjust the selection zone, then preview changes and confirm the removal. A corresponding filtering rule will be added to AdGuard (that you can later disable or delete to revert the change). Report an issue. Swipe up to bring out the Report an issue button. Use it to report a missed ad or any other problem that you encountered on the current page. "},{"title":"How to enable AdGuard's Safari Web extension​","type":1,"pageTitle":"Safari Web extension","url":"adguard-for-ios/web-extension/#how-to-enable-adguards-safari-web-extension","content":""},{"title":"In the iOS settings​","type":1,"pageTitle":"Safari Web extension","url":"adguard-for-ios/web-extension/#in-the-ios-settings","content":"AdGuard's Safari Web extension greatly improves the ad blocking quality, so we recommend enabling it on all sites. Web extension is not a standalone tool and requires AdGuard for iOS. If you don't have AdGuard for iOS installed on your device, please install it first and complete the onboarding process to prepare it for work. Once done, open Settings → Safari → Extensions.   Find ALLOW THESE EXTENSIONS section and then find AdGuard among the available extensions.  Tap it, then turn on the switch. On the same screen make sure that the AdGuard extension has required permissions: All Websites should have the Allow status.  AdGuard's Safari Web extension requires access to the web pages' content to operate, but doesn't use it for any purpose other than blocking ads. "},{"title":"In Safari​","type":1,"pageTitle":"Safari Web extension","url":"adguard-for-ios/web-extension/#in-safari","content":"Alternitavely, you can also turn AdGuard extension on from the Safari browser. Tap the Extensions button (if you don't see it next to the address bar, tap the aA icon).  Then find the Manage Extensions option in the list and tap it. In the opened window turn on the switch next to AdGuard.   If you use this method, you may have to go to Safari settings to grant AdGuard extension the necessary permissions anyway. You should now be able to see AdGuard among the available extensions. Tap it and then the yellow i icon. Enable Advanced protection by tapping the Turn on button and confirming the action. If you use AdGuard for iOS without Premium subscription, you won't be able to enable Advanced protection. Alternatively, you can enable Advanced protection directly from the app, in the Protection tab (second from the left in the bottom icon row). AdGuard's Safari Web extension only works on iOS versions 15 and later. "},{"title":"Installation/Deinstallation","type":0,"sectionRef":"#","url":"adguard-for-mac/installation/","content":"","keywords":""},{"title":"Systemanforderungen​","type":1,"pageTitle":"Installation/Deinstallation","url":"adguard-for-mac/installation/#systemanforderungen","content":"Betriebssystemversion: macOS 10.13 (64 Bit) oder höher RAM: mindestens 2 GB Browser: Safari, Chrome, Firefox, Opera, Yandex.Browser und jeder andere macOS-kompatible Browser Freier Speicherplatz: 120 MB "},{"title":"Installation​","type":1,"pageTitle":"Installation/Deinstallation","url":"adguard-for-mac/installation/#installation","content":"To install AdGuard for macOS on your computer, launch your browser, type adguard.com in the address bar, and press Download on the page that opens.  Warten Sie, bis AdguardInstaller.dmg heruntergeladen wurde, und doppelklicken Sie auf das Symbol in der Liste der heruntergeladenen Dateien im Dock-Bedienfeld.  Das AdGuard-Symbol erscheint auf Ihrem Desktop. Klicken Sie darauf, um die Installations-App zu öffnen, und doppelklicken Sie im geöffneten Fenster auf das AdGuard-Symbol.  Beim ersten Start von AdGuard wird Ihr Betriebssystem Sie warnen, dass diese App aus dem Internet heruntergeladen wurde. Klicken Sie auf Öffnen.  Im nächsten Schritt müssen Sie auf Installieren klicken.  Warten Sie auf die Ausführung des Installationsprogramms.  Um die App nutzen zu können, benötigen Sie das Administratorpasswort für Ihr macOS-Konto. Geben Sie das Passwort ein, wenn Sie im Dialogfeld dazu aufgefordert werden, und drücken Sie OK.  Jetzt sehen Sie einen Schnellinstallationsassistenten, in dem Sie angeboten werden, den Schutz nach Ihren Bedürfnissen zu konfigurieren. Sie können entweder gleich mit dem Feintuning beginnen („Auf gehts!“) oder vorerst überspringen („Nicht ändern“).  So, AdGuard ist auf Ihrem Mac installiert! "},{"title":"Deinstallation​","type":1,"pageTitle":"Installation/Deinstallation","url":"adguard-for-mac/installation/#deinstallation","content":""},{"title":"Regulär​","type":1,"pageTitle":"Installation/Deinstallation","url":"adguard-for-mac/installation/#regulär","content":"Öffnen Sie zunächst die Finder-App, indem Sie auf das entsprechende Symbol klicken:  Gehen Sie zum Abschnitt Anwendungen. Suchen Sie dort AdGuard, klicken Sie mit der rechten Maustaste darauf und wählen Sie In den Papierkorb verschieben.  "},{"title":"Erweitert​","type":1,"pageTitle":"Installation/Deinstallation","url":"adguard-for-mac/installation/#erweitert","content":"Verwenden Sie diese Anleitung nur, wenn Sie wissen, was Sie tun, oder wenn unser Support-Service Ihnen ausdrücklich die „erweiterte Deinstallation“ empfohlen hat. Führen Sie außerdem zuerst alle Schritte aus der „regulären Deinstallation“ durch. After that, delete following AdGuard files: /Library/Application Support/AdGuard Software/com.adguard.mac.adguard (folder)~/Library/Preferences/com.adguard.mac.adguard.plist (file)~/Library/Group\\ Containers/TC3Q7MAJXF.com.adguard.mac (folder)/Library/LaunchDaemons/com.adguard.mac.adguard.adguard-pac.daemon.plist (file)/Library/LaunchDaemons/com.adguard.mac.adguard.adguard-tun-helper.daemon.plist (file)/Library/Logs/com.adguard.mac.adguard/com.adguard.mac.adguard.adguard-pac.daemon.log (file)/Library/Logs/com.adguard.mac.adguard/com.adguard.mac.adguard.adguard-tun-helper.daemon.log (file) To do so, open the Terminal app, then enter and execute the following commands: sudo rm -R &quot;/Library/Application Support/AdGuard Software/com.adguard.mac.adguard&quot;rm -R &quot;$HOME/Library/Application Support/com.adguard.mac.adguard&quot;rm $HOME/Library/Preferences/com.adguard.mac.adguard.plistrm -R &quot;$HOME/Library/Group Containers/TC3Q7MAJXF.com.adguard.mac&quot;find &quot;$HOME/Library/Application Support&quot; -name &quot;com.adguard.browser_extension_host.nm.json&quot; -deletesudo rm /Library/LaunchDaemons/com.adguard.mac.adguard.adguard-pac.daemon.plistsudo rm /Library/LaunchDaemons/com.adguard.mac.adguard.adguard-tun-helper.daemon.plistsudo rm /Library/Logs/com.adguard.mac.adguard/com.adguard.mac.adguard.adguard-pac.daemon.logsudo rm /Library/Logs/com.adguard.mac.adguard/com.adguard.mac.adguard.adguard-tun-helper.daemon.log Run the Activity Monitor app. Suchen Sie mit dem Suchwerkzeug den Prozess cfprefsd. Stoppen Sie den Prozess, der unter dem Benutzer ausgeführt wird (nicht den, der unter Root ausgeführt wird). Klicken Sie dazu auf den Prozess und dann oben links auf X. Bestätigen Sie dies im Dialogfenster. AdGuard ist jetzt von Ihrem Computer entfernt. "},{"title":"Funktionsübersicht","type":0,"sectionRef":"#","url":"adguard-for-mac/overview/","content":"","keywords":""},{"title":"Startseite​","type":1,"pageTitle":"Funktionsübersicht","url":"adguard-for-mac/overview/#startseite","content":" Das erste, was Sie beim Start sehen, ist ein Bildschirm mit einem großen Ein / Aus-Schalter. Unten werden verschiedene Statistiken (Werbung blockiert, Tracker blockiert, gespeicherte Daten) seit der Installation oder seit dem letzten Zurücksetzen der Statistiken angezeigt. Um mit der Konfiguration von AdGuard für Mac zu beginnen, müssen Sie auf das Zahnrad in der oberen rechten Ecke des Fensters klicken und „Einstellungen“ auswählen. "},{"title":"Allgemeine Einstellungen​","type":1,"pageTitle":"Funktionsübersicht","url":"adguard-for-mac/overview/#allgemeine-einstellungen","content":" Die Beschreibungen unter den Optionstiteln scheinen selbsterklärend zu sein, aber dennoch: Sprachspezifische Filter automatisch aktivieren. Wenn Sie diese Option aktivieren, müssen Sie beim Besuch einer fremden Website nicht alle Filter manuell auswählen, was Ihnen Zeit spart. AdGuard beim Anmelden starten. Eine einfache und bequeme Funktion, mit der Sie sich keine Gedanken darüber machen müssen, ob Sie Ihren Werbeblocker aktiviert haben oder nicht, und einfach sicher sein können, dass Werbung immer blockiert wird. Werbung in Suchmaschinen und Eigenwerbung der Websites zulassen. Diese Option kann für Online-Käufer nützlich sein: Anstatt alle Ihre bevorzugten E-Shops und Websites zur Zulassungsliste hinzuzufügen, können Sie einfach Eigenwerbung und Suchanzeigen ausschließen vom Filtern. AdGuard erkennt diese automatisch und lässt sie zu, während alles andere werbeähnlich entfernt wird. Menüleistensymbol ausblenden. Wenn Sie das Menüleistensymbol nicht sehen möchten, können Sie es ausblenden. Aber keine Sorge: Auch wenn Sie es aus der Menüleiste entfernen, läuft AdGuard im Hintergrund weiter. Aus demselben Fenster können Sie auf die oben erwähnte Zulassungsliste zugreifen, zu der Sie Websites hinzufügen können, die AdGuard nicht filtern soll. Klicken Sie einfach auf die entsprechende Schaltfläche am unteren Rand des Fensters. "},{"title":"Filter​","type":1,"pageTitle":"Funktionsübersicht","url":"adguard-for-mac/overview/#filter","content":" Filter sind die wichtigste treibende Kraft hinter dem Werbeblocker-Modul. Um zu verstehen, wie das Filtern funktioniert, machen Sie sich mit unserem umfassenden Artikel vertraut. Aber im Wesentlichen sind Filterlisten Sätze von Regeln, die in einer speziellen Sprache geschrieben sind, und Ihr Werbeblocker ist ein Interpreter dieser Regeln, der sie dann umsetzt. Das Ergebnis ist, dass Sie keine Werbung mehr auf Websites sehen und das Web-Erlebnis genießen. Einige Filterlisten (AdGuards Basisfilter, Belästigungsfilter, EasyList usw.) sind vorinstalliert, während andere spezifische, an Ihre Vorlieben angepasste, zusätzlich heruntergeladen und Ihrem Programm hinzugefügt werden können. Neben den allgemeineren und universell einsetzbaren Filtern (wie Basisfilter) bietet AdGuard eine umfangreiche Menge an Filtern für jeden Anlass: Filter zur Verhinderung von Tracking (Tracking-Schutzfilter),sprachspezifische Werbefilter, die Inhalte in einer ausgewählten Sprache blockieren,Social-Media-Filter, der die Schaltflächen „Gefällt mir“ und „Teilen“ entfernt,Belästigungsfilter für Cookie-Warnungen, In-Page-Pop-ups und andere der gleichen Art,und sogar ein Filter, der einige Anzeigen entsperrt, anstatt sie zu blockieren – Filter für Suchanzeigen und Eigenwerbung. AdGuard-Filter werden automatisch aktualisiert. Unsere Entwickler erstellen sie alle basierend auf dem erhaltenen Benutzerfeedback. Sie können anderen AdGuard-Benutzern (und perspektivisch sich selbst) jederzeit helfen, indem Sie uns Berichte direkt aus dem Assistenten der App oder von der -Website senden. Wenn Sie mehr über AdGuard-Filter wissen möchten, finden Sie hier einige Informationen. "},{"title":"Benutzerregeln​","type":1,"pageTitle":"Funktionsübersicht","url":"adguard-for-mac/overview/#benutzerregeln","content":" Ein weiterer wichtiger Bestandteil des Werbeblocker-Moduls sind seine Benutzerregeln. Wenn Sie etwas Programmiererfahrung haben und Ihre eigenen Regeln erstellen möchten, die besser angepasst sind als die bereits verfügbaren Standardfilter, dann können Sie sich daran versuchen. Die Syntax, die AdGuard für seine Filterregeln verwendet, basiert auf der jeder anderen Werbeblockierung-Erweiterung, jedoch mit erheblichen Ergänzungen, die ihre Möglichkeiten erweitern. Der gesamte Prozess der Regelerstellung in all seinen Nuancen wird in diesen umfassenden Anleitungen beschrieben. Wenn Sie also einige benutzerdefinierte Regeln schreiben und überprüfen möchten, wie gut Sie programmieren können, folgen Sie einfach den Schritten, die wir in diesem Artikel beschrieben haben. "},{"title":"DNS​","type":1,"pageTitle":"Funktionsübersicht","url":"adguard-for-mac/overview/#dns","content":" Die DNS-Filterung ist eine der nützlichsten Funktionen, dank derer Ihr gesamter DNS-Verkehr verschlüsselt wird. Wenn Sie den Standard-DNS-Server Ihres Internetanbieters verwenden, ist Ihr DNS-Datenverkehr wahrscheinlich nicht verschlüsselt und anfällig für Snooping und Hijacking. Im DNS-Panel können Sie die DNS-Server von bekannten DNS-Anbietern auswählen oder sogar benutzerdefinierte DNS-Server hinzufügen. Sie können auch Domains zur DNS-Sperrliste oder -Zulassungsliste hinzufügen und komplizierte Regeln mithilfe der DNS-Regelsyntax hinzufügen. Schließlich können Sie DNS-Filter Ihrer Wahl hinzufügen. "},{"title":"Privatsphäre​","type":1,"pageTitle":"Funktionsübersicht","url":"adguard-for-mac/overview/#privatsphäre","content":" Dieses Modul ist ein sehr nützliches Tool, das Ihnen hilft, Ihre Privatsphäre vor Websites zu wahren, die versuchen, Informationen über Sie wie Ihre IP-Adresse, Computerparameter, Browsereinstellungen und sogar die Startseite, von der Sie weitergeleitet wurden, zu speichern, ganz zu schweigen vom Inhalt des Einkaufswagens wenn wir von Webshops sprechen. Wenn diese Liste von Informationen, die möglicherweise mit zwielichtigen Dritten geteilt werden können, Sie nicht zweimal nachdenken lässt, dann dürfen wir hinzufügen, dass sie in den meisten Fällen auch solche persönlichen Daten wie Ihr Alter, Ihr Jahreseinkommen, Ihre Krankengeschichte, Ihre physische Adresse und die Namen Ihrer Kinder erhalten. Das Eliminieren von Dingen wie unerwünschten Cookies oder das heimliche Einfügen von Tracking-Parametern in Ihren Browser ist das, was der Privatsphärenmodus am besten kann. Der Privatsphären-Modus enthält eine Vielzahl von Optionen, die eine flexible Konfiguration gewährleisten. Sie sind in mehrere Kategorien unterteilt, und für einen unvorbereiteten Benutzer werden viele von ihnen verwirrend und vielleicht sogar kompliziert erscheinen. Wir haben jede Option mit einem Hinweis versehen, um den Mangel auszugleichen – Hinweise werden angezeigt, wenn Sie mit der Maus über das Symbol mit einem Fragezeichen fahren. Wenn Sie dennoch mehr über das gesamte Konzept erfahren möchten, empfehlen wir Ihnen, mit diesem Artikel fortzufahren. "},{"title":"Internetsicherheit​","type":1,"pageTitle":"Funktionsübersicht","url":"adguard-for-mac/overview/#internetsicherheit","content":" Als nächstes haben wir das Sicherheitsfenster, in dem sich ein Modul befindet, das auch als Internetsicherheit bekannt ist. Es bietet Schutz vor bösartigen und Phishing-Websites. Beachten Sie, dass AdGuard kein Antivirus ist, sondern ein völlig anderes Programm. Es zeigt Ihnen eine Warnung, wenn Sie im Begriff sind, auf eine infizierte Domain zu gehen, aber es kann Sie nicht daran hindern, etwas Verdächtiges herunterzuladen oder Ihnen helfen, mit bereits vorhandenen Viren fertig zu werden. Phishing ist ein weit verbreiteter Internetbetrug, der darauf abzielt, persönliche Daten (Passwörter, Bankkontodaten usw.) zu stehlen. Es wird mithilfe gefälschter Websites durchgeführt, die beliebte Websites oder echte Dienste wie Webshops oder soziale Netzwerke nachahmen. Viele Phishing-Websites haben URLs, die sich nur in wenigen Symbolen von den echten unterscheiden, um Sie abzuschrecken. Wenn ein Benutzer seine Daten auf einer solchen Website eingibt, landen sie definitiv in den falschen Händen. Internetsicherheit bietet starken Schutz vor solchen Vorfällen. Gleichzeitig werden die persönlichen Daten des Nutzers nirgendwo übertragen, und die AdGuard-Server wissen nicht, welche Websites der Nutzer besucht, da die Sicherheitsprüfung nicht über die offene Webadresse (URL), sondern über Hash-Präfixe erfolgt (Hash ist eine bestimmte Datenstruktur, die jede zur Basis hinzugefügte Adresse eindeutig macht). Einige Websites sind selbst nicht bösartig, aber sie können Elemente enthalten, die von anderen Websites in ihre Struktur eingebaut wurden. Im Gegensatz zu Browser-Plugins prüft das Internetsicherheit-Modul jedes Objekt, das in eine Website eingebaut ist, und gewährleistet so maximalen Schutz. Wenn Sie uns bei der Perfektionierung dieses Moduls helfen möchten, können Sie das untere Kästchen neben dem Satz „Helfen Sie uns bei der Entwicklung von Browsing-Sicherheitsfiltern“ markieren. Dadurch kann Ihr Computer uns relevante Informationen über betrügerische Websites senden, auf die Sie beim Surfen im Internet stoßen könnten – und unsere Entwickler werden sicherstellen, dass sie am Ende Ihrer Sperrliste gesperrt werden. "},{"title":"Browser-Assistent​","type":1,"pageTitle":"Funktionsübersicht","url":"adguard-for-mac/overview/#browser-assistent","content":" Die Hauptfunktion des AdGuard Browser-Assistenten besteht darin, die Filterung direkt vom Browser aus zu verwalten. Früher war es ein einfaches Benutzerskript, das in die AdGuard für Mac-App integriert wurde, die dann zu einer vollwertigen Browsererweiterung wurde. Erfahren Sie mehr über die Vorteile, die sie bietet.  Bei der Erstinstallation von AdGuard (während des Einführungsprozesses) werden Sie aufgefordert, den Browser-Assistenten für Ihren Standardbrowser zu installieren. Falls Sie es verpasst haben, können Sie es jederzeit für jeden Browser herunterladen. "},{"title":"Erweiterungen​","type":1,"pageTitle":"Funktionsübersicht","url":"adguard-for-mac/overview/#erweiterungen","content":" Erweiterungen sind kleine Programme, die genau das tun, was ihr Name andeutet – sie erweitern die Funktionalität. Und AdGuard verwendet mehrere eigene Erweiterungen, auch Userscripts genannt, um seinen Funktionsumfang zu erweitern: 1. AdGuard Assistent (Legacy-Version) Diese Erweiterung unterstützt den Benutzer beim Ändern grundlegender AdGuard-Einstellungen im Browser, ohne dass die App selbst geöffnet werden muss. Wie der Browser-Assistent funktioniert auch der Legacy-Assistent mit allen macOS-kompatiblen Browsern. Mit diesem kleinen Tool können Sie mehrere Dinge tun, ohne den Browser verlassen zu müssen: eine bestimmte Website auf die Liste der nicht blockierten Seiten setzen, ein besonders störendes Element auf der Seite auswählen und blockieren, die Website melden, wenn sie es trotzdem schafft, Werbung zu Ihnen durchzuschleusen. Beachten Sie, dass es sich bei dieser Version des Assistenten um eine alte Version handelt, die auf neuen Systemen nicht mehr verwendet werden kann, da sie durch den vollwertigen Browser-Assistenten ersetzt wurde. Der ältere Assistent kann jedoch hilfreich sein, wenn es keine Browser-Assistent-Erweiterung für Ihren Browser gibt. 2. AdGuard Extra wird verwendet, um die komplizierteren Fälle von Werbeblockern zu lösen, denen Sie begegnen könnten. Wir empfehlen Ihnen, es immer eingeschaltet zu lassen, es sei denn, Sie haben einen schwerwiegenden Grund, dies nicht zu tun. 3. AdGuard Popup-Blocker verhindert, dass all diese lästigen Popup-Fenster geöffnet werden, wenn Sie Websites anzeigen. Sperrt Werbe-Pop-ups auf Websites. Eine der wichtigen Funktionen von AdGuard für Mac ist, dass die Anwendung als browserübergreifender Userscript-Manager fungieren kann. Sie können ganz einfach beliebige Skripte hinzufügen und vorhandene verwalten, ohne jedes Mal den Browser wechseln zu müssen. "},{"title":"Netzwerk​","type":1,"pageTitle":"Funktionsübersicht","url":"adguard-for-mac/overview/#netzwerk","content":" Dieses letzte Panel ist der Netzwerkfilterung gewidmet, und Sie finden hier zusätzliche Funktionen. Wir empfehlen, die ersten beiden zu aktivieren: „Anwendungen automatisch filtern“ und „HTTPS-Protokoll filtern“. Dies ist eine wichtige zusätzliche Vorsichtsmaßnahme, um Ihren Webspace besser zu filtern. HTTP ist das primäre Protokoll zur Übertragung von Informationen über das Internet. Die meisten Daten, einschließlich Werbung, werden darüber übertragen, aber es hat einen Nachteil — die Verbindung ist unverschlüsselt. Dank der HTTPS-Filterfunktion von AdGuard wird nicht nur der HTTP-Verkehr gefiltert, sondern auch der HTTPS-Verkehr (S steht für „sicher“). Außerdem gibt es die Optionen „Websites mit EV-Zertifikaten nicht filtern“ und „AdGuard als HTTP-Proxy verwenden“. Extended Validation (EV) SSL-Zertifikate bieten eine stärkere Sicherheitsgarantie; die Inhaber solcher Websites müssen ein gründliches und weltweit standardisiertes Identitätsprüfungsverfahren durchlaufen, das durch EV-Richtlinien definiert ist. Aus diesem Grund vertrauen einige Benutzer Websites mit solchen Zertifikaten und ziehen es vor, sie nicht zu filtern. Was die zweite Option betrifft – nun ja, tatsächlich können Sie AdGuard als normalen HTTP-Proxy-Server verwenden. Der gesamte Datenverkehr, der über diese Schnittstelle läuft, wird gefiltert. Dieser Proxy wird auch in Ihrem lokalen Netzwerk verfügbar sein, so dass Sie ihn zur Filterung des Datenverkehrs auf anderen Geräten verwenden können, die den Proxy direkt erreichen können. Um den Datenverkehr auf einem anderen mit dem Proxy verbundenen Gerät zu filtern, müssen Sie dort ein AdGuard-Root-Zertifikat installieren. Nachdem Sie den Proxy konfiguriert haben, öffnen Sie Ihren Browser und gehen Sie auf diese Seite. "},{"title":"Andere Optionen​","type":1,"pageTitle":"Funktionsübersicht","url":"adguard-for-mac/overview/#andere-optionen","content":"Es gibt andere nützliche AdGuard-Optionen, die in diesem Artikel nicht unbemerkt bleiben sollten, da sie viel zur Benutzererfahrung beitragen. "},{"title":"Lizenz​","type":1,"pageTitle":"Funktionsübersicht","url":"adguard-for-mac/overview/#lizenz","content":"Zuerst gibt es die Registerkarte Lizenz, die Sie über das Dropdown-Hauptmenü öffnen können (diejenige, die geöffnet wird, sobald Sie auf das Zahnradsymbol oben rechts im Hauptfenster klicken). Auf dieser Registerkarte können Sie sehen, welchen Lizenztyp Sie verwenden, seinen Status und seine Gültigkeitsdauer überprüfen.  Auf derselben Registerkarte können Sie Ihren Lizenzstatus aktualisieren, Ihre Lizenz erneuern oder den Lizenzschlüssel mit den entsprechenden Schaltflächen zurücksetzen. "},{"title":"Support​","type":1,"pageTitle":"Funktionsübersicht","url":"adguard-for-mac/overview/#support","content":"Klicken Sie auf das Zahnradsymbol in der oberen rechten Ecke, wählen Sie „Support“ und Sie können einen Fehlerbericht oder eine Feature-Anfrage an unser Support-Team senden. Stellen Sie jedoch sicher, dass Sie Ihre echte E-Mail-Adresse hinzufügen, da die Nachricht ohne sie nicht gesendet wird.  Um eine verpasste Anzeige oder eine defekte Website zu melden, folgen Sie bitte dem Link über dem Nachrichtenfenster, wir verwenden ein separates Meldetool für diese Art von Problemen. Es ist möglich, Ihrer Nachricht einen Diagnosebericht beizufügen, Sie müssen nur das Kontrollkästchen im unteren Teil der Registerkarte aktivieren. "},{"title":"Updates prüfen​","type":1,"pageTitle":"Funktionsübersicht","url":"adguard-for-mac/overview/#updates-prüfen","content":"Zu guter Letzt. Sie können nach Filter- und Programmaktualisierungen suchen, indem Sie auf die entsprechenden Menüoptionen im Dropdown-Menü klicken (klicken Sie auf das Zahnradsymbol, um es zu sehen). "},{"title":"Erweiterte Einstellungen","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/advanced-settings/","content":"","keywords":""},{"title":"Wo findet man die Eweiterten Einstellungen​","type":1,"pageTitle":"Erweiterte Einstellungen","url":"adguard-for-mac/solving-problems/advanced-settings/#wo-findet-man-die-eweiterten-einstellungen","content":"Das Ändern von Low-Level-Einstellungen kann Probleme mit der Leistung von AdGuard verursachen, die Internetverbindung unterbrechen oder Ihre Sicherheit und Privatsphäre gefährden. Sie sollten diesen Abschnitt nur öffnen, wenn Sie sicher sind, was Sie tun, oder wenn unser Support-Team Sie darum gebeten hat. Um zu Erweiterte Einstellungen zu gelangen, folgen Sie dieser Route: das AdGuard-Symbol im Taskleistenmenü → das Zahnradsymbol → Erweitert → Erweiterte Einstellungen. "},{"title":"Erweiterte Einstellungen​","type":1,"pageTitle":"Erweiterte Einstellungen","url":"adguard-for-mac/solving-problems/advanced-settings/#erweiterte-einstellungen","content":"network.extension.exclude.domains The listed domains will be excluded from filtering in the Network Extension mode. Verwenden Sie ein Komma oder einen Zeilenumbruch, um Werte zu trennen. network.extension.exclude.ports The listed ports will be excluded from filtering in the Network Extension mode. Verwenden Sie ein Komma oder einen Zeilenumbruch, um Werte zu trennen. network.extension.route.exclude The listed routes will be excluded from filtering in the Network Extension mode. Legen Sie Routen mit einer IP-Adresse oder einem Ziel-CIDR fest. Trennen Sie die Werte durch Kommas oder Zeilenumbrüche. network.extension.http.downgrade.bundleids Hier können Sie eine Liste von Anwendungen angeben, für die das HTTP/2-Protokoll im Filtermodus Netzwerk-Erweiterung auf HTTP/1.1 heruntergestuft wird. Die Bundle-ID sollte durch ein Komma oder einen Zeilenumbruch getrennt werden. network.extension.monterey.force.split.tunnel Here you can prohibit AdGuard from using the &quot;default route&quot; which is enabled by default in the Network Extension mode on macOS Monterey. AdGuard uses &quot;default route&quot; to disable iCloud Private Relay and Protect Mail Activity, as it cannot operate in unison with them. Weitere Informationen zum Problem finden Sie in diesem Artikel. network.extension.dns.redirect.exclude.bundleids Hier können Sie eine Liste von Anwendungen angeben, die DNS-Abfragen direkt und nicht über den System-DNS-Resolver durchführen (z. B. einige VPN-Clients oder DNS-Filteranwendungen). Die DNS-Filterung wird für sie im Netzwerk-Erweiterung Modus deaktiviert. Die Bundle-IDs sollten durch ein Komma oder einen Zeilenumbruch getrennt werden. network.dns.filter.secure.request Redirects secure DNS requests to a local DNS proxy, if there is one available. network.https.ocsp.check Indem Sie true festlegen, aktivieren Sie die Sperrprüfung von HTTPS-Zertifikaten. network.tcp.keepalive.enabled Periodically sends TCP packets over an idle connection to ensure that it remains active and to renew NAT timeouts. network.tcp.keepalive.interval.seconds Idle time, in seconds, before sending a keepalive probe. If 0 is specified, the system will use the default value. network.tcp.keepalive.timeout.seconds Time, in seconds, before sending another keepalive probe to an unresponsive peer. Wird 0 (Null) angegeben, wird der vom System gewählte Wert verwendet. network.https.ech.enabled Uses a local DNS proxy to look for configs in the ECH Config Lists. If found, encrypts ClientHellos. network.https.enforce.certificate.transparency Überprüft die Authentizität aller Zertifikate für die Domain basierend auf der Chrome Certificate Transparency Policy. network.filtering.localnetwork Indem Sie true setzen, aktivieren Sie die lokale Netzwerkfilterung. network.filtering.localhost Wenn Sie true setzen, aktivieren Sie die LoopBack-Filterung. dns.proxy.bootstrap.ips Hier können Sie die IP-Adressen der DNS-Server eingeben, die verwendet werden, um die Adresse des verschlüsselten DNS-Servers zu ermitteln. dns.proxy.fallback.ips Hier können Sie eine Liste mit IP-Adressen von DNS-Servern angeben, die als Backup verwendet werden, falls der verschlüsselte DNS-Server nicht antwortet. dns.proxy.fallback.on.upstreams.failure.enabled Normal queries will be redirected to a fallback upstream if all normal upstreams fail. dns.proxy.detect.search.domains Diese Option aktiviert die automatische Erkennung der lokalen Netzwerkdomains, die automatisch auf den Fallback-DNS-Server statt auf den Haupt-DNS-Server umgeleitet wird. dns.proxy.fallback.domains Hier können Sie Domains auflisten, für die der Fallback-DNS-Server anstelle des Haupt-DNS-Servers verwendet werden soll. dns.proxy.adblockrules.blocking.mode Hier können Sie die Art der Antwort des DNS-Servers auf blockierte Anfragen festlegen, die den Regeln im Stil von Werbeblockern entsprechen. 0 — respond with REFUSED1 — respond with NXDOMAIN2 — respond with 0.0.0.0 or the addresses specified in dns.proxy.blocking.response.IPv4.address and/or dns.proxy.blocking.response.IPv6.address dns.proxy.hostrules.blocking.mode Hier können Sie die Art der Antwort des DNS-Servers auf blockierte Anfragen entsprechend den Hosts-Regeln festlegen: 0 — respond with REFUSED1 — respond with NXDOMAIN2 — respond with 0.0.0.0 or the addresses specified in dns.proxy.blocking.response.IPv4.address and/or dns.proxy.blocking.response.IPv6.address dns.proxy.blocking.response.IPv4.address Hier können Sie die IPv4-Adresse angeben, die als Antwort auf blockierte „A“-Anfragen zurückgegeben wird, wenn dns.proxy.adblockrules.blocking.mode oder dns.proxy.hostrules.blocking.mode auf den Antworttyp „ADRESSE“ eingestellt ist. dns.proxy.blocking.response.IPv6.address Hier können Sie die IPv6-Adresse angeben, die als Antwort auf blockierte „AAAA“-Anfragen zurückgegeben wird, wenn dns.proxy.adblockrules.blocking.mode oder dns.proxy.hostrules.blocking.mode auf den Antworttyp „ADRESSE“ eingestellt ist. dns.proxy.block.AAAA.requests Hier können Sie die Blockierung von IPv6-DNS-Abfragen aktivieren. dns.proxy.blocked.response.TTL.in.seconds Hier können Sie den TTL-Wert (Time to Live) angeben, der als Antwort auf eine blockierte Anfrage zurückgegeben wird. dns.proxy.parallel.upstream.queries.enabled All upstreams are queried simultaneously. The first response is returned. dns.proxy.servfail.on.upstreams.failure.enabled Responds to upstream failure with a SERVFAIL packet. dns.proxy.http3.enabled Enables HTTP/3 for DNS-over-HTTPS upstreams to accelerate connection. dns.proxy.block.encrypted.client.hello.response Removes the Encrypted Client Hello parameters from responses. stealth.antidpi.http.split.fragment.size Passt die Größe der Fragmentierung der HTTP-Anfrage an. Accepted values: 1–1500. If an invalid size is specified, the system will use the default value. stealth.antidpi.clienthello.split.fragment.size This option specifies the size of TCP packet fragmentation, which helps avoid deep packet inspection. Accepted values: 1–1500. If an invalid size is specified, the system will use the default value. stealth.antidpi.http.space.juggling Adds extra space between the HTTP method and the URL and removes space after the &quot;Host:&quot; field. subscription.link.interception.userscript Aktivieren Sie diese Funktion, wenn Sie möchten, dass AdGuard die URLs von Benutzerskripten automatisch abfängt und das Installationsfenster öffnet. subscription.link.interception.filter Aktivieren Sie diese Funktion, wenn Sie möchten, dass AdGuard Abonnement-URLs (z. B. abp:subscribe usw.) automatisch abfängt, und öffnen Sie das benutzerdefinierte Filter-Setup-Fenster. "},{"title":"Kompatibilitätsprobleme mit verschiedenen macOS-Versionen","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/big-sur-issues/","content":"","keywords":""},{"title":"Aktuell bestehende Probleme​","type":1,"pageTitle":"Kompatibilitätsprobleme mit verschiedenen macOS-Versionen","url":"adguard-for-mac/solving-problems/big-sur-issues/#aktuell-bestehende-probleme","content":"Jedes Jahr veröffentlicht Apple eine neue Version von macOS, die innovative Lösungen einführt und neue nützliche Funktionen hinzufügt. Einige von ihnen, wie Netzwerk-Erweiterungs API (Big Sur) oder iCloud Private Relay (Monterey), verursachen jedoch einige Probleme für viele Anwendungen, wobei AdGuard keine Ausnahme bildet. In diesem Artikel betrachten wir die bekannten Probleme, die für jede macOS-Version spezifisch sind, und auch die möglichen Lösungen. "},{"title":"Monterey 12: derzeit bestehende Probleme​","type":1,"pageTitle":"Kompatibilitätsprobleme mit verschiedenen macOS-Versionen","url":"adguard-for-mac/solving-problems/big-sur-issues/#monterey-12-derzeit-bestehende-probleme","content":"Diese Probleme wurden von Apple noch nicht oder nur teilweise behoben. Kompatibilität mit iCloud Private Relay​ Derzeit können AdGuard und iCloud Private Relay nicht gleichzeitig funktionieren. AdGuard kann keine Werbung blockieren, da iCloud Private Relay den Datenverkehr verschlüsselt, bevor AdGuard Netzwerkverbindungen filtern kann. Wenn iCloud Private Relay aktiv ist, wird jegliche Filterung (einschließlich lokaler Filterung) unmöglich. Daher kann AdGuard in Safari keinen Datenverkehr filtern oder eine DNS-Filterung durchführen. Aus diesem Grund verwendet AdGuard standardmäßig die „Standardroute“, die iCloud Private Relay deaktiviert. Für ein tieferes Verständnis dieses Problems lesen Sie bitte diesen Artikel. Empfohlene Lösung Wir empfehlen die Verwendung von AdGuard zusammen mit einem traditionelleren VPN-Dienst wie AdGuard VPN. Alternative Lösung Sie können verhindern, dass AdGuard die „Standardroute“ verwendet, indem Sie sie deaktivieren. Dies kann über Erweiterte Einstellungen → network.extension.monterey.force.split.tunnel erfolgen. Beachten Sie, dass die Aktivierung dieser Einstellung zu den oben beschriebenen Problemen führt.  Kompatibilität mit Protect Mail Activity​ Die Mail-App von Apple verwendet jetzt einen Proxy, um die IP-Adressen der Nutzer:innen zu verbergen, wenn Bilder aus E-Mails heruntergeladen werden. Es funktioniert jedoch nicht, wenn eine VPN-Verbindung aktiv ist. Da AdGuard als VPN behandelt wird, werden Bilder nicht automatisch vorgeladen. Für ein tieferes Verständnis dieses Problems lesen Sie bitte diesen Artikel. Empfohlene Lösung An dieser Stelle empfehlen wir die Verwendung eines traditionelleren VPN-Dienstes wie AdGuard VPN anstelle der neuen Datenschutzfunktionen von Apple. "},{"title":"Monterey 12, Big Sur 11.6 und höher: derzeit bestehende Probleme​","type":1,"pageTitle":"Kompatibilitätsprobleme mit verschiedenen macOS-Versionen","url":"adguard-for-mac/solving-problems/big-sur-issues/#monterey-12-big-sur-116-und-höher-derzeit-bestehende-probleme","content":"Diese Probleme wurden von Apple noch nicht oder nur teilweise behoben. Kompatibilität mit Cisco AnyConnect​ AdGuard will not work together with Cisco AnyConnect while in the Network Extension mode. Sie müssen AdGuard in den Modus Automatischer Proxy schalten. Folgen Sie dazu dieser Anleitung. Kompatibilität mit Flutter​ Dieses Problem wurde in Flutter 2.2 behoben, das im Juni 2021 veröffentlicht wurde. Aber um es für in Flutter entwickelte Anwendungen zu beheben, müssen Sie auf Updates warten. Wenn Sie Flutter zusammen mit AdGuard im „Netzwerk-Erweiterung“-Modus (oder einer anderen App vom Typ „Transparent Proxy“) in Monterey oder Big Sur verwenden, werden Sie auf Probleme stoßen: Projekte werden nicht geöffnet und Flutter wird effektiv unterbrochen. Wir haben diesen Fehler bereits an Apple gemeldet. In der Zwischenzeit können Sie diese temporären Lösungen verwenden: 1) Verwenden Sie AdGuard im Modus Automatischer Proxy. 2) Deaktivieren Sie SIP und schalten Sie AdGuard in den Kernel-Extension-Modus, wie hier erklärt. VPN-Apps mit Legacy-API​ Obwohl AdGuard in den Systemeinstellungen als VPN angezeigt wird, sollte es keine Konflikte verursachen, wenn es mit anderen VPN-basierten Apps zusammenarbeitet. Wenn Sie jedoch eine VPN-basierte App verwenden, die von außerhalb des App Store heruntergeladen wurde, besteht die Möglichkeit, dass sie die alte VPN-API verwendet, und Sie müssen sie von der Filterung ausschließen: 1) Öffnen Sie das AdGuard-Menü. 2) Wählen Sie Einstellungen.... 3) Wechseln Sie auf die Registerkarte Netzwerk. 4) Klicken Sie auf die Schaltfläche Anwendungen.... 5) Suchen Sie die App, die Sie ausschließen möchten, und deaktivieren Sie das Kontrollkästchen daneben.  "},{"title":"Bereits behobene Probleme​","type":1,"pageTitle":"Kompatibilitätsprobleme mit verschiedenen macOS-Versionen","url":"adguard-for-mac/solving-problems/big-sur-issues/#bereits-behobene-probleme","content":"Diese Probleme wurden inzwischen von Apple behoben, können aber in den älteren Versionen von macOS Big Sur auftreten. "},{"title":"Kompatibilität mit Little Snitch 5​","type":1,"pageTitle":"Kompatibilitätsprobleme mit verschiedenen macOS-Versionen","url":"adguard-for-mac/solving-problems/big-sur-issues/#kompatibilität-mit-little-snitch-5","content":"Derzeit ist der Netzwerker-Erweiterungsmodus in AdGuard nicht mit Little Snitch 5 kompatibel. Wenn beide ausgeführt werden, besteht die Möglichkeit, dass Probleme mit dem Verhalten verschiedener Apps auftreten, auch wenn sie nicht von AdGuard gefiltert werden. Dieses Problem wird direkt durch einen Fehler in Big Sur verursacht, und wir haben Apple bereits darüber informiert. Dies lässt uns glauben, dass dieses Problem in einem der nächsten Updates behoben wird. Es muss gesagt werden, dass dieses Problem nicht gelöst werden kann, indem die Verbindungsüberwachung in Little Snitch deaktiviert wird, da diese Aktion die Erweiterung von Little Snitch nicht aus dem System entlädt. Wir empfehlen, auf den Filtermodus Automatischer Proxy zu wechseln, wenn AdGuard zusammen mit Little Snitch auf Big Sur ausgeführt wird, zumindest bis Apple den Fehler behoben hat. "},{"title":"Kompatibilität mit lokalen Proxys​","type":1,"pageTitle":"Kompatibilitätsprobleme mit verschiedenen macOS-Versionen","url":"adguard-for-mac/solving-problems/big-sur-issues/#kompatibilität-mit-lokalen-proxys","content":"Hinweis: Jetzt kann AdGuard lokale Proxys (meistens) problemlos filtern. Wenn Sie in den Betriebssystemversionen 11.1+ auf Probleme stoßen oder wenn Sie Big Sur 11.0 verwenden, entfernen Sie den lokalen Proxy aus den Systemeinstellungen und konfigurieren Sie einen Upstream-Proxy in AdGuard, indem Sie die nachstehenden Anweisungen befolgen. Um einen Upstream-Proxy in AdGuard für Mac in Big Sur zu konfigurieren, müssen Sie zum AdGuard-Menü → Erweitert → Erweiterte Einstellungen... gehen. Klicken Sie auf die Schaltfläche Wert der upstream.proxy-Einstellung zum Konfigurieren eines Proxys.  Geben Sie eine Zeichenfolge ein, die wie folgt aussieht: scheme://user:password@host:port, wobei scheme ist entweder http, https, socks4 oder socks5, abhängig von Ihrem Proxy-Typ, Wenn Sie den Proxytyp socks5 verwenden, setzen Sie den Wert der Einstellung upstream.proxy.socks5udp auf true, damit AdGuard den UDP-Datenverkehr an den Proxyserver weiterleitet. user und password sind der entsprechende Benutzername und das Passwort Ihres Proxys (falls erforderlich). Ignorieren Sie eines oder beide, wenn nicht zutreffend,host ist die IP-Adresse Ihres Proxy-Servers,port ist die gewünschte Portnummer, die vom Proxy-Server verwendet werden soll. Beispiel: socks5://localhost:6322 konfiguriert einen lokalen SOCKS5-Proxy, der Port 6322 abhört und weder Benutzername noch Passwort erfordert. Klicken Sie auf Anwenden , damit AdGuard den gesamten Datenverkehr an den konfigurierten Proxy-Server weiterleitet. Wenden Sie sich bei Problemen bitte an unseren technischen Support unter support@adguard.com. Beispiel 1: Konfigurieren eines Upstream-Shadowsocks-Proxys​ Hier ist ein Beispiel für die Konfiguration eines Upstream-Proxys für Shadowsocks. Zunächst einmal benötigen Sie eine funktionierende Serverseite für Ihren Proxy. Höchstwahrscheinlich würden Sie zum Einrichten eine JSON-Datei wie diese verwenden (server und password Werte wurden hier zufällig ausgewählt): { &quot;server&quot;:&quot;111.222.333.444&quot;, &quot;server_port&quot;:8388, &quot;local_port&quot;:1080, &quot;password&quot;:&quot;barfoo!&quot;, &quot;timeout&quot;:600, &quot;method&quot;:&quot;chacha20-ietf-poly1305&quot; }  Weitere Informationen zu den ersten Schritten finden Sie auf der Shadowsocks-Website. Dann müssten Sie den Shadowsocks-Client auf Ihrem Mac installieren. Stellen Sie sicher, dass Sie in den Einstellungen „Manueller Modus“ oder „Automatischer Modus“ auswählen! Die Konfiguration funktioniert nicht, wenn Sie „Global Mode“ (oder „Auto Mode“ in Big Sur-Versionen vor 11.1) auswählen.  Gehen Sie nun zu AdGuard Menü → Erweitert → Erweiterte Einstellungen... und setzen Sie den Bereich Wert der Einstellung upstream.proxy auf socks5://localhost:1080. Beachten Sie, dass Sie hier den Wert „local_port“ aus der JSON-Datei verwenden müssen. Da Shadowsocks SOCKS5 verwendet, müssen Sie auch den Wert der Einstellung upstream.proxy.socks5udp in den erweiterten Einstellungen von AdGuard auf true setzen, damit AdGuard den UDP-Datenverkehr an den Proxy-Server weiterleitet. Beispiel 2: Konfigurieren eines Upstream-Surge-Proxys​ In Big Sur v11.1+ gibt es keine bekannten Konflikte zwischen AdGuard und dem Surge-Proxy. Wenn Sie eine ältere Version von Big Sur (vor 11.1) verwenden, überprüfen Sie, ob System Proxy in der unteren rechten Ecke deaktiviert ist. Andernfalls funktioniert Surge nicht mit AdGuard. Andererseits kann Enhanced Mode aktiviert werden, ohne dass es in einer Big Sur-Version zu Konflikten kommt.  Gehen Sie nun zu AdGuard Menü → Erweitert → Erweiterte Einstellungen... und setzen Sie den Bereich Wert der Einstellung upstream.proxy auf socks5://localhost:6153. Beachten Sie, dass Sie den Wert port verwenden müssen, der im Bereich Events der Registerkarte Activity in Ihrem Surge-Client angegeben ist. Wenn Sie das SOCKS5-Protokoll gewählt haben, müssen Sie auch den Wert der Einstellung upstream.proxy.socks5udp in den erweiterten Einstellungen von AdGuard auf true setzen, damit AdGuard den UDP-Datenverkehr an den Proxy-Server weiterleitet. "},{"title":"Alternativen zur Verwendung einer Netzwerkerweiterung​","type":1,"pageTitle":"Kompatibilitätsprobleme mit verschiedenen macOS-Versionen","url":"adguard-for-mac/solving-problems/big-sur-issues/#alternativen-zur-verwendung-einer-netzwerkerweiterung","content":"Es ist unmöglich, jedes mögliche Problem vorherzusehen, das in Big Sur oder Monterey auftauchen kann, es gibt unzählige verschiedene Hardware-/Software- und Einstellungskonfigurationen. Wenn Sie auf Kompatibilitätsprobleme stoßen, wenden Sie sich bitte an unser Support-Team, aber probieren Sie zuerst eine dieser Problemumgehungen aus. "},{"title":"Verwenden des Filtermodus „Automatischer Proxy“​","type":1,"pageTitle":"Kompatibilitätsprobleme mit verschiedenen macOS-Versionen","url":"adguard-for-mac/solving-problems/big-sur-issues/#automatic-proxy","content":"Wenn Sie in Big Sur oder Monterey auf Probleme stoßen, die mit keiner der oben genannten Methoden gelöst werden können, können Sie versuchen, AdGuard in den Modus Automatischer Proxy zu schalten. 1) Öffnen Sie das AdGuard-Menü. 2) Wählen Sie Einstellungen.... 3) Wechseln Sie auf die Registerkarte Netzwerk. 4) Klicken Sie auf die Schaltfläche Modus auswählen.... 5) Wählen Sie Automatischer Proxy aus.  Jetzt hat AdGuard automatisch eine .pac -Datei zu den Netzwerkeinstellungen Ihres Mac hinzugefügt, sodass das System AdGuard als Proxy betrachtet und versucht, den gesamten Datenverkehr über AdGuard zu senden. Beachten Sie, dass einige Apps diese Systemeinstellung möglicherweise ignorieren und ihr Datenverkehr nicht gefiltert wird. "},{"title":"Aktivieren der Kernel-Erweiterung in Big Sur und Monterey​","type":1,"pageTitle":"Kompatibilitätsprobleme mit verschiedenen macOS-Versionen","url":"adguard-for-mac/solving-problems/big-sur-issues/#kernel-extension","content":"Standardmäßig verwendet AdGuard das Netzwerk-Erweiterungs-Framework in Big Sur und Monterey, da die alte Kernel-Erweiterung dort deaktiviert ist. Dies kann einige Kompatibilitätsprobleme verursachen, aber um die Kernel-Erweiterung wieder zu aktivieren, müssen Sie zuerst den Systemintegritätsschutz (SIP) deaktivieren. Um SIP zu deaktivieren, folgen Sie dieser Anleitung: 1) Klicken Sie auf das Apfelsymbol in der Menüleiste. 2) Klicken Sie auf Restart… 3) Halten Sie Command-R gedrückt, um im Wiederherstellungsmodus neu zu starten. 4) Klicken Sie auf Utilities. 5) Wählen Sie Terminal aus. 6) Geben Sie csrutil disable ein. 7) Drücken Sie Return oder Enter auf Ihrer Tastatur. 8) Klicken Sie auf das Apfelsymbol in der Menüleiste. 9) Klicken Sie auf Restart… Nachdem SIP deaktiviert ist, aktivieren Sie die Kernel-Erweiterung folgendermaßen:  1) Öffnen Sie das AdGuard-Menü. 2) Wählen Sie Einstellungen.... 3) Wechseln Sie auf die Registerkarte Netzwerk. 4) Klicken Sie auf die Schaltfläche Modus auswählen.... 5) Wählen Sie Kernel-Erweiterung aus. 6) Bestätigen Sie, dass Sie zur Kernel-Erweiterung wechseln möchten. Wir empfehlen jedoch nur, diese Methode zu verwenden, wenn alles andere fehlschlägt, da dies zu unerwarteten Problemen führen kann. "},{"title":"AdGuard auf macOS High Sierra und höher installieren","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/high-sierra-compatibility/","content":"AdGuard auf macOS High Sierra und höher installieren Hinweis This article covers AdGuard for Mac, a multifunctional ad blocker that protects your device at the system level. To see how it works, download the AdGuard app Während der Installation von AdGuard auf macOS High Sierra (oder neueren Versionen) wird möglicherweise eine Meldung angezeigt: „System Extension Blocked“. Dies ist ein neuer Sicherheitsmechanismus, der in High Sierra aufgetaucht ist und erfordert, dass Sie die Installation einer Systemerweiterung eines Drittanbieters explizit zulassen. Um die Installation von AdGuard abzuschließen, müssen Sie das Laden der Erweiterung in System Preferences → Security &amp; Privacy → General manuell zulassen. Klicken Sie auf die Schaltfläche „Allow“, und danach können Sie mit der Installation wie gewohnt fortfahren.","keywords":""},{"title":"iCloud Private Relay und AdGuard","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/icloud-private-relay/","content":"","keywords":""},{"title":"Problembeschreibung​","type":1,"pageTitle":"iCloud Private Relay und AdGuard","url":"adguard-for-mac/solving-problems/icloud-private-relay/#problembeschreibung","content":"Standardmäßig verwendet AdGuard die „Standard-Route“, die iCloud Private Relay deaktiviert. Derzeit können AdGuard und iCloud Private Relay nicht gleichzeitig funktionieren. AdGuard kann keine Anzeigen blockieren, da iCloud Private Relay den Datenverkehr verschlüsselt, bevor AdGuard Netzwerkverbindungen filtern kann. Wenn iCloud Private Relay aktiv ist, wird jegliche Filterung (einschließlich lokaler Filterung) unmöglich. Daher kann AdGuard in Safari keinen Datenverkehr filtern oder eine DNS-Filterung durchführen. Dennoch filtert AdGuard immer noch den Datenverkehr in anderen Browsern. Um iCloud Private Relay weiterhin zu verwenden, sollten Sie AdGuard für Safari installieren. Das Gleiche gilt für die Verwendung von VPN-Apps auf dem Mac: Sie müssen sich entscheiden, ob Sie iCloud Private Relay oder einen VPN-Dienst verwenden. "},{"title":"Details​","type":1,"pageTitle":"iCloud Private Relay und AdGuard","url":"adguard-for-mac/solving-problems/icloud-private-relay/#details","content":"AdGuard für Mac verwendet jetzt die in macOS integrierte Socket-Filterung basierend auf der Netzwerkerweiterungs-API. Dieser neue und ziemlich fehlerhafte Mechanismus ersetzte gute alte Kernel-Erweiterungen. In den letzten 1,5 Jahren haben wir Apple mehr als 20 (!) Fehler bezüglich ihrer neuen Filtermethode gemeldet. Die Netzwerkerweiterungs-API hat eine VPN-ähnliche Konfiguration mit einer Liste routenähnlicher Einträge. Auf Big Sur hat AdGuard „Split-Tunnel“-Regeln entwickelt, um die Erstellung der „Default Route“-Regel zu vermeiden, da diese bei frühen Big Sur-Versionen Probleme verursacht. Auf Monterey wurde iCloud Private Relay eingeführt. Datenschutzfunktionen der Mail-App verwenden auch private Relay-Server. Infolgedessen kann AdGuard nicht mit iCloud Private Relay und den Datenschutzfunktionen der Mail-App zusammenarbeiten: iCloud Private Relay wird auf Verbindungen auf Bibliotheksebene angewendet – bevor sie die Socket-Ebene erreichen, auf der AdGuard arbeitet.iCloud Private Relay verwendet QUIC, das AdGuard in gefilterten Apps nicht filtern kann, da die HTTP/3-Filterung noch nicht verfügbar ist.Da AdGuard QUIC blockiert, einschließlich iCloud Private Relay-Datenverkehr, ist eine Anzeigenblockierung ansonsten nicht möglich.Wenn Sie iCloud Private Relay verwenden und AdGuard in den „Split-Tunnel“-Modus schalten, können Sie keine Websites in Safari öffnen.Um dieses Problem für Monterey zu umgehen, wenden wir die Regel „Standard-Route“ an. Wenn Private Relay diese Regel sieht, deaktiviert es sich automatisch. AdGuard funktioniert also nahtlos auf Monterey, aber iCloud Private Relay wird deaktiviert. network.extension.monterey.force.split.tunnel stellt das „Big Sur“-Verhalten wieder her, aber diese Option kann den Zugriff auf Websites aufgrund von (3) und (4) unterbrechen. Wir suchen weiter nach einer Lösung für dieses Problem. Eine der Optionen ist die Implementierung der HTTP/3-Filterung. "},{"title":"Empfohlene Lösung​","type":1,"pageTitle":"iCloud Private Relay und AdGuard","url":"adguard-for-mac/solving-problems/icloud-private-relay/#empfohlene-lösung","content":"Wir empfehlen die Verwendung von AdGuard zusammen mit einem traditionelleren VPN-Dienst wie AdGuard VPN. "},{"title":"Alternative Lösung​","type":1,"pageTitle":"iCloud Private Relay und AdGuard","url":"adguard-for-mac/solving-problems/icloud-private-relay/#alternative-lösung","content":"Sie können verhindern, dass AdGuard die „Standard-Route“ verwendet, indem Sie die „Standard-Route“ deaktivieren. Dies kann über Erweiterte Einstellungen → network.extension.monterey.force.split.tunnel erfolgen.  Beachten Sie, dass Sie in diesem Fall mit den oben beschriebenen Problemen konfrontiert werden. "},{"title":"Lösung von Installationsproblemen","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/installation-issues/","content":"","keywords":""},{"title":"Fehler „Installation fehlgeschlagen“ in macOS Catalina​","type":1,"pageTitle":"Lösung von Installationsproblemen","url":"adguard-for-mac/solving-problems/installation-issues/#fehler-installation-fehlgeschlagen-in-macos-catalina","content":"Während der Installation kann ein Fehler wie dieser auftreten:  Folgen Sie dieser Anleitung, um das Problem zu lösen: Restart your MacAs your Mac restarts, press and hold down the Command(⌘) + R keys immediately upon hearing the startup chime. Halten Sie die Tasten gedrückt, bis das Apple-Logo erscheint, um den Computer in den Wiederherstellungsmodus zu versetzen.From the top bar select Utilities → Terminal, and execute this command: csrutil disableRestart the Mac and log into Administrator's profileOpen the Finder window and select from the top bar Go → Go to Folder and type ~/private/Create a folder named tmp and type in your passwordLaunch AdGuard installation Wenn die Installation abgeschlossen ist, starten Sie Ihren Mac im Wiederherstellungsmodus mithilfe der obigen Anweisungen neu und führen Sie den Befehl csrutil enable im Terminal aus, um den Systemschutz zu aktivieren. "},{"title":"Manuelle Installation des Zertifikats","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/manual-certificate-installation/","content":"Manuelle Installation des Zertifikats Hinweis This article covers AdGuard for Mac, a multifunctional ad blocker that protects your device at the system level. To see how it works, download the AdGuard app AdGuard für Mac muss das Root-Zertifikat im Zertifikatspeicher installieren, um HTTPS-Datenverkehr filtern zu können. Diese Aktion wird in den meisten Fällen automatisch ausgeführt, wenn Sie die App zum ersten Mal ausführen, aber Benutzer von Gecko-basierten Browsern (Firefox, Waterfox, usw.), die ein Master-Passwort für ihren Browser eingerichtet haben, müssen möglicherweise zusätzliche Schritte unternehmen (weil diese Browser ihren eigenen Zertifikatsspeicher anstelle des Systemspeichers verwenden). Sie müssen entweder das Master-Passwort eingeben, wenn sie dazu aufgefordert werden (um AdGuard Zugriff auf den Zertifikatsspeicher zu gewähren) oder das Zertifikat manuell installieren. Um das Zertifikat manuell in einem Firefox-ähnlichen Browser zu installieren, machen Sie Folgendes: Öffnen Sie „Settings“ Gehen Sie zu „Privacy &amp; Security“ — „Certificates“ Klicken Sie auf „View Certificates“ Navigieren Sie zur Registerkarte „Authorities“ und klicken Sie auf die Schaltfläche „Import...“ Wählen Sie die Datei /Library/Application Support/AdGuard Software/com.adguard.mac.adguard/AdguardCore/Adguard Personal CA.cer aus oder laden Sie sie einfach von http://local.adguard.org/cert mit einem Chromium-basierten Browser herunter (z. B. Google Chrome oder neu Edge) und mit einer in AdGuard laufenden HTTPS-Filterung Die genauen Aktionen, die für verschiedene Gecko-basierte Browser erforderlich sind, können variieren, aber die allgemeine Reihenfolge und der Pfad zur Personal CA.cer Datei sind gleich. PS: Für Version der Setapp-Anwendung lautet der Dateipfad wie folgt: /Library/Application Support/com.adguard.mac.adguard-setapp/AdguardCore/Adguard Personal CA.cer","keywords":""},{"title":"Startprobleme unter macOS","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/launch-issues/","content":"","keywords":""},{"title":"Startprobleme unter macOS 11 und höher​","type":1,"pageTitle":"Startprobleme unter macOS","url":"adguard-for-mac/solving-problems/launch-issues/#startprobleme-unter-macos-11-und-höher","content":"Wenn Sie Probleme beim Starten von AdGuard für Mac auf den Betriebssystemen Big Sur und Monterey haben, verwenden Sie bitte diese Anleitung: Starten Sie den Mac neu und rufen Sie den Wiederherstellungsmodus auf.Deaktivieren Sie SIP (starten Sie Terminal aus dem Menü Utilities und geben Sie csrutil disable ein).Starten Sie den Mac neu.Schließen Sie die AdGuard-App, öffnen Sie Terminal und geben Sie systemextensionsctl reset ein.Starten Sie den Mac neu und rufen Sie den Wiederherstellungsmodus auf.Aktivieren Sie SIP (starten Sie Terminal aus dem Menü Utilities und geben Sie csrutil enable ein).Starten Sie die AdGuard-App und aktivieren Sie den Schutz. "},{"title":"Startprobleme unter macOS 10​","type":1,"pageTitle":"Startprobleme unter macOS","url":"adguard-for-mac/solving-problems/launch-issues/#startprobleme-unter-macos-10","content":"Wenn Sie Probleme beim Starten von AdGuard für Mac auf den Betriebssystemen Sierra, Mojave und Catalina haben, verwenden Sie bitte diese Anleitung: Öffnen Sie Terminal und geben Sie den Befehl ls -@lOae /private/var/db/KernelExtensionManagement ein.Stellen Sie sicher, dass das Kennzeichen restricted nicht vorhanden ist (wie auf dem Screenshot).  Starten Sie Ihren Mac im Wiederherstellungsmodus neu.Öffnen Sie Utilities → Terminal.Geben Sie csrutil disable ein.Geben Sie das Administratorkennwort ein.Starten Sie Ihren Mac neu.Öffnen Sie Terminal und geben Sie den folgenden Befehl ein: sudo chflags restricted /private/var/db/KernelExtensionManagement.Starten Sie Ihren Mac im Wiederherstellungsmodus neu.Öffnen Sie Utilities → Terminal → Geben Sie csrutil enable → Geben Sie das Administrator-Passwort ein → Starten Sie Ihren Mac neu.Aktivieren Sie den AdGuard-Schutz. "},{"title":"Mail-Aktivitäten und AdGuard schützen","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/protect-mail-activity/","content":"","keywords":""},{"title":"Kurzbeschreibung​","type":1,"pageTitle":"Mail-Aktivitäten und AdGuard schützen","url":"adguard-for-mac/solving-problems/protect-mail-activity/#kurzbeschreibung","content":"Die Mail-App von Apple verwendet jetzt einen Proxy, um die IP-Adressen der Nutzer:innen zu verbergen, wenn Bilder aus E-Mails heruntergeladen werden.  Es funktioniert jedoch nicht, wenn eine VPN-Verbindung aktiv ist. Da AdGuard als VPN behandelt wird, werden Bilder nicht automatisch vorgeladen. Apple erklärt dieses Problem hier. "},{"title":"Details​","type":1,"pageTitle":"Mail-Aktivitäten und AdGuard schützen","url":"adguard-for-mac/solving-problems/protect-mail-activity/#details","content":"AdGuard für Mac verwendet jetzt die in macOS integrierte Socket-Filterung basierend auf der Netzwerkerweiterungs-API. Dieser neue und ziemlich fehlerhafte Mechanismus ersetzte gute alte Kernel-Erweiterungen. In den letzten 1,5 Jahren haben wir Apple mehr als 20 (!) Fehler bezüglich ihrer neuen Filtermethode gemeldet. Die Netzwerkerweiterungs-API hat eine VPN-ähnliche Konfiguration mit einer Liste routenähnlicher Einträge. Auf Big Sur verwendete AdGuard „Split-Tunnel“-Regeln, um die Erstellung der „Standard-Routen“-Regel zu vermeiden, da diese bei frühen Big Sur-Versionen Probleme verursacht. Diese Probleme wurden in Monterey gelöst, also hindert uns nichts daran, die „Standard-Routen“-Regel zu verwenden. Auf Monterey wurde iCloud Private Relay eingeführt. Die Datenschutzfunktionen von Mail.app verwenden auch private Relay-Server. Infolgedessen kann AdGuard nicht mit den Datenschutzfunktionen von iCloud Private Relay und Mail.app zusammenarbeiten: iCloud Private Relay wird auf Verbindungen auf Bibliotheksebene angewendet – bevor sie die Socket-Ebene erreichen, auf der AdGuard arbeitet.iCloud Private Relay verwendet QUIC, das AdGuard nicht filtern kann, da HTTP/3-Filterung noch nicht verfügbar ist.Da AdGuard QUIC blockiert, einschließlich iCloud Private Relay-Datenverkehr, ist eine Werbeblockierung ansonsten nicht möglich.Wenn Sie iCloud Private Relay verwenden und AdGuard in den „Split-Tunnel“-Modus schalten, können Sie keine Websites in Safari öffnen.Um dieses Problem für Monterey zu umgehen, wenden wir die Regel „Standard-Route“ an. Wenn Private Relay diese Regel sieht, deaktiviert es sich automatisch. AdGuard funktioniert also nahtlos auf Monterey, aber iCloud Private Relay wird deaktiviert. network.extension.monterey.force.split.tunnel stellt das „Big Sur“-Verhalten wieder her, aber diese Option kann den Zugriff auf Websites aufgrund von (3) und (4) unterbrechen. Wir suchen weiter nach einer Lösung für dieses Problem. Eine der Optionen ist die Implementierung der HTTP/3-Filterung. "},{"title":"Empfohlene Lösung​","type":1,"pageTitle":"Mail-Aktivitäten und AdGuard schützen","url":"adguard-for-mac/solving-problems/protect-mail-activity/#empfohlene-lösung","content":"An dieser Stelle empfehlen wir, statt der neuen Datenschutzfunktionen von Apple einen traditionelleren VPN-Dienst wie AdGuard VPN zu verwenden. "},{"title":"Der Schutz kann nicht aktiviert werden","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/protection-cannot-be-enabled/","content":"Der Schutz kann nicht aktiviert werden Hinweis This article covers AdGuard for Mac, a multifunctional ad blocker that protects your device at the system level. To see how it works, download the AdGuard app Wenn der AdGuard-Schutz aus irgendeinem Grund nicht aktiviert werden kann, führen Sie die folgenden Schritte aus: Klicken Sie auf das AdGuard-Symbol in der Menüleiste → gehen Sie zu Erweitert → Einstellungen zurücksetzen… → AdGuard beenden… Geben Sie in der Spotlight-Suche Terminal ein, geben Sie sudo rm -R /Library/Application\\ Support/com.adguard.adguard ein und führen Sie es aus. Starten Sie Ihren Computer neu. Öffnen Sie das Terminal erneut, geben Sie ls -al /Library/StagedExtensions/Library/Application\\ Support/com.adguard.adguard/ ein und führen Sie es aus. Sie sollten Folgendes erhalten: No such file or directory. Starten Sie AdGuard, geben Sie Login und Passwort ein, wenn Sie dazu aufgefordert werden.","keywords":""},{"title":"Filterung im Tor-Browser einrichten","type":0,"sectionRef":"#","url":"adguard-for-mac/solving-problems/tor-filtering/","content":"Filterung im Tor-Browser einrichten Hinweis This article covers AdGuard for Mac, a multifunctional ad blocker that protects your device at the system level. To see how it works, download the AdGuard app Standardmäßig ist der Tor-Browser in der Liste der von AdGuard gefilterten Apps enthalten. Um es zu filtern, muss AdGuard jedoch die Sicherheitseinstellungen von Tor ändern. Dadurch vertraut Tor dem CA-Zertifikat von AdGuard. Wenn Sie sich entscheiden, den Tor-Browser zu filtern, und ihn in Preferences → Netzwerk → Anwendungen aktivieren, wird Ihnen AdGuard dieses Dialogfeld zeigen: Durch die Aktualisierung der Tor-Einstellungen stellt AdGuard Folgendes ein: security.enterprise_roots.enabled: true Dadurch wird Tor Stammzertifikate vertrauen. Mehr erfahren security.cert_pinning.enforcement_level: 1 Public Key Pinning ist eine Sicherheitsmaßnahme, mit der Websites sicherstellen können, dass die Verbindung zwischen einer Website und einem Benutzer authentisch ist. Dabei veröffentlicht die Website eine Liste mit öffentlichen Schlüsseln oder Pins, denen sie vertraut. Wenn die Erzwingungsebene auf 1 festgelegt ist, wird das Anheften für benutzerdefinierte Zertifizierungsstellen nicht erzwungen. Mehr erfahren Um die Änderungen zu übernehmen, müssen Sie den Tor-Browser neu starten. Wenn Sie diese Einstellungen manuell ändern, wird die Tor-Filterung gestoppt.","keywords":""},{"title":"Installation","type":0,"sectionRef":"#","url":"adguard-for-safari/installation/","content":"","keywords":""},{"title":"How to install AdGuard for Safari​","type":1,"pageTitle":"Installation","url":"adguard-for-safari/installation/#install","content":"AdGuard for Safari is a free app presented on the App Store. To install it on your device, do the following. Open the App Store and find the needed extension there.  Press Get → Install → Open. To set up AdGuard for Safari, enable the AdGuard extensions in the Safari settings. In a notification, click Fix it. In an opened window, check the boxes next to AdGuard extensions.  Not all extensions are required for AdGuard for Safari to function correctly. For instance, checking the Icon extension enables the icon in the tray menu. However, we recommend to enable all of them.  After you complete steps 1-3, AdGuard for Safari will start functioning. You can now configure its settings. "},{"title":"How to uninstall AdGuard for Safari​","type":1,"pageTitle":"Installation","url":"adguard-for-safari/installation/#uninstall","content":"To uninstall AdGuard for Safari, do the following: Quit the app.Open Safari preferences.Choose the Extensions tab. You will see a list of extensions, AdGuard has eight.Uncheck all checkboxes and press Uninstall below any of them.  At this point you will see a notification:  Press Show in Finder and move the application to the bin. AdGuard for Safari will be removed from your device. "},{"title":"Features overview","type":0,"sectionRef":"#","url":"adguard-for-safari/overview/","content":"","keywords":""},{"title":"Allgemein​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#general","content":" The first tab is the General screen where you can set up basic things like notifications, update intervals, and launching AdGuard at system startup. You can also choose to display the AdGuard icon in the menu bar. There you can also turn on content blockers to block ads, trackers, annoyances, etc. "},{"title":"Filters​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#filters","content":" A filter is a list of rules written in a special syntax. Following these rules, content blockers can filter web traffic: block ads or requests to malicious websites. Filters are combined into eight thematic categories: Ad Blocking, Privacy, Social widgets, Annoyances, Security, Language-specific filters, Custom, and Other filters. Read more about AdGuard filters or ad filtering in general. In the Filters tab, you can enable the whole category or separate filters. Changes in the Filters tab are reflected in the Content Blockers section (located in the General tab). "},{"title":"Content blockers​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#contentblockers","content":" A content blocker is a thematic cluster of filters. Privacy-related filters are included in the content blocker with the corresponding name — AdGuard Privacy. Content Blockers were designed for two reasons: to structure filters and to conform to Apple’s restrictions. In 2019, Apple put limitations on ad blockers for Safari, allowing them to use only 50,000 filtering rules simultaneously. As this number was not enough for an ad blocker to provide a good filtering quality (AdGuard Base Filter alone has 30,000 filtering rules), we divided AdGuard for Safari into six content blockers each containing up to 50,000 rules. In 2022, Apple increased the filtering rule limit for each content blocker to 150,000 rules applied simultaneously. Regarding AdGuard for Safari, up to 900,000 rules can be enabled for all six content blockers. Whereas the limit has been increased, the structure of content blockers has remained the same. In the Content blockers tab, you can see which content blockers are enabled, how many rules each of them is using, and which filters are functioning. You can manage enabled filters in the Filters tab. In the Content blockers section, you can only see the list of already enabled filters. "},{"title":"AdGuard General​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#adguard_general","content":"AdGuard General is a content blocker that combines the most essential filters for blocking ads. We recommend keeping the AdGuard Base Filter always enabled. "},{"title":"AdGuard Privacy​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#adguard_privacy","content":"This content blocker is the main tool against counters and other web analytics tools. The AdGuard Tracking Protection filter is enabled by default. "},{"title":"AdGuard Social​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#adguard_social","content":"AdGuard Social contains filters against social media buttons, widgets, scripts, and icons. Other annoyance filters can also be found in this section: filters against pop-ups, mobile app banners, cookie notices, and more. To enable them, find Social Widgets in the Filters tab. "},{"title":"AdGuard Security​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#adguard_security","content":"This content blocker unites several security-related filters. Malware Domains Blocklist blocks domains that are notorious for spreading malware and spyware. Spam404 protects you from Internet fraudsters. NoCoin Filter List disrupts browser-based cryptominers, such as Coinhive. "},{"title":"AdGuard Other​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#adguard_other","content":"AdGuard Other contains filters with various functions. For example, it has a filter that unblocks search ads and self-promo ads. In some cases, it helps find exactly what you are looking for, because these kinds of ads are more relevant and less intrusive than others. Disclaimer: we don’t have any ‘acceptable ads’ paid by advertisers. Instead, we provide users with an option to see search ads and websites' self-promotion. "},{"title":"AdGuard Custom​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#adguard_custom","content":" If you need more filters, you can add them to AdGuard Custom. To add a custom filter, enter a URL or a local file path in the relevant field. You can find new filters at filterlists.com. "},{"title":"User rules​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#userrules","content":"User rules can be used to customize ad blocking. They can be added manually, imported, or created automatically when you block an element on the page. To add your own filering rules, use a special syntax. "},{"title":"Über uns​","type":1,"pageTitle":"Features overview","url":"adguard-for-safari/overview/#about","content":" In the About tab, you can see info about the current version of your product and links to legal documents. There is also a link to our repository on GitHub. You can monitor the product development, create feature requests and report bugs there. Reminder: AdGuard for Safari can be downloaded for free from the App Store. A detailed setup instruction is available in the Knowledge base. "},{"title":"Documentation for admins","type":0,"sectionRef":"#","url":"adguard-for-windows/admins-documentation/","content":"","keywords":""},{"title":"1. Download the MSI​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#msi-download","content":"Download the AdGuard MSI. "},{"title":"2. Configure the settings for your network​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#settings-configuring","content":"On machines that are joined to an Active Directory domain, policy settings may also be stored in the registry under HKEY_LOCAL_MACHINE in the following path: Software\\Policies\\AdGuard\\. The only supported policy is LicenseKey. If this policy is set, AdGuard will prefer it over what user can enter in the interface. This license key will be used for checking license status. "},{"title":"3. Make sure that AdGuard servers are available​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#servers-available","content":"AdGuard connects to two hosts: api.adguard.org and filters.adtidy.org. Make sure that both servers are available. "},{"title":"4. Push the MSI out to your network​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#msi-push","content":"If you usually use SMS or other tools, use them to push out the AdGuard MSI just as you would normally do with any other installation bundle. Otherwise, you can run the MSI on the target machine directly (and silently) with this command: Msiexec /q /i AdGuard.msi If you need to roll out an update, use this command: Msiexec /q /i AdGuard.msi REINSTALL=ALL REINSTALLMODE=vomus Please note, that you must run these commands with admin privileges. If you want to install AdGuard on a Windows 7 computer, make sure that it has .NET 4 Client Profile installed: https://www.microsoft.com/en-us/download/details.aspx?id=24872Important! Automatic updates are disabled when you install AdGuard for Windows from MSI. If you want to allow updates for a user (which is not recommended because centralized updates will become impossible), set the value of the AllowCheckUpdates parameter for the HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Adguard key to YES (case insensitive). In this case automatic updates will be allowed, any other value or no value for this parameter disables automatic updates. "},{"title":"5. Test your installation​","type":1,"pageTitle":"Documentation for admins","url":"adguard-for-windows/admins-documentation/#installation-test","content":"On a target machine, launch AdGuard. Open the license screen to check that it uses the one you've set. You might need to click &quot;Refresh status&quot; to make AdGuard validate the license key. "},{"title":"Browser-Assistent","type":0,"sectionRef":"#","url":"adguard-for-windows/browser-assistant/","content":"","keywords":""},{"title":"Vorteile​","type":1,"pageTitle":"Browser-Assistent","url":"adguard-for-windows/browser-assistant/#vorteile","content":""},{"title":"Unabhängigkeit​","type":1,"pageTitle":"Browser-Assistent","url":"adguard-for-windows/browser-assistant/#unabhängigkeit","content":"AdGuard Browser Assistant is a browser extension, it is installed in a browser, so there is no need to wait for the userscript to be injected into the filtered web page, as it was with the preceding one. Mit anderen Worten, es ist unabhängiger von der Haupt-AdGuard-App. Still, Browser Assistant needs the installed AdGuard for Windows, because there is no point in using the extension without the app. "},{"title":"Kompatibilität mit der Haupt-App​","type":1,"pageTitle":"Browser-Assistent","url":"adguard-for-windows/browser-assistant/#kompatibilität-mit-der-haupt-app","content":"If you got into the habit of using our previous AdGuard Ad Blocker extension in Integration mode, you may like the solution that we have developed for the new Browser Assistant. Hintergrundinformationen: In previous versions of the AdGuard Browser Extension (before v3.5), if you had it installed along with the AdGuard for Windows app, the extension took over the functions of Assistant, stopped filtering itself and relied on the app to do this. Die Erweiterung und die App funktionierten zusammen, aber manchmal schlug die Integration fehl. Einige Websites würden nicht mehr durch das Desktop-Programm geschützt und nur noch von der weniger leistungsstarken Erweiterung gesichert. Bei der Verwendung des Browser-Assistenten spielen all diese Probleme keine Rolle, da es im Wesentlichen keine Konflikte geben kann. The role of the Browser Assistant is well-defined and it can’t hinder the functioning of the main app, so there is no need to worry. "},{"title":"Separate Registerkarte in den Einstellungen​","type":1,"pageTitle":"Browser-Assistent","url":"adguard-for-windows/browser-assistant/#separate-registerkarte-in-den-einstellungen","content":"The new Browser Assistant has its own tab in AdGuard for Windows settings, along with Stealth Mode, Browsing Security, Parental Control and others. There you will find a link to download the extension for your default browser. Außerdem gibt es ein Kontrollkästchen, um den alten Assistenten zu aktivieren.  "},{"title":"Assistent für ältere Browser​","type":1,"pageTitle":"Browser-Assistent","url":"adguard-for-windows/browser-assistant/#assistent-für-ältere-browser","content":"Legacy-Assistent ist die vorherige Version von Assistent, die lediglich ein Benutzerskript und keine Browsererweiterung ist. Grundsätzlich gibt es zwei Fälle, in denen Sie ihn anstelle des neuen Browser-Assistenten auswählen möchten: 1) Der neue Assistent ist für Ihren Browser nicht verfügbar; 2) Sie sind an das grüne Schild-Symbol gewöhnt und möchten alles so lassen, wie es war. "},{"title":"Wie man AdGuard Browser-Assistenten installiert​","type":1,"pageTitle":"Browser-Assistent","url":"adguard-for-windows/browser-assistant/#wie-man-adguard-browser-assistenten-installiert","content":"If you want to install the Browser Assistant for your default browser, you can do it directly from the app settings, but you also have an opportunity to install it for other browsers. AdGuard Browser Assistant is available for all popular browsers: Chrome, Firefox, Edge, Opera, and Yandex. To install the one you need (or many, it is not prohibited but even encouraged), go to our website, click the browser icon and tap the Install button. Das war's! "},{"title":"Installation","type":0,"sectionRef":"#","url":"adguard-for-windows/installation/","content":"","keywords":""},{"title":"Systemanforderungen​","type":1,"pageTitle":"Installation","url":"adguard-for-windows/installation/#systemanforderungen","content":"Operating system: Microsoft Windows 11, 10, 8.1, 8, 7, Vista. RAM: at least 512 MB. Free disk space: 150 Mbytes. Browsers: Microsoft Edge, Microsoft Internet Explorer (all versions), Opera, Google Chrome, Yandex.Browser, Mozilla Firefox, and many other browsers. "},{"title":"AdGuard installation​","type":1,"pageTitle":"Installation","url":"adguard-for-windows/installation/#adguard-installation","content":"To use AdGuard on a PC or tablet under Microsoft Windows, you should download the installation package and launch the installation program. Perform the following actions: Go to the AdGuard website in the address bar and click Download on the opened page. When the download is finished, press the Open button shown in the Downloads bar or click the file name adguardInstaller.exe. You’ll see the User Account Control dialogue box requesting to allow the app to make changes to your PC. Click Yes. Next, choose the folder on your PC for the app to be installed to. If you do not agree with the default installation path, press Browse, select the folder for AdGuard installation in the Browse For Folder window, and confirm your choice by clicking OK. You can also install AdGuard to a new folder by clicking Make New Folder and entering its name. To create a desktop shortcut for AdGuard, check the Create a desktop shortcut box. Press Install to proceed with installation. Wait for the installation to complete and click Finish. Congratulations! You have successfully installed AdGuard on your computer. On the screen you will see the main window where you can change the app’s settings. "},{"title":"How to uninstall AdGuard for Windows​","type":1,"pageTitle":"Installation","url":"adguard-for-windows/installation/#uninstall","content":""},{"title":"Regular method​","type":1,"pageTitle":"Installation","url":"adguard-for-windows/installation/#regular-method","content":"If you need to uninstall or reinstall AdGuard, do the following: For Microsoft Windows 10 &amp; 11: Open Start Menu by clicking Start, and select Settings. Click the Apps icon in the window that opens. Select Apps and Features from the list on the left in the Apps window. Select AdGuard from the list of your installed apps and click Uninstall. Click Uninstall in the dialogue box that opens to confirm.  For Microsoft Windows 8: Right-click the empty space in the lower left corner of the task bar and select Control Panel. Click Uninstall a program in the Programs section, then select AdGuard from the list of installed apps and press the Uninstall button located right above the list. Confirm the action by clicking Uninstall AdGuard in the window that opens.  For Microsoft Windows 8.1: Right-click the Start button and select Control Panel. Click Uninstall a program in the Programs section, then select AdGuard from the list of installed apps and press the Uninstall button located right above the list. Confirm the action by clicking Uninstall AdGuard in the window that opens. For Microsoft Windows 7: Open Start Menu. In the search box, type Control Panel. Click Uninstall a program in the Programs section, then select AdGuard from the list of installed apps and press the Uninstall button located right above the list. Confirm the action by clicking Uninstall AdGuard in the window that opens.  "},{"title":"Advanced method​","type":1,"pageTitle":"Installation","url":"adguard-for-windows/installation/#advanced","content":"In case regular uninstall doesn't work for any reason, you can try to use an advanced method. First of all, you need to download the uninstaller tool created by our developers. Extract the archive to any folder on your PC and run the Adguard.UninstallUtility.exe file, and allow the app to make changes to your device. Then follow the instruction below: Choose Standard uninstall, Delete AdGuard and click Uninstall.  Wait until uninstall is finished — there will be a string in the window: [OK] Uninstall finished  Follow the next steps only if after performing first two steps wasn’t enough for some reason. Usually it can be determined by seeing incorrect reinstall of AdGuard, but we strongly suggest contacting our support before using steps 3-4 of advanced uninstall instruction. Choose Advanced uninstall and click Uninstall.  Wait until uninstall is finished — there will be a string in the window: [OK] Uninstall finished  AdGuard is successfully uninstalled! "},{"title":"How to collect AdGuard logs","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/adguard-logs/","content":"","keywords":""},{"title":"Trace logs​","type":1,"pageTitle":"How to collect AdGuard logs","url":"adguard-for-windows/solving-problems/adguard-logs/#trace-logs","content":"Sometimes support team members may ask you to send trace logs. Then you will need to do the following: Stop AdGuard by right-clicking the AdGuard icon in the tray menu and choosing Exit AdGuard:  Please don't leave the service running:  Open the console (type cmd in the start panel). Run the app with the command C:\\&quot;Program Files (x86)&quot;\\Adguard\\Adguard.exe /trace if you are using 64-bit Windows, and C:\\&quot;Program Files&quot;\\Adguard\\Adguard.exe /trace in case if you use 32-bit one. Select Debug logging level.  Reproduce the issue. We strongly advise to take note of the exact time when you reproduced the issue: it will help our support team to find relevant log entries and solve the problem faster. Export the recorded logs using the Export Logs button.  Important: after exporting the logs, set the logging level back to Standard. Debug logging level will slow down the application. Don't worry if the log file is large. We need to know as much detail as possible to fix your problem. "},{"title":"Features overview","type":0,"sectionRef":"#","url":"adguard-for-windows/overview/","content":"","keywords":""},{"title":"Home screen​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#home-screen","content":" Once you start AdGuard for Windows, you will see the main screen of the app. Its most noticeable detail is the enable/disable protection button. Also, on this screen you can monitor blocked ads, trackers and threats statistics, find out the current version of the app or update it. Furthermore, there are four tabs in the upper right corner: Settings, Support, License, and About. Each of these is worth talking about separately. "},{"title":"Settings​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#settings","content":" Settings is the section that requires the most attention. This is where you can configure the app so that it fully meets your requirements: blocks only what bothers you, uses the DNS server of the trusted provider, removes third-party cookies, and so on. "},{"title":"General settings​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#general-settings","content":"Here you can set the language and theme (Dark or Light), enable AdGuard launching at system start-up and silent automatic updates, choose the update channel and filter update check interval. Also Settings is the place to go if AdGuard for Windows is not working properly and the support team asked you to collect Debug logs.  At the very bottom of the screen you will find Advanced Settings. Changing some of them mindlessly may potentially cause problems with AdGuard's performance, break the Internet connection or compromise your security and privacy. That's why we suggest you open this section only if you are sure of what you are doing or our support team has asked you about it. If you want to understend what can be set up in Advanced Setting read the dedicated article. "},{"title":"Ad Blocker​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#ad-blocker","content":"This is the main module of AdGuard for Windows that removes ads from the websites you visit and from the apps installed on your device. To filter out advertising and privacy-threatening content such as banners, pop-ups, or trackers AdGuard uses different filters: groups of rules with a similar purpose written with a special syntax. To understand what filters are and how they work read this article.  In the Ad Blocker module you can: enable automatic activation of language-specific filters,disable search ads and self-promotion blocking,activate pre-installed filters such as AdGuard Base filter,install filters from the list or add a custom filter by clicking the Add a filter button,make changes to existing rule groups using the Filter editor button,see all the requests sent by browsers and apps installed on your computer by clicking the Filtering log button. From there you can also block or unblock any request by creating a custom rule,compose a filter from your own rules written manually, imported or created with the AdGuard Assistant extension. Before you start manually writing your own rules read our detailed syntax guide. "},{"title":"Stealth Mode​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#stealth-mode","content":"Many websites gather information about their visitors, such as their IP addresses, information about the browser and operating system installed, screen resolution, and even what page the user came or was redirected from. Some web pages use cookies to mark the browser and save your personal settings, user preferences, or &quot;recognize&quot; you upon your next visit. Stealth Mode safeguards your personal information from such data and statistics gathering systems.  You can flexibly adjust the work of Stealth Mode: for instance, you can prohibit the website to receive the search request you used to find it on the Internet, automatically delete both third-party and website’s own cookies, and disable location sharing in your browser that can be used to track your whereabouts. To learn everything about Stealth Mode and its many options, read this article. "},{"title":"Browsing Security​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#browsing-security","content":"Browsing Security gives strong protection against malicious and fishing websites. No, AdGuard for Windows is not an antivirus. It will neither stop the download of a virus when it's already started, nor delete the already existing ones. But it will warn you if you're about to proceed to a website whose domain has been added to our &quot;untrusted sites&quot; database, or to download a file from such website. You can find more information about how this module works in the dedicated article. In this module you can enable notifications to block requests to malicious and phishing sites,activate sound notifications,agree to submit anonymous security-related info to the AdGuard server to help us keep the malicious and fishing websites database up to date.  In case you want to learn more about Browsing Security, read this article. "},{"title":"DNS Protection​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#dns-protection","content":"There are three significant reasons why you might want to explore the DNS protection settings. First, to avoid being tracked by your ISP. Every time you open a website, for example google.com, your browser sends a request to a DNS server to get the IP address of the website in return. Usually, the DNS server belongs to your ISP, which allows them to track your online activity. Second, to encrypt you DNS traffic. And the third one is to block content on DNS level.  In the DNS protection module of AdGuard for Windows you can select the DNS servers from known DNS providers, including AdGuard DNS that blocks ads and trackers, AdGuard DNS Family Protection that in addition blocks adult content, or AdGuard DNS Non-filtering that provides a secure and reliable connection, but doesn't filter anything. You can even add custom DNS servers. Also there is an option to add custom rules using DNS rules syntax. And if necessary, you can add DNS filters of your choice. "},{"title":"Parental Control​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#parental-control","content":"There are numerous websites access to which should be restricted if the PC is used by children. This task is accomplished by Parental Control.  The module checks the contents of web pages opened in the browser and filters those with content undesirable for children: images and texts for adults, crude language, violence, drug propaganda, etc. Parental Control settings are password-protected so that the child is not able to go round the restrictions. This module not only blocks directions to undesirable sites but can also delete the links that are inappropriate for children from the search results. In the Parental Control module you can enable the Safe search and manage the blocklist and the allowlist to customize how this option works. You can also check the Block executable files download box to prevent your child from downloading and installing software on the computer. There are two more options in the Parental Control module: you can select a specific Windows user to be protected by Parental Control and set a password to protect AdGuard settings from change.  "},{"title":"Browser-Assistent​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#browser-assistent","content":" From this tab you can easily proceed to install AdGuard Browser Assistant, which primary function is to manage filtering directly from the browser. We explained more about how to work with it and what to do if there is no Browser Assistant for your browser in the separate article. "},{"title":"Extensions​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#extensions","content":"AdGuard can significantly broaden website functionality working as a user script manager. AdGuard Users can add their own scripts, as well as manage existing ones.  Automatically detect userscripts With this option enabled, AdGuard will automatically define browser queries to userscripts and suggest their installation. Otherwise, extensions can be downloaded and installed manually. The following extensions are installed with AdGuard:  AdGuard Assistant AdGuard Assistant is Legacy Assistant that you may use if the new Assistant is not available for your browser. The name of this extension is quite deliberate: it actually assists the user in changing basic AdGuard settings right in the browser, without the need to open the app itself. AdGuard Assistant works with all Microsoft Windows compatible browsers. In addition, the AdGuard Assistant icon will not be displayed on websites listed as exceptions by the user and on certain web pages where there is a risk of incorrect content display. AdGuard Extra This is a custom extension designed to fight the technique of re-inserting blocked ads — the so-called ad blocker circumvention/ad reinjection. Both are advanced anti-ad blocker methods that continue to rise in popularity among advertisers. AdGuard Extra is essentially a mini-program that changes the way pages work,and it does so in such a way that it becomes much more difficult for sites to use the above-mentioned functions to bypass blockers. AdGuard Popup Blocker This extension prevents popup windows from opening when you view web pages. Some pop-ups are considered useful – they may contain settings for site administering or additional reference information demonstrated upon clicking a link. That is why you can turn off the Blocker if needed. This extension doesn’t work on websites added to the AdGuard exceptions list either. It is turned off by default, but you can turn it on in the application settings. You will find more detailed information about this extension in our Knowledge base. Web of Trust Web of Trust lets you see the reputation of each website based on its users’ opinions. The site is rated by a number of specific criteria: trust, security, etc. This extension is turned off by default, but you can turn it on in the application settings. Please, note that AdGuard is not the developer of this extension. "},{"title":"Netzwerk​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#netzwerk","content":"The penultimate module is dedicated to network filtering, and here you will find additional network-related options. Two of them are enabled by default: Enable traffic filtering and Filter HTTPS protocol. These are important extra precautions to better filter your web space. Most websites are now using HTTPS, and the same applies to advertising. From many sites, like youtube.com, facebook.com and twitter.com, it is impossible to remove ads without HTTPS filtering. So keep the Filter HTTPS protocol feature enabled unless you have a strong reason not to.  In this module you can check the checkbox &quot;Use AdGuard as an HTTP proxy&quot; to use AdGuard as a regular HTTP proxy which will filter all traffic passing through it. You can also enable the Filter websites with EV certificates feature. Extended Validation (EV) SSL-Zertifikate bieten eine stärkere Sicherheitsgarantie; die Inhaber solcher Websites müssen ein gründliches und weltweit standardisiertes Identitätsprüfungsverfahren durchlaufen, das durch EV-Richtlinien definiert ist. Aus diesem Grund vertrauen einige Benutzer Websites mit solchen Zertifikaten und ziehen es vor, sie nicht zu filtern. At last, there is a section with proxy settings. There you can specify which proxy server AdGuard should use to update filters, get new versions and so on. "},{"title":"AdGuard VPN​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#adguard-vpn","content":"The last section is dedicated to AdGuard VPN — an ideal tool that provides security and anonymity each time you browse the Internet. You can download it by clicking the Download button or go to the AdGuard VPN website by clicking the Homepage button. How does AdGuard VPN work? Without going into technical details, we can say that VPN creates a secure encrypted tunnel between the user's computer or mobile device and a remote VPN server. In this way, data confidentiality is preserved, as well as the anonymity of the user, because a third-party observer sees the IP address of the VPN server and not the actual user's IP. What AdGuard VPN does: hides your real whereabouts and helps you stay anonymousсhanges your IP address to protect your data from trackingencrypts your traffic to make it unreachable to scammerslets you configure where to use VPN and where not to (exclusions feature) To get more information about AdGuard VPN dive into the AdGuard VPN Knowledge Base. "},{"title":"Andere Optionen​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#andere-optionen","content":"Es gibt andere nützliche AdGuard-Optionen, die in diesem Artikel nicht unbemerkt bleiben sollten, da sie viel zur Benutzererfahrung beitragen. "},{"title":"Support​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#support","content":" By clicking the Support tab you will open a dialog box through which you can report a bug, submit a feature request, or simply share your opinion of the product. "},{"title":"Lizenz​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#lizenz","content":" This tab contains information about your license. Here you can: find out the license type (nightly build, beta or release), the number of devices available for simultaneous connection to AdGuard, the license expiration date;click the button to go to the license purchase page, and activate, reset or recover a license. "},{"title":"Über uns​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#über-uns","content":" In addition to information about the current version of the program, this tab provides some useful links to Licese Agreement, Privacy Policy, Acknowledgements, Discussions, and Version history pages. "},{"title":"Check for updates​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#check-for-updates","content":" To check for filters and userscripts updates, click the rotating arrows icon in the upper right corner of the app's main screen. "},{"title":"Tray menu​","type":1,"pageTitle":"Features overview","url":"adguard-for-windows/overview/#tray-menu","content":"To save you time navigating around AdGuard menus, many of the frequently used options and settings are available from the tray menu. To call the menu, right-click the AdGuard icon in the tray. It will offer you the following options: enable protectiondisable protection: completely or for 30 secondsgo to Settingsopen the Tools and Advanced menuscheck for filter updatescheck for app updatesto recall the last pop-up messagereach the Support and About sectionsclose AdGuard, but continue filteringexit AdGuard "},{"title":"Common installer errors","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/common-installer-errors/","content":"","keywords":""},{"title":"Error 5: Access Denied​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-5","content":"This error occurs when there's something wrong with permissions. There may be several different reasons why AdGuard installer doesn't have the permissions it requires to properly finish the installation process. You can try the following steps: Temporarily disable your antiviruses. Some of them may interfere with the installation, depending on the severity of their settings. Choose a different installation folder. It is possible that the current installation folder has some access restrictions. Also make sure you don't select an external drive, a virtual drive, etc. Reboot your computer. Sometimes the permission issues are temporary and can be solved by restarting the PC. "},{"title":"Error 112: Disk is full, Error 1632: Temporary folder full or inaccessible​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-112","content":"These are two different errors with very similar solutions. As their names suggest, AdGuard installer didn't find enough disk space to complete the installation. There are several things you can attempt to fix the problem: Uninstall some programs or delete unnecessary files from the drive you were trying to install AdGuard to. Download, install, and run AdwCleaner, a free piece of software by Malwarebytes. It will, among other things, clean your system from all kinds of extra &quot;leftover&quot; files that remain after incorrectly uninstall programs and such. It will help clean up some disk space. Reboot your computer. Sometimes temporary files can take up a considerable amount of disk space, and restarting your PC is the most reliable way to get rid of them. "},{"title":"Error 1601: Windows Installer is not accessible​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1601","content":"You could say this is a particular sub-case of Error 1603. The possible solutions are similar: Start and re-register Microsoft Installer service. It requires some work. 1) Press Win + R and enter services.msc. 2) Find in the list and double click Windows Installer. 3) Hit Start button under Service status and hit OK. If the service status is running, you should click Stop first and then hit Start. 4) Press Win + R, type and enter msiexec /unregister and hit Enter. 5) Press Win + R again, type and enter msiexec /regserver and hit Enter Reboot the PC and start the installation all over again. Sometimes that's enough to fix the problem. "},{"title":"Error 1602: Canceled by user​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1602","content":"If you got this error code, chances are you have interrupted the installation process manually in one way or another. What you can do is: Don't close the installer window. When the installation is complete, it will close automatically. If a dialogue window pops up during the installation, hit &quot;Yes&quot; to grant the installer the required permissions. Clicking &quot;No&quot; will cancel the installation. Don't start other processes while the installation process is going on. "},{"title":"Error 1603: Fatal error during installation​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1603","content":"The error sounds scarier than it actually is. In reality, this is a rather generic error that can have many different causes, and some of them are easily fixed. Try the following solutions: Press the Win key, search for Command Prompt and run it. There, type in sfc /scannow and press Enter. Choose a different installation folder. It is possible that the current installation folder has some access restrictions. Also make sure you don't select an external drive, a virtual drive, etc. Uninstall AdGuard using our special uninstall tool and then repeat the installation. Start and re-register Microsoft Installer service. It requires some work. 1) Press Win + R and enter services.msc. 2) Find in the list and double click Windows Installer. 3) Hit Start button under Service status and hit OK. If the service status is running, you should click Stop first and then hit Start. 4) Press Win + R, type and enter msiexec /unregister and hit Enter. 5) Press Win + R again, type and enter msiexec /regserver and hit Enter Acquire full permissions on the drive for installation. It is possible that the error 1603 occurs because you don’t have full permissions on the file location. It's also not as easy as some of the other solutions: 1) Open File Explorer, right-click the drive containing the installation location and select Properties. 2) Go to Security tab and click Edit. 3) Single-click SYSTEM and ensure that the Allow box of every item in Permissions for SYSTEM is checked (if it is checkable). Do the same check for Administrators. 4) Click OK to go back to Properties dialog. Then click Advanced. 5) Click Change Permissions. 6) On Permissions tab, double-click Administrators. 7) Select This folder, subfolders and files for Applies to field and tick all the available Basic permissions. After that hit OK. 8) Do the same operation above (from item 7) for SYSTEM. 9) Click OK all the way out. Try installing AdGuard again. "},{"title":"Error 1618: Another installation is already in progress​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1618","content":"This error occurs when there are several instances of AdGuard installer launched at the same time. What to do if you get this error: Reboot your PC and start the installer again. When you restart the computer, all ongoing processes will stop, including all copies of the installer. Don't make multiple clicks on the installer even if doesn't start right away. Sometimes it may take a few seconds to display the installer UI. "},{"title":"Error 1638: Another version of this product is already installed​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#error-1638","content":"It's very likely that you've already installed AdGuard before. Check if AdGuard is already installed on your computer. You can do it by pressing the Win key and typing in AdGuard. Maybe there's some leftover files from a previous AdGuard installation. Uninstall AdGuard using our special uninstall tool and then repeat the installation. "},{"title":"Other errors​","type":1,"pageTitle":"Common installer errors","url":"adguard-for-windows/solving-problems/common-installer-errors/#other","content":"If you've encountered an error that's not listed above, it is possible that we can solve it by ourselves. But in order to do that, we need log files from you. Please perform the following steps: Find and archive AdGuard installation logs as it is described in this article. Find and save to disk Event Viewer logs. This article explains how to do that. Please email all these files from two previous steps to the support team at support@adguard.com and describe the problem in the message body. Our tech support agents will reply to you as soon as possible. "},{"title":"Certificate-related issues","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/connection-not-trusted/","content":"","keywords":""},{"title":"Potential Security Risk error in Firefox-based browsers​","type":1,"pageTitle":"Certificate-related issues","url":"adguard-for-windows/solving-problems/connection-not-trusted/#potential-security-risk-error-in-firefox-based-browsers","content":" Old FireFox versions, as well as browsers based on them, do not trust certificates from the system storage, but only those from their local storage. Since v68, FireFox trusts the system certificates, but you still can face the &quot;Connection is untrusted&quot; error. If something like this happens, first try to click the Reinstall Certificate button — you will find it in the Network tab.  If that doesn't help, follow the instructions for manually adding the AdGuard certificate to the FireFox storage. This instruction is for Firefox browser. Names of buttons and menu items may differ in other Firefox-based browsers. 1) Run AdGuard. 2) Go to http://local.adguard.org/cert and click the Download button. The browser should start downloading cert.cer file. You can also open the download page by clicking on the link via the AdGuard app at Settings → Network → HTTPS filtering.  3) Open your browser and then open Settings. 4) Go to Privacy &amp; Security tab. 5) Scroll down to Certificates and click the View Certificates button.  6) Select Authorities tab. 7) Click Import....  8) Browse the downloaded cert.cer file and click Open. 9) Check the Trust this CA to identify websites box and then lick OK. You've successfully installed AdGuard certificate. Restart the browser and the error should go away. "},{"title":"Yandex.Browser certificate warning​","type":1,"pageTitle":"Certificate-related issues","url":"adguard-for-windows/solving-problems/connection-not-trusted/#yandexbrowser-certificate-warning","content":"If you are a user of both AdGuard for Windows and Yandex.Browser you may have come across this warning:  "},{"title":"Why is this happening​","type":1,"pageTitle":"Certificate-related issues","url":"adguard-for-windows/solving-problems/connection-not-trusted/#why-is-this-happening","content":"Both AdGuard and Yandex take users' security on the Internet very seriously. Current Yandex policy is to warn their users about any certificate that is not recognized by the browser. This is not unsubstantiated, because sometimes malicious apps can inject their own certificates and use this to harm the system and steal private data. However, AdGuard also adds its certificate to the trusted ones. This leads to the warning message you have encountered. "},{"title":"How to solve the problem​","type":1,"pageTitle":"Certificate-related issues","url":"adguard-for-windows/solving-problems/connection-not-trusted/#how-to-solve-the-problem","content":"The easiest way is to click the Go to site button. This will tell Yandex.Browser to remember AdGuard certificate as a trusted one, at least for a while. Normally, you won't have to see this message anymore, but it is not beyond the realm of possibility for it to appear occasionally, for whatever reasons. In such cases, simply press the same button again (make sure it is AdGuard's certificate!). Disabling the HTTPS filtering in AdGuard will also prevent Yandex.Browser from showing this message again, but it comes with a big price: all ads that are loaded by HTTPS (including Yandex's own ads) will show up — on such websites as YouTube, Facebook, Instagram, and many more. We strongly advise against it if you want to keep the quality of ad blocking high. "},{"title":"Possible DNS leaks","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/dns-leaks/","content":"","keywords":""},{"title":"Bootstrap DNS address​","type":1,"pageTitle":"Possible DNS leaks","url":"adguard-for-windows/solving-problems/dns-leaks/#bootstrap-dns-address","content":"The DNS server addresses could be written as IPs or as domain names. In the case of IP addresses there are no difficulties: AdGuard forwards the DNS request directly to the server specified in the DNS protection module. However, encrypted DNS server addresses, like DoT or DoH, are most often written as domain names. In this case, to first resolve the encrypted DNS server address, AdGuard sends a DNS query to the bootstrap address, which is by default a system DNS server. This connection is what check services perceive as a leak. To eliminate this leak: go to the Advanced settingsscroll down to the List of custom bootstrap addresses sectionenter the custom bootstrap address in IP address format (you may use the list of known DNS providers)click Save "},{"title":"Fallback DNS server​","type":1,"pageTitle":"Possible DNS leaks","url":"adguard-for-windows/solving-problems/dns-leaks/#fallback-dns-server","content":"It could happen that AdGuard cannot reach the specified server because of a weak internet connection, an expiration of timeout set by default or some server related issues. In this case, it will connect to the fallback server, which is by default a system DNS server. This connection will also be considered by the check service as a leak. To eliminate this leak: go to the Advanced settingsscroll down to the Fallback servers sectioncheck the Use custom servers optionthen find the List of custom fallback servers section and enter custom fallback servers one per line or go to the Advanced settingsscroll down to the Fallback servers sectioncheck the Don’t use fallback servers option or go to the Advanced settingsscroll down to the DNS server timeout period sectionenter an arbitrary large number "},{"title":"How to create a dump file","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/dump-file/","content":"How to create a dump file Hinweis Dieser Artikel behandelt AdGuard für Windows, einem multifunktionalen Werbeblocker, der Ihr Gerät auf Systemebene schützt. To see how it works, download the AdGuard app To diagnose the reasons for potential problems that users might encounter while using AdGuard, the support team might need the process dump file. The dump file helps developers to see the processes that were executed in the application over a given period of time. Below you can check on the instructions of how to collect the dump file on your PC. Press Ctrl + Shift + Esc and click Task ManagerIn the upper menu bar select Details Right-click the process that you want to create the dump file for (for example, the support team may ask you to create a dump for Adguard.exe)In the drop-down menu click Create dump fileThe file was created successfully! After you’ve created the dump file, please navigate to the file location. You should be prompted to open the folder containing the dump file right after its creation. Otherwise, you will be able to find it inside the %tmp% folder. The created dump file (.DMP) has the same name as the name of the process you chose in the previous steps. The file is quite large, so please compress it into an archive before sending to support. Please note, AdGuard for Windows has two running processes (Adguard.exe and AdguardSvc.exe). So you need to create the dump file separately for each process. When you send the dump files to the support team, please also attach the AdGuard application logs so we have a better chance at solving the problem. Here you can check the instructions on how to collect the log file.","keywords":""},{"title":"How to collect AdGuard installation logs","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/installation-logs/","content":"How to collect AdGuard installation logs Hinweis Dieser Artikel behandelt AdGuard für Windows, einem multifunktionalen Werbeblocker, der Ihr Gerät auf Systemebene schützt. To see how it works, download the AdGuard app If any problems occur during the installation of AdGuard, the support team might ask you to collect and send them AdGuard installation logs. In this case you need to: Select Run command in Start menu or press Win + R on the keyboard. Type in %tmp% and click OK. In the opened folder select all files starting with Adguard and add them to archive (using WinRAR or any other archiving software). Send this archive to AdGuard tech support at support@adguard.com.","keywords":""},{"title":"Known issues of AdGuard for Windows","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/known-issues/","content":"","keywords":""},{"title":"AdGuard for Windows and AdGuard VPN for Windows compatibility issues​","type":1,"pageTitle":"Known issues of AdGuard for Windows","url":"adguard-for-windows/solving-problems/known-issues/#adguard-for-windows-and-adguard-vpn-for-windows-compatibility-issues","content":"Once you install AdGuard for Windows and AdGuard VPN for Windows, they just start working together without any effort on your part. However, changing some of their default settings may cause the apps to work incorrectly when they run at the same time. There are two specific settings in AdGuard for Windows: Use redirect driver mode and Filter localhost. By default, the first is disabled, and the second is enabled. Changing any of these settings will inevitably disrupt AdGuard's filtering if both AdGuard Ad Blocker and AdGuard VPN are enabled on your device. Changing these settings is only necessary to resolve issues related to the simultaneous operation of AdGuard Ad Blocker and network-level apps such as antiviruses, VPNs, and network filters. If you come across a situation where you need to change the default state of the above settings and still want AdGuard Ad Blocker and AdGuard VPN to work simultaneously and correctly — create an issue on GitHub so we can help you personally. We are currently working on overcoming the above-listed limitations of the simultaneous work of our apps. "},{"title":"How to collect Windows system logs","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/system-logs/","content":"How to collect Windows system logs Hinweis Dieser Artikel behandelt AdGuard für Windows, einem multifunktionalen Werbeblocker, der Ihr Gerät auf Systemebene schützt. To see how it works, download the AdGuard app To analyse and diagnose different problems that may potentially arise, the AdGuard support service might need Windows system log files. Windows event logs contain records about all errors that occurr with the installed software, including AdGuard. Below is the brief instruction describing the way to get the log files and to send them to our support service if necessary. Press Win + R In the window that appears type in eventvwr and click OK: Event Viewer window appears as shown in the picture. To save files that we need, do the following: Open Application: Event Viewer (Local) → Windows Logs → Application. Right-click Application and in the drop-down menu select Save All Events As... Select a name and where to save, click Save. Select Display information for the following languages. You need to tick the box next to English. Click OK. Open System: Event Viewer (Local) → Windows Logs → System. Right-click System and in the drop-down menu select Save All Events As... Choose a destination folder, enter the name, click Save. Select Display information for the following languages. You need to tick the box next to English. Click OK. Please send the two files that you've recently saved to support@adguard.com.","keywords":""},{"title":"Leitfaden für erweiterte (low-level) Einstellungen","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/low-level-settings/","content":"","keywords":""},{"title":"So öffnen Sie die erweiterten Einstellungen​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#so-öffnen-sie-die-erweiterten-einstellungen","content":"Um zu Erweiterte Einstellungen zu gelangen, klicken Sie im Hauptfenster auf Einstellungen → Allgemeine Einstellungen und scrollen Sie nach unten zu Erweiterte Einstellungen. Wählen Sie alternativ Erweitert → Erweiterte Einstellungen... im Infobereich der Taskleiste. "},{"title":"Erweiterte Einstellungen​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#erweiterte-einstellungen","content":"Wenn Sie die erweiterten Einstellungen öffnen, werden Ihnen die folgenden Optionen angezeigt: "},{"title":"TCP Fast Open blockieren​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#tcp-fast-open-blockieren","content":"Wenn aktiviert, blockiert AdGuard TCP Fast Open im Edge-Browser. Um die Einstellungen zu übernehmen, müssen Sie den Browser neu starten. "},{"title":"Encrypted ClientHello verwenden​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#encrypted-clienthello-verwenden","content":"Jede verschlüsselte Internetverbindung hat einen unverschlüsselten Teil. Dies ist das allererste Paket, das den Namen des Servers enthält, mit dem Sie sich verbinden. Die verschlüsselte Client-Hallo-Technologie soll dieses Problem lösen und das letzte bisschen an unverschlüsselter Information verschlüsseln. Um davon zu profitieren, aktivieren Sie die Option Encrypted ClientHello verwenden. Er verwendet einen lokalen DNS-Proxy, um nach der ECH-Konfiguration für die Domain zu suchen. Wenn es gefunden wird, wird das ClientHello-Paket verschlüsselt. "},{"title":"Zertifikatstransparenz von Websites prüfen​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#zertifikatstransparenz-von-websites-prüfen","content":"Überprüft die Authentizität aller Zertifikate für die Domain basierend auf der Chrome Certificate Transparency Policy. Wenn das Zertifikat nicht den CT-Richtlinien von Chrome entspricht, filtert AdGuard die Website nicht. Chrome wiederum sperrt sie. "},{"title":"SSL/TLS-Zertifikatssperrprüfungen aktivieren​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#ssltls-zertifikatssperrprüfungen-aktivieren","content":"Wenn diese Option aktiviert ist, werden asynchrone OCSP-Prüfungen durchgeführt, um zu überprüfen, ob das SSL/TLS-Zertifikat der Website widerrufen wurde. Wenn die OCSP-Prüfung innerhalb der Mindestzeit abgeschlossen ist, wendet AdGuard das Ergebnis sofort an: Sperren der Verbindung, wenn das Zertifikat gesperrt ist, oder Aufbau einer Verbindung, wenn das Zertifikat gültig ist. Wenn die Überprüfung zu lange dauert, stellt AdGuard eine Verbindung her und setzt die Überprüfung im Hintergrund fort. Wird das Zertifikat widerrufen, werden aktuelle und zukünftige Verbindungen zu der Domain gesperrt. "},{"title":"AdGuard VPN in den Einstellungen anzeigen​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#adguard-vpn-in-den-einstellungen-anzeigen","content":"Wenn Sie diese Option aktivieren, können Sie die Registerkarte „AdGuard VPN” in den Einstellungen anzeigen lassen, um die App und die Website des Produkts einfach zu öffnen. "},{"title":"Anwendung von der Filterung ausschließen, durch Angabe des vollständigen Pfads​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#anwendung-von-der-filterung-ausschließen-durch-angabe-des-vollständigen-pfads","content":"Wenn Sie möchten, dass AdGuard bestimmte Anwendungen nicht filtert, geben Sie den vollständigen Pfad zu diesen Anwendungen an, damit diese von der Filterung ausgeschlossen werden. Trennen Sie verschiedene Pfade durch Semikolon. "},{"title":"AdGuard Pop-up-Benachrichtigungen aktivieren​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#adguard-pop-up-benachrichtigungen-aktivieren","content":"Aktivieren Sie diese Funktion, um Popup-Benachrichtigungen von AdGuard anzuzeigen. Sie werden nicht allzu oft angezeigt und enthalten nur wichtige Informationen. Sie können auch das Symbol im Infobereich der Taskleiste verwenden, um die letzte Popup-Benachrichtigung aufzurufen. "},{"title":"Filter-Abonnement URLs automatisch filtern​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#filter-abonnement-urls-automatisch-filtern","content":"Aktivieren Sie diese Funktion, wenn Sie möchten, dass AdGuard automatisch Filter-URLs (z.B. abp:subscribe und ähnliche) abfängt und einen benutzerdefinierten Filter-Installationsdialog öffnet. "},{"title":"Umleitungstreiber-Modus verwenden​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#umleitungstreiber-modus-verwenden","content":"Wenn diese Option aktiviert ist, fängt AdGuard den gesamten Datenverkehr ab und leitet ihn zur weiteren Filterung an den lokalen Proxy-Server weiter. Andernfalls filtert AdGuard den gesamten Datenverkehr sofort und ohne Umleitung. In diesem Fall betrachtet das System AdGuard als die einzige Anwendung, die eine Verbindung zum Internet herstellt (andere Anwendungen werden über ihn geleitet). Der Nachteil ist, dass die System-Firewall dadurch weniger wirksam wird. Der Vorteil ist, dass dieser Ansatz ein wenig schneller funktioniert. "},{"title":"Hauptfenster bei Systemstart öffnen​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#hauptfenster-bei-systemstart-öffnen","content":"Aktivieren Sie diese Option, damit sich das Hauptfenster von AdGuard nach dem Laden des Systems öffnet. Beachten Sie, dass es keinen Einfluss darauf hat, ob der eigentliche Filterdienst gestartet wird oder nicht. Diese Einstellung befindet sich in Einstellungen → Allgemeine Einstellungen "},{"title":"Filterung beim Systemstart aktivieren​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#filterung-beim-systemstart-aktivieren","content":"Ab v7.12 filtert der AdGuard-Dienst standardmäßig keinen Datenverkehr nach dem Start des Betriebssystems, wenn die Option „AdGuard beim Systemstart starten” deaktiviert ist. Mit anderen Worten, der Dienst von AdGuard wird im „Leerlaufmodus” gestartet. Aktivieren Sie diese Option, damit AdGuard den Datenverkehr auch dann filtert, wenn die App nicht gestartet ist. Beachten Sie, dass vor v7.12 AdGuard standardmäßig im Filtermodus gestartet wurde (auch wenn die Option „AdGuard beim Systemstart starten” deaktiviert war). Wenn Sie mit dem alten Verhalten zufrieden waren, aktivieren Sie diese Option. "},{"title":"Localhost filtern​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#localhost-filtern","content":"Wenn Sie möchten, dass AdGuard Loopback-Verbindungen filtert, markieren Sie das Kästchen. Diese Option wird immer aktiviert sein, wenn Sie AdGuard VPN installiert haben, da es sonst nicht funktionieren kann. "},{"title":"Festgelegte IP-Bereiche von der Filterung ausschließen​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#festgelegte-ip-bereiche-von-der-filterung-ausschließen","content":"Wenn Sie nicht möchten, dass AdGuard bestimmte Subnetze filtert, aktivieren Sie diese Funktion und geben Sie die IP-Bereiche in der CIDR-Notation (z.B. 98.51.100.14/24) im Abschnitt IP-Bereiche, die von der Filterung ausgeschlossen sind unten an. "},{"title":"Das Schreiben im HAR-Format erlauben​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#das-schreiben-im-har-format-erlauben","content":"Diese Option sollte nur für die Fehlersuche aktiviert werden. Wenn Sie das Häkchen setzen, erstellt AdGuard eine Datei, die Informationen über alle gefilterten HTTP-Anfragen im Format HAR 1.2 enthält. Diese Datei kann mit der App „Fiddler“ analysiert werden. Beachten Sie, dass sich Ihr Surfen im Internet dadurch erheblich verlangsamen kann. "},{"title":"Zusätzliches Leerzeichen in die einfache HTTP-Anfrage einfügen​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#zusätzliches-leerzeichen-in-die-einfache-http-anfrage-einfügen","content":"Fügt ein zusätzliches Leerzeichen zwischen der HTTP-Methode und der URL ein und entfernt das Leerzeichen nach dem Feld „Host:”, um Deep Packet Inspection zu vermeiden. Zum Beispiel, wird die Anfrage GET /foo/bar/ HTTP/1.1 Host: example.org umgewandelt in GET /foo/bar/ HTTP/1.1 Host:example.org Diese Option wird nur angewendet, wenn die Option Schutz vor DPI im Privatsphärenmodus aktiviert ist. "},{"title":"Größe der Fragmentierung des ersten TLS-Pakets anpassen​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#größe-der-fragmentierung-des-ersten-tls-pakets-anpassen","content":"Gibt die Größe der TCP-Paketfragmentierung an, um eine Deep Packet Inspection zu vermeiden. Diese Option betrifft nur verschlüsselten HTTPS-Verkehr. Wenn diese Option aktiviert ist, teilt AdGuard das initiale TLS-Paket (das ClientHello-Paket) in zwei Teile auf: der erste hat die angegebene Länge und der zweite den Rest, bis zur Länge des gesamten initialen TLS-Pakets. Zulässige Werte: 1-1500. Wird eine ungültige Größe angegeben, wird der vom System ausgewählte Wert verwendet. Diese Option wird nur angewendet, wenn die Option Schutz vor DPI im Privatsphärenmodus aktiviert ist. "},{"title":"Fragmentgröße einer einfachen HTTP-Anfrage​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#fragmentgröße-einer-einfachen-http-anfrage","content":"Passt die Größe der Fragmentierung der HTTP-Anfrage an. Diese Option betrifft nur den einfachen HTTP-Verkehr. Wenn diese Option aktiviert ist, teilt AdGuard das ursprüngliche Paket in zwei Teile auf: der erste hat die angegebene Länge und der zweite den Rest, bis zur Länge des gesamten ursprünglichen Pakets. Zulässige Werte: 1-1500. Wird eine ungültige Größe angegeben, wird der vom System ausgewählte Wert verwendet. Diese Option wird nur angewendet, wenn die Option Schutz vor DPI im Privatsphärenmodus aktiviert ist. "},{"title":"QUIC anzeigen​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#quic-anzeigen","content":"Ermöglicht die Anzeige der QUIC-Protokollsätze im Filterungsprotokoll. Nur für gesperrte Anfragen. "},{"title":"TCP-Keepalive aktivieren​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#tcp-keepalive-aktivieren","content":"Sendet regelmäßig TCP-Pakete über eine inaktive Verbindung, um sicherzustellen, dass sie aktiv ist und um NAT-Timeouts zu erneuern. Diese Option kann nützlich sein, um die strengen NAT-Einstellungen (Network Address Translation) zu umgehen, die einige ISPs verwenden. "},{"title":"TCP-Keepalive-Intervall​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#tcp-keepalive-intervall","content":"Hier können Sie eine Leerlaufzeit in Sekunden angeben, bevor ein Keepalive-Test gesendet wird. Wird 0 (Null) angegeben, wird der vom System gewählte Wert verwendet. Beachten Sie, dass diese Einstellung nur funktioniert, wenn die Option TCP-Keepalive aktivieren aktiviert ist. "},{"title":"TCP-Keepalive-Zeitüberschreitung​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#tcp-keepalive-zeitüberschreitung","content":"Hier können Sie die Zeit in Sekunden angeben, bevor Sie eine weitere Keepalive-Prüfung an eine nicht reagierende Gegenstelle senden. Wird 0 (Null) angegeben, wird der vom System gewählte Wert verwendet. Beachten Sie, dass diese Einstellung nur funktioniert, wenn die Option TCP-Keepalive aktivieren aktiviert ist. "},{"title":"Java blockieren​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#java-blockieren","content":"Einige Websites und Webdienste unterstützen nach wie vor Java Plug-Ins. Die API, die als Grundlage für Java-Plug-ins dient, weist gravierende Sicherheitslücken auf. Sie können solche Plug-ins aus Sicherheitsgründen deaktivieren. Aber auch wenn Sie sich für die Option Java sperren entscheiden, wird JavaScript weiterhin aktiviert sein. "},{"title":"Zeitüberschreitung des DNS-Servers​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#zeitüberschreitung-des-dns-servers","content":"Hier können Sie die Zeit in Millisekunden angeben, die AdGuard auf die Antwort des ausgewählten DNS-Servers warten soll, bevor er auf den Fallback zurückgreift. Wenn Sie dieses Feld nicht ausfüllen oder einen ungültigen Wert eingeben, wird der Wert von 5.000 verwendet. "},{"title":"HTTP/3 für DNS-over-HTTPS verwenden​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#http3-für-dns-over-https-verwenden","content":"Aktiviert HTTP/3 für DNS-over-HTTPS-Upstreams, um die Verbindung zu beschleunigen, wenn der ausgewählte Upstream dieses Protokoll unterstützt. Das bedeutet, dass die Aktivierung dieser Option nicht garantiert, dass alle DNS-Anfragen über HTTP/3 gesendet werden. "},{"title":"Fallback-DNS-Upstreams verwenden​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#fallback-dns-upstreams-verwenden","content":"Wenn diese Option aktiviert ist, werden normale Anfragen an den Fallback-Upstream weitergeleitet, wenn alle DNS-Anfragen an die ausgewählten Upstreams fehlschlagen. "},{"title":"Parallele Abfrage von DNS-Upstreams​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#parallele-abfrage-von-dns-upstreams","content":"Nach der Aktivierung werden alle Upstreams parallel abgefragt und die erste erfolgreiche Antwort wird zurückgegeben. Da DNS-Abfragen parallel durchgeführt werden, erhöht das Aktivieren dieser Funktion die Internetgeschwindigkeit. "},{"title":"Immer auf fehlgeschlagene DNS-Anfragen antworten​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#immer-auf-fehlgeschlagene-dns-anfragen-antworten","content":"Wenn die Adressauflösung in jedem der weitergeleiteten Upstreams sowie in den Fallback-Domains fehlgeschlagen ist, lautet die Antwort auf die DNS-Anfrage SERVFAIL. "},{"title":"Filtern von sicheren DNS-Anfragen aktivieren​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#filtern-von-sicheren-dns-anfragen-aktivieren","content":"Wenn diese Option aktiviert ist, leitet AdGuard sichere DNS-Anfragen an den lokalen DNS-Proxy um, zusätzlich zu den normalen DNS-Anfragen. "},{"title":"Sperrmodus für Hosts-Regeln​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#sperrmodus-für-hosts-regeln","content":"Hier können Sie festlegen, wie AdGuard auf Domains reagieren soll, die durch DNS-Regeln basierend auf der Hosts-Regelsyntax gesperrt werden. Mit Fehler „Abgelehnt“ antwortenMit Fehler „NxDomain“ antwortenMit benutzerdefinierter IP-Adresse antworten "},{"title":"Sperrmodus für Regeln im Adblock-Stil​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#sperrmodus-für-regeln-im-adblock-stil","content":"Hier können Sie festlegen, wie AdGuard auf Domains reagieren soll, die durch DNS-Regeln auf Basis der Adblock-Syntax gesperrt werden. Mit Fehler „Abgelehnt“ antwortenMit Fehler „NxDomain“ antwortenMit benutzerdefinierter IP-Adresse antworten "},{"title":"Benutzerdefinierte IPv4-Adresse​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#benutzerdefinierte-ipv4-adresse","content":"Wenn die benutzerdefinierte IP-Adresse im Sperrmodus für Hosts-Regeln oder im Sperrmodus für Adblock-Stil-Regeln ausgewählt ist, wird diese IP-Adresse als Antwort auf gesperrte A-Anfragen zurückgegeben. Wenn keine angegeben werden, antwortet AdGuard mit dem Standardfehler „Abgelehnt“. "},{"title":"Benutzerdefiniertes IPv6-Adresse​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#benutzerdefiniertes-ipv6-adresse","content":"Wenn die benutzerdefinierte IP-Adresse im Sperrmodus für Hosts-Regeln oder im Sperrmodus für Adblock-Stil-Regeln ausgewählt ist, wird diese IP-Adresse als Antwort auf gesperrte AAAA-Anfragen zurückgegeben. Wird keine angegeben, antwortet AdGuard mit dem Standardfehler „Abgelehnt“. "},{"title":"Fallback-Server​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#fallback-server","content":"Hier können Sie einen alternativen DNS-Server angeben, an den eine DNS-Anfrage umgeleitet wird, wenn der Hauptserver nicht innerhalb der im nächsten Abschnitt angegebenen Zeitspanne antwortet. Es stehen drei Optionen zur Auswahl: Keine Ausweichserver verwenden;Standardserver des Systems verwenden;Benutzerdefinierte Server verwenden. "},{"title":"ECH blockieren​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#ech-blockieren","content":"Wenn diese Option aktiviert ist, entfernt AdGuard die Parameter von Encrypted ClientHello aus den Antworten. "},{"title":"Liste der benutzerdefinierten Fallback-Server​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#liste-der-benutzerdefinierten-fallback-server","content":"Wenn Sie möchten, dass AdGuard benutzerdefinierte Fallback-Server verwendet, führen Sie diese in diesem Abschnitt auf, einen pro Zeile. "},{"title":"Liste der benutzerdefinierten Bootstrap-Adressen​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#liste-der-benutzerdefinierten-bootstrap-adressen","content":"Ein Bootstrap ist ein DNS-Zwischenserver, der verwendet wird, um die IP-Adresse des sicheren DNS-Servers zu erhalten, den Sie zuvor unter DNS-Schutz ausgewählt haben. Ein solcher „Mittelweg“ ist erforderlich, wenn Protokolle verwendet werden, bei denen die Serveradresse mit Buchstaben angegeben wird (wie z. B. DNS-over-TLS). In diesem Fall fungiert der Bootstrap als Übersetzer und wandelt die Buchstaben in Zahlen um, die Ihr System versteht. Standardmäßig wird der DNS-Auflöser des Systems verwendet, und die erste Bootstrap-Anfrage erfolgt über Port 53. Wenn Ihnen das nicht passt, listen Sie hier die IP-Adressen der DNS-Server auf, die zur Ermittlung der Adresse des verschlüsselten DNS-Servers verwendet werden, und zwar in der Reihenfolge von oben nach unten. Die angegebenen IP-Adressen werden in der aufgeführten Reihenfolge übernommen. Wenn Sie ungültige Adressen oder gar keine Adressen angeben, werden die System-IPs verwendet. "},{"title":"DNS-Ausschlüsse​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#dns-ausschlüsse","content":"Alle DNS-Anfragen an die hier aufgeführten Domains werden an den Standard-DNS-Server des Systems umgeleitet, anstatt an den in den Einstellungen der App angegebenen DNS-Server. Außerdem werden die DNS-Sperrregeln nicht auf solche Anfragen angewandt. "},{"title":"Bestimmte WLAN-Netzwerknamen (SSIDs) von der DNS-Filterung ausschließen​","type":1,"pageTitle":"Leitfaden für erweiterte (low-level) Einstellungen","url":"adguard-for-windows/solving-problems/low-level-settings/#bestimmte-wlan-netzwerknamen-ssids-von-der-dns-filterung-ausschließen","content":"Der DNS-Schutz funktioniert nicht für die in diesem Abschnitt aufgeführten WLAN-Netzwerke. Geben Sie die Namen der WLAN-Netzwerke (SSIDs) an, eine pro Zeile. Dies kann nützlich sein, wenn ein bestimmtes WLAN-Netzwerk bereits durch AdGuard Home oder ein anderes DNS-Schutzsystem geschützt ist. In diesem Fall ist es überflüssig, DNS-Anfragen erneut zu filtern. "},{"title":"WFP driver","type":0,"sectionRef":"#","url":"adguard-for-windows/solving-problems/wfp-driver/","content":"WFP driver Hinweis Dieser Artikel behandelt AdGuard für Windows, einem multifunktionalen Werbeblocker, der Ihr Gerät auf Systemebene schützt. To see how it works, download the AdGuard app To filter netwrok traffic, AdGuard uses a network driver. There are two options: TDI driver and WFP driver. While WFP driver is generally preferrable and is enabled by default for all newer Windows OS versions (Windows 8 and newer), it can potentially cause compatibility problems, especially with some antiviruses. These problems and subsequent errors can be very different in each case. If you encounter a problem that you suspect might be caused by this, you can always switch to the older but more stable TDI network driver. To do so: Go to Settings → Network. Disable WFP driver as it’s done in this picture:","keywords":""},{"title":"Two-factor authentication","type":0,"sectionRef":"#","url":"general/account/2fa/","content":"","keywords":""},{"title":"How to set it up​","type":1,"pageTitle":"Two-factor authentication","url":"general/account/2fa/#how-to-set-it-up","content":"1) Log into your AdGuard account and go to the Settings tab:  2) Scroll down to Password and 2FA section and click Enable:  3) Follow the on-screen instructions to install an authenticator app and scan the QR code:  Important Save the second-factor backup code somewhere, it will be necessary to recover your account in case your mobile phone gets lost or stolen; If everything is done right, you will see this when you log into your account the next time:  Use your mobile authenticator app to read the code and enter it. You should be logged in now! NOTE: If you get an authentication error, check the clock on your phone. Adjust it if needed, as an unsynchronized clock may be the cause of the error. "},{"title":"What can be done in the AdGuard Account","type":0,"sectionRef":"#","url":"general/account/features/","content":"","keywords":""},{"title":"Manage account settings​","type":1,"pageTitle":"What can be done in the AdGuard Account","url":"general/account/features/#manage-account-settings","content":"In the Settings section of your AdGuard account, you can update or reset your password, change your email address, enable two-factor authentication, view the data stored about you by AdGuard and choose the language of your personal account and notifications. In this section, you can also manage your email preferences: receive transactional emails,receive AdGuard’s monthly newsletters,receive emails about AdGuard special offers and promotions,send read receipts to AdGuard when you open emails. "},{"title":"Manage licenses​","type":1,"pageTitle":"What can be done in the AdGuard Account","url":"general/account/features/#manage-licenses","content":"In the Licenses section, you can manage your licenses and the devices bound to them. AdGuard licenses can be: bound and unbound,extended,upgraded,canceled. You can also update your payment details. The devices bound to your AdGuard Ad Blocker licenses can be unbound or renamed. You can unbind unused devices by clicking the cross icon next to them. "},{"title":"View purchases​","type":1,"pageTitle":"What can be done in the AdGuard Account","url":"general/account/features/#view-purchases","content":"The Purchase history section displays all the licenses that you have ever purchased using the email account you registered your AdGuard account with. You will also find there information about the date of purchase, order number, payment method and cost of the purchase. "},{"title":"Contact support​","type":1,"pageTitle":"What can be done in the AdGuard Account","url":"general/account/features/#contact-support","content":"The Support tab contains useful links to help you solve problems or find answers to your questions about AdGuard products. They are divided into six sections: FAQ, Send a bug repot/feature request, Report incorrect blocking, Contact support, Knowledge base and Discuss. "},{"title":"How to register","type":0,"sectionRef":"#","url":"general/account/register/","content":"","keywords":""},{"title":"What an AdGuard account is​","type":1,"pageTitle":"How to register","url":"general/account/register/#what-an-adguard-account-is","content":"AdGuard account is a user account that stores information about your AdGuard licenses and subscriptions, active devices, your purchase history, preferred language, and other preferences. Many AdGuard products offer an option to activate them by entering the credentials for your AdGuard account, provided it contains a valid license. "},{"title":"How to create an account​","type":1,"pageTitle":"How to register","url":"general/account/register/#how-to-create-an-account","content":"To create an account, go to AdGuard's official website and press the My Account button on the top right corner of the screen. Enter your email address and create a password — your account will be registered. If you enter your email address while purchasing a license or receive a license accociated with your email address as a gift, an account will be created automatically. To set a password, you can follow a link from a transactional or gift letter. You can also register with the above method. An account can also be created directly in an AdGuard app. Press the Log in or Activate button (it can be found in the License section or on a separate screen), enter your email and create a password. After the account is created, activate it by following the link in the activation email. "},{"title":"AdGuard filters","type":0,"sectionRef":"#","url":"general/ad-filtering/adguard-filters/","content":"","keywords":""},{"title":"AdGuard filters​","type":1,"pageTitle":"AdGuard filters","url":"general/ad-filtering/adguard-filters/#adguard-filters","content":"Base filter removes ads from websites with English content. Originally based on EasyList and modified by us. View rulesTracking Protection filter — comprehensive list of various online counters and web analytics tools. Use it to hide your actions online and avoid tracking. View rulesURL Tracking filter enhances privacy by removing tracking parameters from URLs. When a user opts to block tracking parameters in Stealth Mode, this filter will be enabled automatically. View rulesSocial media filter removes numerous &quot;Like&quot; and &quot;Tweet&quot; buttons and other social media integrations on popular websites. View rulesAnnoyances filter blocks irritating elements on web pages. View rules Includes the following AdGuard filters (all of them can be enabled separately from the Annoyances filter): Cookie Notices blocks cookie notices on web pages. View rulesPopups blocks all kinds of pop-ups that are not necessary for websites' operation. View rulesMobile App Banners blocks banners that promote mobile apps of websites. View rulesWidgets blocks third-party widgets: online assistants, live support chats, etc. View rulesOther Annoyances blocks elements that do not fall under the popular categories of annoyances. View rules Filter unblocking search ads and self-promotions unblocks ads that may be useful to users. Learn more about this filter on this page. View rulesRussian filter removes ads from websites in Russian. View rulesGerman filter removes ads from websites in German. Originally based on the EasyList Germany filter and subsequently modified by us according to the complaints from users. View rulesFrench filter removes ads from websites in French. Originally based on the Liste FR filter and subsequently modified by us according to the complaints from users. View rulesJapanese filter removes ads from websites in Japanese. Originally based on the Fanboy’s Japanese filter and subsequently modified by us according to the complaints from users. View rulesDutch filter removes ads from websites in Dutch. Originally based on the EasyList Dutch filter and subsequently modified by us according to the complaints from users. View rulesSpanish/Portuguese filter removes ads from websites in Spanish and Portuguese. Originally based on the Fanboy’s Spanish/Portuguese filter and subsequently modified by us according to the complaints from users. View rulesTurkish filter removes ads from websites in Turkish. Created by us according to the complaints from users. View rulesChinese filter removes ads from websites in Chinese. Originally based on the EasyList China filter and subsequently modified by us according to the complaints from users. View rulesExperimental filter serves to test some new filtering rules that can potentially cause conflicts and mess with websites' work. In case these rules perform without any issues, they get added to main filters. View rulesMobile ads filter blocks ads on mobile devices. Contains all known mobile ad networks. View rulesDNS filter — composed of several other filters (AdGuard Base filter, Social media filter, Spyware filter, Mobile ads filter, EasyList and EasyPrivacy) and simplified specifically to be better compatible with DNS-level ad blocking. This filter is used by AdGuard DNS servers to block ads and tracking. View rules "},{"title":"AdGuard Filters Policy​","type":1,"pageTitle":"AdGuard filters","url":"general/ad-filtering/adguard-filters/#adguard-filters-policy","content":"Our filter policy defines what AdGuard filters should block and what they should not, as well as the rules for adding and removing rules from filters. Read the full text of AdGuard filter policy for detailed information. "},{"title":"Contributing to AdGuard filters​","type":1,"pageTitle":"AdGuard filters","url":"general/ad-filtering/adguard-filters/#contributing-to-adguard-filters","content":"We are blessed with a unique community that not only loves AdGuard but also gives back. Many people volunteer in various ways to make AdGuard's user experience better for everybody. You are welcome to join the band and make a difference. We will do our part and happily reward the most active community. So, what can you do? "},{"title":"Report Issues​","type":1,"pageTitle":"AdGuard filters","url":"general/ad-filtering/adguard-filters/#report-issues","content":"We rely on the community to let us know about issues with our filters. It helps us use our time more efficiently and keep filters constantly updated. To submit a report, please use this web reporting tool. "},{"title":"Suggest Filtering Rules​","type":1,"pageTitle":"AdGuard filters","url":"general/ad-filtering/adguard-filters/#suggest-filtering-rules","content":"You will find many open issues in the GitHub filter repository. Each one refers to a problem with a website, such as a missed ad or a false positive. Pick an issue and suggest your own rules in the comments. AdGuard filter engineers will review your suggestions and, if approved, add your rules to AdGuard filters. Here is the official documentation on the syntax of AdGuard filtering rules. Please read it carefully: it will help you create your own filtering rules. "},{"title":"Other ways to contribute​","type":1,"pageTitle":"AdGuard filters","url":"general/ad-filtering/adguard-filters/#other-ways-to-contribute","content":"Here is a dedicated page for people willing to contribute to AdGuard in other ways. "},{"title":"AdGuard filter policy","type":0,"sectionRef":"#","url":"general/ad-filtering/filter-policy/","content":"","keywords":""},{"title":"Terminology​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#terminology","content":"Throughout this text, we use the terms first party and third party. A &quot;first party&quot; is a website that a user visits intentionally and knowingly, plus a set of resources on the web operated by the same organization. In practice, we consider resources to belong to the same party if they are part of the same registrable domain: a public suffix plus one additional label. Example: site.example, www.site.example, and s.u.b.site.example belong to the same party because site.example is their common registrable domain. A &quot;third party&quot; is any party that does not fall within the definition of the first party above. Interactions with other parties are considered third-party, even if the user is transiently informed in context (for example, in the form of a redirect). Merely hovering over, muting, pausing, or closing a given piece of content does not constitute an intention to interact. "},{"title":"Common criteria​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#common-criteria","content":"These equally apply to rules in all filters. Rules that often cause problems with the work of some websites will be deleted.Website-specific rules will be added only if a website has sufficient traffic. Traffic is determined by open statistics (if available) or by other means, such as followers on social media. A website's traffic is considered sufficient when it has 100 thousand visits per month. We will consider adding a rule for a website that's not that popular, but the final decision is up to the filter list maintainer. "},{"title":"Ad filters​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#ad-filters","content":"This part describes the AdGuard Base filter, the Mobile Ads filter, and the following language-specific filters: Russian, German, Dutch, Spanish/Portuguese, Japanese, Turkish, Chinese, and French. What shall these filters block? These filters will block ads wherever possible.Ads should be blocked regardless of their reasons and goals.We will block ads caused by malicious apps or extensions that inject ads. Please note that we do it only on the condition that you specify how to install such an app or extension. Limitations and Exceptions If a rule is subject to the list of limitations described below, then it won’t be added to the main filters. Websites’ own ads should not be removed on purpose. On the other hand, they should not be unblocked if it may cause third-party ads to reappear.Website-specific rules will be added only if a website has sufficient traffic. Traffic is determined by open statistics (if available) or by other means, such as followers on social media. A website's traffic is considered sufficient when it has 100 thousand visits per month. We will consider adding a rule for a website that's not that popular, but the final decision is up to the filter list maintainer.Anti-adblock scripts will be blocked only if they limit or affect the functionality of a website.Anti-adblock scripts will not be blocked in cases when it is prohibited by law.Rules that often cause problems with the work of some websites will be deleted. "},{"title":"Tracking Protection filter​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#tracking-protection-filter","content":"What will be blocked with this filter? This filter will block all trackers that collect user personal data. We define tracking as collecting data regarding an individual’s identity or activity across one or more websites. Even if such data is considered to be personally unidentifiable, it’s still tracking. Tracker is an online script that has tracking as its only purpose, or as one of its purposes. Limitations and Exceptions If a rule is subject to the list of limitations described below, then it won’t be added to this filter. Rules that cause problems with website functionality will be removed.Website-specific rules will be added only if a website has sufficient traffic. Traffic is determined by open statistics (if available) or by other means, such as followers on social media. A website's traffic is considered sufficient when it has 100 thousand visits per month. We will consider adding a rule for a website that's not that popular, but the final decision is up to the filter list maintainer. "},{"title":"AdGuard URL Tracking filter​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#adguard-url-tracking-filter","content":"What will be blocked with this filter? This filter will strip all tracking parameters from URLs. We define tracking as collecting data regarding an individual’s identity or activity across one or more websites. Even if such data is considered to be personally unidentifiable, it’s still tracking. Limitations and Exceptions If a rule is subject to the list of limitations described below, then it won’t be added to this filter. Rules that would reduce user security levels will be removed.Rules that cause problems with website functionality will be removed.Website-specific rules will be added only if a website has sufficient traffic. Traffic is determined by open statistics (if available) or by other means, such as followers on social media. A website's traffic is considered sufficient when it has 100 thousand visits per month. We will consider adding a rule for a website that's not that popular, but the final decision is up to the filter list maintainer. "},{"title":"Social Media filter​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#social-media-filter","content":"What will be blocked with this filter? This filter will block social media widgets (on third-party websites) such as &quot;Like&quot; and &quot;Share&quot; buttons, recommendation widgets, and more. Limitations and Exceptions If a rule is subject to the list of limitations described below, then it won’t be added to this filter. Rules that block widgets that are a part of a website’s functionality, such as &quot;Comments,&quot; &quot;Embedded Post,&quot; &quot;Surveys,&quot; or widgets that require authorization via social networks.Rules that block links to a website’s communities in social networks.Rules that cause problems with website functionality will be removed.Website-specific rules will be added only if a website has sufficient traffic. Traffic is determined by open statistics (if available) or by other means, such as followers on social media. A website's traffic is considered sufficient when it has 100 thousand visits per month. We will consider adding a rule for a website that's not that popular, but the final decision is up to the filter list maintainer. "},{"title":"Annoyances filter​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#annoyances-filter","content":"What will be blocked with this filter? This filter will block obstructions on the page. These elements are not ads, but they obstruct the view and make it difficult to see the actual content of the website. Such elements include cookie notices, third-party widgets, in-page pop-ups, email subscription forms, banners with special offers, and aggressively placed social media widgets. Limitations and Exceptions If a rule is subject to the list of limitations described below, then it won’t be added to this filter. Rules that block elements that are essential for the website functioning (e.g. authorization forms) will not be blocked even if they satisfy other requirements.Rules that cause problems with website functionality will be removed.Website-specific rules will be added only if a website has sufficient traffic. Traffic is determined by open statistics (if available) or by other means, such as followers on social media. A website's traffic is considered sufficient when it has 100 thousand visits per month. We will consider adding a rule for a website that's not that popular, but the final decision is up to the filter list maintainer. "},{"title":"Filter unblocking search ads and self-promotion​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#filter-unblocking-search-ads-and-self-promotion","content":"Unlike other filters, this one unblocks certain ads. Read more about it in the article on search ads and self-promotion. What will be unblocked with this filter? Search ads (ads that you see among the results when using an online search engine).Website self-promotion (when an ad on a website is promoting this very website or other websites/social media/etc closely related to it). Limitations and Exceptions Rules that cause problems with website functionality will be removed.Website-specific rules will be added only if a website has sufficient traffic. Traffic is determined by open statistics (if available) or by other means, such as followers on social media. A website's traffic is considered sufficient when it has 100 thousand visits per month. We will consider adding a rule for a website that's not that popular, but the final decision is up to the filter list maintainer. "},{"title":"Quality requirements for filtering rules​","type":1,"pageTitle":"AdGuard filter policy","url":"general/ad-filtering/filter-policy/#quality-requirements-for-filtering-rules","content":"The rules should be as efficient as possible in terms of performance.Exception rules should be as specific as possible in order to avoid unnecessary unblocking.CSS and JS injection rules should be used as rarely as possible and only when it is impossible to block ads without them. "},{"title":"How ad blocking works","type":0,"sectionRef":"#","url":"general/ad-filtering/how-ad-blocking-works/","content":"","keywords":""},{"title":"General principle​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#general-principle","content":"Filter lists, also called filters, lie at the core of any ad blocker. Filters are literally lists of rules written in a special syntax. Ad blockers can understand this complex syntax. They interpret filtering rules and perform actions on web traffic based on what the rules tell them to do: block specific elements, alter web pages in certain ways, etc.  "},{"title":"Filter lists​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#filter-lists","content":"To better understand ad blocking, it's important to know the underlying principles of how filters work. Filtering rules that make up filters are not created automatically. They are developed by filter maintainers, including professionals and volunteers, who use browser developer consoles and other tools (such as the AdGuard's filtering log) to determine which rules will block a particular ad or tracker. This description of the process is very simplistic – some ads are particularly hard to block and require multiple rules, multiple iterations, and the use of complex syntax. And even when a rule finally gets added to a filter, it doesn't mean that it stays there forever. Ads change, ways to serve the same ads on the same websites change, and the filter rules have to change, too. Sometimes rules become obsolete, a new ad appears, or a new filtering rule is needed to block the same ad. Filters are often maintained by one person, but even for a team of maintainers, it's impossible to constantly monitor the entire web. That's why many ad blockers have tools to help users easily report any filter-related issues they encounter.  AdGuard users have access to a special web reporting tool. Thanks to user complaints, filter developers can focus on correcting their filter lists and not on scouring the Internet for new and old unblocked ads. Filters can do more than just block ads. There are filters that block tracking, social media widgets, and annoyances such as cookie notices. Different users may choose different combinations of filters to match their personal preferences. There are websites like filterlists.com that are dedicated to filter lists and have huge databases. We develop and maintain our own set of filter lists that can be used with AdGuard or other ad blockers. "},{"title":"Types of filtering rules​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#types-of-filtering-rules","content":"There are many types of filtering rules that serve different purposes. Depending on the ad blocker you use, and especially on your OS, some types of rules may not be supported. "},{"title":"Basic filtering rules​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#basic-filtering-rules","content":"To be displayed on a web page or in an app, the ad has to be loaded from a server first. To do so, the browser or the app needs to send a web request. The most basic way of preventing an ad from appearing on your screen is to block this request so it never reaches the server, and thus there's no reply. Basically, all AdGuard Ad Blocker products can block web requests according to the active filter rules. This method is very effective at stopping the ad, but it has some drawbacks. The most obvious one is: whatever place an ad was taking up will be left empty or occupied by an ad leftover. "},{"title":"Cosmetic filtering rules​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#cosmetic-filtering-rules","content":"Every web page has a Document Object Model (DOM), an HTML document containing the structure and elements of this page. As ads are also page elements, they get recorded in the DOM. Ad blockers can remove parts of the DOM, while filtering rules help them understand which parts are ads and should be removed, and which parts should be left intact. This method allows you to avoid above-mentioned blank spaces and ad leftovers, as well as perform other more complicated tasks. "},{"title":"HTML filtering rules​","type":1,"pageTitle":"How ad blocking works","url":"general/ad-filtering/how-ad-blocking-works/#html-filtering-rules","content":"In most cases, it's enough to use the above-mentioned basic and cosmetic rules to filter ads. But when it is necessary to change the HTML code of the page itself before it is loaded, you need filtering rules for HTML content. These rules allow you to specify the HTML elements to be cut out before the browser even loads the page. These rules are quite complicated and require the ad blocker to be granted certain access rights, so not all platforms support them. Currently, these rules work only in the AdGuard Firefox add-on and in the AdGuard apps for Windows, Mac, and Android. There are other types of filtering rules, but they require more advanced technical knowledge to understand how they work. If you are interested, check out our comprehensive guide on filtering rules in the linked article. "},{"title":"Search ads and self-promotion","type":0,"sectionRef":"#","url":"general/ad-filtering/search-ads/","content":"","keywords":""},{"title":"Search ads​","type":1,"pageTitle":"Search ads and self-promotion","url":"general/ad-filtering/search-ads/#search-ads","content":"Search ads are ads that you see among search query results when using online search engines, such as Google, Bing, DuckDuckGo, etc.  These ads are always contextual: they are targeted to match the keywords you used in the query. This helps you find exactly what you are searching for. Moreover, search ads (because they go through manual moderation) are often more relevant and helpful than the rest of the search results. Another argument in defense of search ads is that they are much less intrusive than many other ad formats. "},{"title":"What is websites' self-promotion?​","type":1,"pageTitle":"Search ads and self-promotion","url":"general/ad-filtering/search-ads/#what-is-websites-self-promotion","content":"In principle, when an ad on a website promotes this particular website or closely related websites, social media, and so on, such an ad is considered a self-promoting one.  Our general stance here is very similar to the EasyList policy regarding self-promotion ads. According to our filter policy, we should not block these ads; however, we should not make an exception if such an ad gets blocked by some rule 'alongside' a regular ad. Partly, this is due to ethical reasons, but mostly because such ads are rarely too intrusive and are often useful for the visitor of the website (who is supposedly interested in this website's content). By enabling 'Search ads and self-promotion', AdGuard users can unblock some of these self-promotion ads. "},{"title":"What ads are on the list?​","type":1,"pageTitle":"Search ads and self-promotion","url":"general/ad-filtering/search-ads/#what-ads-are-on-the-list","content":"When you enable 'Search ads and self-promotion', search ads from the following search engines are shown: GoogleYahooBingAskYandexDuckDuckGoStartPage As well as all self-promotional ads that satisfy our filter policy. "},{"title":"Summary​","type":1,"pageTitle":"Search ads and self-promotion","url":"general/ad-filtering/search-ads/#summary","content":"Allowing 'Search ads and self-promotion' is a 100% optional feature that may be helpful in some cases. If you don't like it, you can turn it off at any time. It does not, and never will, include any ad types or individual ads that do not fall into one of the two categories described above. "},{"title":"Tracking filter rules statistics","type":0,"sectionRef":"#","url":"general/ad-filtering/tracking-filter-statistics/","content":"","keywords":""},{"title":"Why do we need ad filters?​","type":1,"pageTitle":"Tracking filter rules statistics","url":"general/ad-filtering/tracking-filter-statistics/#why-do-we-need-ad-filters","content":"Let's start by defining what ad filters are. Thanks to these filters, AdGuard removes ads from websites. They are manually compiled based on your complaints about ads on websites. Ad filters are an essential element of AdGuard — their quality determines the overall quality of AdGuard ad blocking. However, there is a downside. Over the years, more and more ad filters have been appearing. And the more ad filters are there, the more memory AdGuard consumes, thus slowing down the rendering of web pages. At the same time, some of the filters start to expire, gradually becoming a dead weight that has no use, only consumes memory, and slows down the program. "},{"title":"Why do we need statistics?​","type":1,"pageTitle":"Tracking filter rules statistics","url":"general/ad-filtering/tracking-filter-statistics/#why-do-we-need-statistics","content":"We want to solve the problem of outdated filtering rules once and for all. But we need your help to do so. By gathering statistics on used filtering rules, we detect and remove the rules that are no longer used. As a result, it will help all those who use AdGuard. If your computer is powerful enough, it won’t really affect you. But the difference will be very noticeable for users of low-power netbooks or tablets. "},{"title":"What kind of statistics will be sent?​","type":1,"pageTitle":"Tracking filter rules statistics","url":"general/ad-filtering/tracking-filter-statistics/#what-kind-of-statistics-will-be-sent","content":"If you enable the Send statistics for ad filters usage option, the following information is sent periodically: Extension versionBrowser type (Chrome/Firefox/Opera/Yandex.Browser/Safari).List of enabled ad filters.The list that consists of the following elements: The domain name of the websiteThe number of recent page viewsThe list of filtering rules and Filter ID which were activated on this websiteThe domain name of blocked requests is sent for URL rules The list is created based on the website's visit statistics since the last time statistical data was sent. The collected statistics will be sent periodically to our server for analysis and filter optimization. It's important to note that all the statistics we get are averaged and anonymized. We don't use these statistics for any purpose other than optimizing the filters, and we do not sell this data to third parties. You can read about our Privacy Policy here. "},{"title":"What does tracking filter rules statistics fraught with?​","type":1,"pageTitle":"Tracking filter rules statistics","url":"general/ad-filtering/tracking-filter-statistics/#what-does-tracking-filter-rules-statistics-fraught-with","content":"For the vast majority of users, the change in computer speed will not be really noticeable. However, netbook and tablet users may notice a slight slowdown. Periodically, we will send the gathered statistics to the server. The size of the transmitted data is not very large and is comparable to the size of an average web page. "},{"title":"Browsing Security","type":0,"sectionRef":"#","url":"general/browsing-security/","content":"","keywords":""},{"title":"How does a check work?​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#how-does-a-check-work","content":"The scope and methods of checks depend on the product you use. In our browser extensions, AdGuard inspects only the pages you visit. In AdGuard for Windows, Mac, or Android, we offer you the best possible protection by checking both the pages and all objects loaded on them. "},{"title":"AdGuard for Windows, Mac, and Android​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#adguard-for-windows-mac-and-android","content":"We use the protocol Safe Browsing API version 2.2 for our work with filters. This protocol allows us to keep your personal data absolutely safe. Our server knows nothing about the websites that you visit. We use hash prefixes for checks, not the opened URLs. The figure below provides a general understanding of how the Browsing Security module works, using AdGuard for Windows as an example.  "},{"title":"AdGuard Browser extensions​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#adguard-browser-extensions","content":"Browser extensions work differently, using the so-called Lookup API to check the pages you visit. Every time you visit any website, your local client exchanges information with our backend server in the form of hashes and hash prefixes. For those interested in the process at a deeper level, the link above will be helpful. As a result of that exchange, the local client determines if the website belongs to the database of potentially dangerous websites or not. We bring to your attention that we never get any information that could allow us to determine which websites you visit and use that data in any way. An approximate algorithm of the functioning of the Browsing Security module is shown in the picture below.  "},{"title":"AdGuard filters​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#adguard-filters","content":"We currently maintain two AdGuard filters. One protects against phishing and fraudulent websites. The other protects against malicious websites, visiting which may lead to a virus infection. "},{"title":"Phishing sites filter​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#phishing-sites-filter","content":"Phishing is a type of online fraud aimed at gaining access to confidential data of users — username and password. If you are interested in this topic, we suggest that you read this article at Wikipedia. Apart from phishing sites, this filter also covers different fraudulent sites, including all kinds of scams, sales of nonexistent content, and such. "},{"title":"Malicious sites filter​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#malicious-sites-filter","content":"This filter contains links to pages that lead to the execution of malicious code. It can initiate leakage or loss of data or harm the device of a user. It can be authorized (for example, when downloading and running the executable file) or unauthorized (for example, when being attacked with spyware). "},{"title":"How do we fill up our filters?​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#how-do-we-fill-up-our-filters","content":"Our filters are constantly filled with new addresses. Since most of the work is automated, you can be sure that new malware and phishing addresses fall into our database as quickly as possible. "},{"title":"AdGuard Browsing Security Community​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#adguard-browsing-security-community","content":"An important tool for maintaining the highest level of filtering is AdGuard Browsing Security Community. Any user of our products — be it AdGuard for Windows or our browser extension — can become a member of the community and help us in the making of AdGuard filters. In the picture below we described an algorithm of Browsing Security Community work:  "},{"title":"Want to help?​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#want-to-help","content":"We will gladly accept any help! If you want to send us a complaint about a phishing or malware site, you can do it via technical support at support@adguard.com or on our forum. "},{"title":"False-positive responses​","type":1,"pageTitle":"Browsing Security","url":"general/browsing-security/#false-positive-responses","content":"Occasionally, some non-malicious websites get added to AdGuard's filters. We do our best to reduce the percentage of false positives, but they still occur. If you come across this behavior from AdGuard, please send us a complaint about the false-positive alarm. You can submit such complaints via our technical support at support@adguard.com or on our forum. "},{"title":"How to install AdGuard","type":0,"sectionRef":"#","url":"general/how-to-install/","content":"How to install AdGuard Depending on which AdGuard app or browser extension you want to install, follow one of these links to find the relevant article: AdGuard für Android AdGuard für iOS AdGuard für Windows AdGuard für Mac AdGuard Browsererweiterung AdGuard für Safari AdGuard-Inhaltsblocker","keywords":""},{"title":"Known issues","type":0,"sectionRef":"#","url":"general/https-filtering/known-issues/","content":"","keywords":""},{"title":"Known issues​","type":1,"pageTitle":"Known issues","url":"general/https-filtering/known-issues/#known-issues","content":"HTTPS filtering in AdGuard has its drawbacks. Almost all of them are scheduled to be eliminated in the next few AdGuard versions. All the issues known to us and the ETAs on their fixes are listed below. "},{"title":"Inspecting the original certificate​","type":1,"pageTitle":"Known issues","url":"general/https-filtering/known-issues/#inspecting-the-original-certificate","content":"The most important drawback of the HTTPS filtering mechanism is that it hides the real certificate of a website. You cannot simply check its original certificate because you can only see the one issued by AdGuard. This problem is solved in Browser Assistant. This browser extension helps you manage filtering directly from the browser and allows you to inspect the original certificate of any website. "},{"title":"Certificate Transparency​","type":1,"pageTitle":"Known issues","url":"general/https-filtering/known-issues/#certificate-transparency","content":"Thanks to modern cryptography, browsers can usually detect malicious websites that are provisioned with forged or fake SSL certificates. However, current cryptographic mechanisms aren’t so good at detecting malicious websites if they’re provisioned with mistakenly issued certificates or certificates that have been issued by a certificate authority (CA) that’s been compromised or gone rogue. Certificate Transparency aims to remedy these certificate-based threats by making the issuance and existence of SSL certificates open to scrutiny by domain owners, CAs, and domain users. AdGuard products which use CoreLibs starting with version 1.11 will implement a policy based on Chrome Certificate Transparency Policy. "},{"title":"Have remarks or suggestions?​","type":1,"pageTitle":"Known issues","url":"general/https-filtering/known-issues/#have-remarks-or-suggestions","content":"If you’d like to add something, report any errors, or ask a question, please contact us at: devteam@adguard.com. "},{"title":"Local.adguard.org domain","type":0,"sectionRef":"#","url":"general/https-filtering/local-adguard-com-domain/","content":"","keywords":""},{"title":"Technical explanation​","type":1,"pageTitle":"Local.adguard.org domain","url":"general/https-filtering/local-adguard-com-domain/#technical-explanation","content":"But what's going on and why is it done? Please read the technical explanation below. AdGuard is a network-level content blocker so it cannot simply add custom JavaScript and CSS to webpages like what browser extensions do. However, doing this is crucial for quality content blocking.In order to do it AdGuard injects a &quot;content script&quot; that looks like this: &lt;script src=&quot;https://local.adguard.org/.../content-script.js&quot;&gt;. This &quot;content script&quot; takes care of cosmetic filtering, hides or removes ad content from the web pages.Connections to the IP address of the local.adguard.org domain are intercepted by AdGuard on the network level and processed locally. This is why that domain has a &quot;static&quot; IP address that does not change for years. Why do we need to use a real IP address for that? We cannot use 127.0.0.1 as the browsers won't accept it.Using some IP address from the private subnets is possible, but this solution has two downsides. First, there is a slight chance of intersecting with an existing intranet service and breaking access to it.Second, some DNS servers may consider this a DNS rebinding attack and refuse to respond to local.adguard.org. "},{"title":"Verification​","type":1,"pageTitle":"Local.adguard.org domain","url":"general/https-filtering/local-adguard-com-domain/#verification","content":"This is easy to verify. If you disable AdGuard, you'll see that it is simply impossible to establish connection to local.adguard.org since there is no server with that address. Just try opening it in your browser when AdGuard is disabled. "},{"title":"What is HTTPS filtering","type":0,"sectionRef":"#","url":"general/https-filtering/what-is-https-filtering/","content":"","keywords":""},{"title":"What is HTTPS?​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#what-is-https","content":"HTTPS (HyperText Transfer Protocol Secure) is an extension of the HTTP protocol that supports encryption to increase security. This protocol is used to securely transmit valuable information like personal data, credit card details, etc. Using HTTPS is highly advantageous because encrypted traffic is protected against eavesdropping by a third party, and we can only welcome this. HTTPS acceptance has been growing in recent years, mainly because it is encouraged by Google and also due to the emergence of a free certificate authority Let’s Encrypt. The diagram below describes the difference between plain HTTP protocol and secure HTTPS protocol.  "},{"title":"What is a security certificate?​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#what-is-a-security-certificate","content":"Simply put, HTTPS means data encryption. But there’s still a problem: how can you be sure that you’ve established an encrypted connection with the right website? That’s where security certificates come into play. A certificate serves as proof that the website is really what it tells you it is. If a website doesn’t have such a certificate, or if the certificate contains incorrect information, the browser will not allow you to establish a secure connection. It is important that the certificate a website uses is issued by a certificate authority (CA) trusted by your browser. Such a CA guarantees that the SSL certificate is, indeed, issued to the website’s owner. "},{"title":"Why does AdGuard need to be able to filter HTTPS?​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#why-does-adguard-need-to-be-able-to-filter-https","content":"Most websites are now using HTTPS, and the same applies to advertising. Here are a few popular websites where you can’t remove ads without HTTPS filtering: youtube.com, facebook.com, and twitter.com. "},{"title":"How does HTTPS filtering work?​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#how-does-https-filtering-work","content":"If it were easy, HTTPS wouldn’t be that secure. When a browser attempts to connect to a server, AdGuard establishes two secure connections: one with the browser (or another app) and the other with the server. The browser must trust AdGuard and the connections it creates. For this purpose, AdGuard generates a special (and unique) root certificate and installs it into the system and, when it is required, into some browsers (e.g., Firefox). Thus, AdGuard can see what is happening inside the secure connection and do its job — block ads and trackers. For better understanding we depicted this process:  "},{"title":"Does my traffic remain encrypted and secure?​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#does-my-traffic-remain-encrypted-and-secure","content":"Of course! Your connection with a remote server remains encrypted and secure. AdGuard, just like your browser, checks the server’s certificate before deciding whether to filter it or not. However, HTTPS filtering has its drawbacks. The most important one is that it hides from the browser the actual certificate of the website. Instead, the browser sees the certificate issued by AdGuard. Because of this, we have taken additional measures to improve connection security. "},{"title":"Financial websites and websites with sensitive personal data​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#financial-websites-and-websites-with-sensitive-personal-data","content":"By default, AdGuard doesn’t filter any information on websites of banks, payment systems, or websites with valuable personal data. We maintain a list of thousands of exclusions. If you believe some website should be added to this list, please let us know. "},{"title":"Extended Validation (EV) certificates​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#extended-validation-ev-certificates","content":"AdGuard allows you to disable filtering for all websites that use extended validation certificates. An EV certificate offers a higher level of security and provides more guarantees than a regular certificate, proving that the website is not fraudulent or fake. "},{"title":"Problems related to HTTPS filtering​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#problems-related-to-https-filtering","content":"A 2017 study shows that 5 to 10% of HTTPS connections are established by HTTPS-filtering applications. It is usually done by various kinds of antivirus software. The bad news is that 24 out of 26 tested antiviruses reduced, in various ways, the connection security level, while two-thirds created connections prone to hacking. The researchers came to a simple conclusion: the Internet security community should pay close attention to applications that filter secure connections. And the developers of such software must pay serious attention to the quality of filtering implementations. We would like to note that AdGuard was not tested in the above study. We ran estimates according to their set of tests, and at the time of testing, we could have received the maximum score – A*. However, this score is not perfect. During the study, the researchers identified some issues that were omitted in the final evaluation. Here at AdGuard, we fully agree with those conclusions. Moreover, we would like to be as open with users as possible and talk about the problems we are currently experiencing and the steps we are taking to improve the quality and security of the filtering mechanism. The list of these problems is sorted by priority. Most of the problems discovered in the above study are related to certificate validation mechanisms. This is what we want to focus on first. We are working on a separate certificate validation library. Moreover, we want to make it open source. A separate article lists all the known drawbacks of HTTPS filtering in AdGuard and our plans to fix them. HTTPS filtering issues on Android 7+​ Starting from Android 7, developers have to explicitly indicate that their apps trust user-installed certificates. Not everyone wants to, or bothers with it. What does it mean for AdGuard? AdGuard installs a user certificate to be able to filter HTTPS traffic. If an app doesn't trust this certificate, its HTTPS traffic will not be filtered. What to do? The first thing worth mentioning is that many apps (even modern ones) still trust user certificates. Nothing has changed in this regard. Almost all browsers also trust such certificates. There may be some exotic browsers that do not, but they are a rare exception to common practice. Finally, if your device is rooted, you can move the AdGuard certificate to the system storage. This way, you don't have to worry about any permissions a particular app may or may not have — HTTPS traffic will be filtered for modern apps just as well as for older ones. Please keep in mind that in this case, some additional security restrictions (e.g., HPKP or Expect-CT) apply to AdGuard. "},{"title":"How to manually check HTTPS quality?​","type":1,"pageTitle":"What is HTTPS filtering","url":"general/https-filtering/what-is-https-filtering/#how-to-manually-check-https-quality","content":"There are several dedicated websites where you can check the quality of your HTTPS connection. These websites check if your browser (or, in our case, your browser plus AdGuard) is susceptible to common vulnerabilities. If you plan to use any program that filters HTTPS, not necessarily AdGuard (e.g., an antivirus), we advise that you check the connection quality on these websites. https://www.ssllabs.com/ssltest/viewMyClient.htmlhttps://www.howsmyssl.com/https://badssl.com/ "},{"title":"Wie man aktiviert","type":0,"sectionRef":"#","url":"general/license/activation/","content":"","keywords":""},{"title":"How to activate a license​","type":1,"pageTitle":"Wie man aktiviert","url":"general/license/activation/#how-to-activate-a-license","content":"Um Ihre Lizenz zu aktivieren, gehen Sie zum Abschnitt Lizenz Ihres AdGuard-Produkts und suchen Sie das Feld Anmelden oder die Schaltfläche Aktivieren . Verwenden Sie die E-Mail und das Passwort Ihres AdGuard-Kontos, um sich anzumelden. Wenn Sie noch kein Konto haben, wird Ihnen angeboten, eines zu erstellen. Note: To activate a license via the AdGuard account, a valid license with at least one free slot is required. If your license is already used on a maximum number of devices, you can upgrade it or transfer it from one device to another. Alternativ können Sie auch einen Lizenzschlüssel verwenden, um die Lizenz zu aktivieren. Nachstehend finden Sie eine schrittweise Anleitung zur Aktivierung für jede Plattform. "},{"title":"Aktivieren von AdGuard für Windows​","type":1,"pageTitle":"Wie man aktiviert","url":"general/license/activation/#aktivieren-von-adguard-für-windows","content":"Öffnen Sie die AdGuard-App To do it, double-click the AdGuard icon on the desktop:  or double-click the AdGuard icon in the system tray:  Gehen Sie im Menü der App auf die Registerkarte Lizenz und klicken Sie auf Lizenz aktivieren  Es werden Ihnen zwei Optionen zum Aktivieren angeboten: Durch Eingabe von E-Mail und Passwort von Ihrem AdGuard-Konto (oder von Ihrem Facebook-, Google- oder Apple-Konto)  Über die Eingabe eines Lizenzschlüssels  "},{"title":"Aktivieren von AdGuard für Mac​","type":1,"pageTitle":"Wie man aktiviert","url":"general/license/activation/#aktivieren-von-adguard-für-mac","content":"Öffnen Sie die AdGuard-App (klicken Sie auf das AdGuard-Symbol in der Menüleiste)  Klicken Sie auf das Zahnradsymbol in der oberen rechten Ecke.Klicken Sie auf Lizenz...  Drücken Sie im geöffneten Fenster die Schaltfläche Aktivieren  Es werden Ihnen zwei Optionen zun Aktivieren angeboten: Durch Eingabe von E-Mail und Passwort von Ihrem AdGuard-Konto (oder von Ihrem Facebook-, Google- oder Apple-Konto)  Über die Eingabe eines Lizenzschlüssels  "},{"title":"Aktivieren von AdGuard für Android​","type":1,"pageTitle":"Wie man aktiviert","url":"general/license/activation/#aktivieren-von-adguard-für-android","content":"Öffnen Sie die AdGuard-AppTippen Sie auf das Menüsymbol (☰) in der oberen linken Ecke des Bildschirms.Tippen Sie auf die Leiste Premium abrufen (oder auf Lizenzstatus)  Tippen Sie auf Drei-Punkte-Menü (⋮) in der oberen rechten Ecke des Bildschirms  Drücken Sie Premium-Version aktivieren, und Sie erhalten zwei Aktivierungsoptionen: Durch Eingabe von E-Mail und Passwort von Ihrem AdGuard-Konto (oder von Ihrem Facebook- oder Google-Konto)  Über die Eingabe eines Lizenzschlüssels  "},{"title":"Aktivieren von AdGuard für iOS​","type":1,"pageTitle":"Wie man aktiviert","url":"general/license/activation/#aktivieren-von-adguard-für-ios","content":"Öffnen Sie die AdGuard-App und tippen Sie auf das Zahnradsymbol in der unteren rechten Ecke des Bildschirms Tippen Sie auf Lizenz Tippen Sie auf Anmelden in der oberen rechten Ecke des Bildschirms  Geben Sie E-Mail und Passwort von Ihrem AdGuard-Konto  "},{"title":"How to cancel/refund","type":0,"sectionRef":"#","url":"general/license/cancel-refund/","content":"","keywords":""},{"title":"Wie man ein Abonnement kündigt​","type":1,"pageTitle":"How to cancel/refund","url":"general/license/cancel-refund/#wie-man-ein-abonnement-kündigt","content":"Das Abonnement kann in Ihrem AdGuard-Konto gekündigt werden. To cancel your subscription: Go to your AdGuard account Go to Licenses tab Click Cancel subscription below the subscription you no longer need Das gekündigte Abonnement bleibt bis zu seinem Ablaufdatum gültig. Im App Store gekaufte Abonnements können im App Store-Konto oder in den Einstellungen des Geräts verwaltet werden. "},{"title":"Wie man eine Erstattung erhält​","type":1,"pageTitle":"How to cancel/refund","url":"general/license/cancel-refund/#wie-man-eine-erstattung-erhält","content":"In Übereinstimmung mit unseren Verkaufsbedingungen können Sie eine 100%ige Rückerstattung für den AdGuard-Lizenzschlüssel erhalten, den Sie unter https://adguard.com erworben haben. To get a refund, contact our support team at support@adguard.com and specify the payment option you've used. A refund may be declined if: a license was purchased more than 60 days ago,a license was purchased from a distributor,a license was purchased from the App Store,you applied for a partial refund for a license key upgrade or renewal. "},{"title":"Altlizenzen: FAQ","type":0,"sectionRef":"#","url":"general/license/legacy/","content":"","keywords":""},{"title":"Über die veralteten Lizenzen​","type":1,"pageTitle":"Altlizenzen: FAQ","url":"general/license/legacy/#über-die-veralteten-lizenzen","content":"Ursprünglich waren Lizenzen der folgenden Typen verfügbar, um AdGuard-Produkte zu aktivieren: Standard – für Desktop-Anwendungen AdGuard für Windows/AdGuard für Mac Mobile — für mobile Apps AdGuard für Android/AdGuard für iOS Premium – eine Lizenz, die Desktop- und mobile Apps kombiniert Standard- und Mobile-Lizenzen können für 1 bis 9 Geräte erworben werden. Standard galt nur für Desktops und Mobile nur für Smartphones und Tablets. Premium-Lizenzen hätten auf 2-18 Geräten verwendet werden können. Abhängig von der Anzahl der beim Kauf ausgewählten Geräte konnten Sie AdGuard gleichzeitig auf einer gleichen Anzahl von Computern und Mobilgeräten aktivieren: 2+2, 3+3 usw. Beispielsweise könnten Sie eine Premium-Lizenz für 2+2 Geräte gehabt haben, d. h. die Lizenz könnte auf 2 Computern und 2 Telefonen/Tablets installiert werden. Oder beispielsweise für 9+9 (insgesamt 18 Geräte) könnte die Lizenz auf 9 Computern und 9 Telefonen/Tablets installiert werden. Für alle Typen (Standard, Mobil, Premium) gab es Optionen für eine Jahres- und Lebenslange Lizenz. Im Oktober 2019 hat AdGuard auf das neue Lizenzierungssystem umgestellt: Seitdem können Lizenzen weiterhin für 1 Jahr oder auf Lebenszeit erworben werden, aber die Lizenztypen sind nun Einzellizenz (für bis zu 3 Geräte) oder Familienlizenz (für bis zu 9 Geräte). Eine weitere Änderung: Lizenzschlüssel des neuen Typs können jetzt auf jedem Gerät und in jeder Kombination verwendet werden. Beispielsweise kann eine Einzellizenz auf Android, Mac und iOS installiert werden, genauso wie auf zwei Windows-Computern und einem Apple-Tablet usw. "},{"title":"Was ist mit den veralteten Lizenzen passiert?​","type":1,"pageTitle":"Altlizenzen: FAQ","url":"general/license/legacy/#was-ist-mit-den-veralteten-lizenzen-passiert","content":"Standard-Lizenzen wurden automatisch universell gemacht, was bedeutet, dass sie auf beliebigen Geräten aktiviert werden können. Mobile Lizenzen blieben unverändert und plattformbeschränkt (sie können weiterhin nur auf Telefonen oder Tablets verwendet werden). Premium-Lizenzen blieben ebenfalls unverändert und plattformbeschränkt. Und obwohl Premium-Lizenzen jetzt in Ihrem persönlichen Konto nach der Gesamtzahl der Geräte angezeigt werden, können sie immer noch nur gleichermaßen auf Desktop- und Mobilgeräten aktiviert werden. So sieht zum Beispiel die Taste 1+1 aus:  Aber trotz der Gesamtzahl der Geräte (2) kann es auf 1 Desktop und 1 Mobilgerät aktiviert werden. Alle veralteten Lizenzen haben ein „Legacy“-Abzeichen im AdGuard-Konto. Und sie werden automatisch in einen neuen Typ umgewandelt, wenn Sie sie entweder erneuern oder erweitern. Aber es gibt einige Nuancen. Sehen wir uns an, welche Lizenzen in einen neuen Typ umgewandelt werden können und wie das geht. "},{"title":"Ich habe einen veralteten (Legacy) Schlüssel. Welche Erneuern/Erweitern-Optionen stehen mir zur Verfügung?​","type":1,"pageTitle":"Altlizenzen: FAQ","url":"general/license/legacy/#ich-habe-einen-veralteten-legacy-schlüssel-welche-erneuernerweitern-optionen-stehen-mir-zur-verfügung","content":"Sie können dies auf der Verlängerungsseite oder in Ihrem AdGuard-Konto überprüfen:  Gehen Sie zur Registerkarte „Meine Lizenzen“ und prüfen Sie, welche Aktionen Ihnen für jeden bestimmten Schlüssel zur Verfügung stehen. Im Folgenden erläutern wir dies anhand konkreter Beispiele. "},{"title":"Lizenzen für 1/2/3 Geräte​","type":1,"pageTitle":"Altlizenzen: FAQ","url":"general/license/legacy/#lizenzen-für-123-geräte","content":"Jährliche Lizenzen für 1, 2, 3 Geräte können entweder in Einzel- oder Familien-Lizenz umgewandelt werden:  Wählen Sie aus, wie viele Geräte Sie schützen möchten. Anstelle einer Erneuerung können Sie auf Lebenslange Lizenz umsteigen:  Lebenslange Lizenzen können aufgrund technischer Einschränkungen nur in Familienlizenz (9 Geräte) umgewandelt werden:  "},{"title":"Lizenzen für 4+ Geräte (bis zu 9)​","type":1,"pageTitle":"Altlizenzen: FAQ","url":"general/license/legacy/#lizenzen-für-4-geräte-bis-zu-9","content":"Jährliche Schlüssel dieser Konfiguration können nur in eine Familienlizenz umgewandelt werden:  Lebenslange Lizenzen für 4 oder mehr Geräte können aufgrund technischer Einschränkungen nicht aktualisiert werden:  "},{"title":"Lizenzen für 9+ Geräte​","type":1,"pageTitle":"Altlizenzen: FAQ","url":"general/license/legacy/#lizenzen-für-9-geräte","content":"Premium-Schlüssel (5+5 und mehr) und benutzerdefinierte Schlüssel für 10+ Geräte, die Sie individuell mit Hilfe unserer Manager erworben haben. Da es sich hierbei um Einzelfälle handelt, wenden Sie sich bitte an partners@adguard.com, wenn Sie Ihre Lizenz auf Lebenslange erweitern möchten. Abhängig von der konkreten Konfiguration Ihrer Lizenz machen wir Ihnen ein spezielles Angebot. "},{"title":"How to purchase/upgrade","type":0,"sectionRef":"#","url":"general/license/payment-options/","content":"","keywords":""},{"title":"How to purchase a license​","type":1,"pageTitle":"How to purchase/upgrade","url":"general/license/payment-options/#purchase","content":"Sie können eine AdGuard-Lizenz auf adguard.com erwerben. AdGuard Pro für iOS kann im App Store gekauft werden. Werbeblocker-Lizenzen werden auch von verschiedenen Distributoren verkauft. Die Verfügbarkeit von AdGuard-Produkten in App Stores und bei Distributoren hängt von Ihrem Land ab. "},{"title":"How to upgrade a license​","type":1,"pageTitle":"How to purchase/upgrade","url":"general/license/payment-options/#upgrade","content":"To make more use of your AdGuard products, you can upgrade your license for the following benefits. Um den Funktionsumfang Ihrer AdGuard-Produkte zu erweitern, können Sie Ihre kostenlose oder Testlizenz auf die Vollversion erweitern.To extend the number of devices, you can upgrade your Personal license to a Family one.You can also upgrade your subscription to a Lifetime license. Sie können Ihre Lizenz auch aktualisieren, indem Sie: purchasing another license on the official AdGuard website,clicking the Upgrade to Lifetime and/or Increase device limit in your AdGuard account:  "},{"title":"How to transfer","type":0,"sectionRef":"#","url":"general/license/transfer/","content":"","keywords":""},{"title":"How to transfer a license to another device​","type":1,"pageTitle":"How to transfer","url":"general/license/transfer/#transfer","content":"The license key can be activated on a limited number of devices. If the key has already been used on the maximum allowed number of devices, you need to unbind a device from your account. "},{"title":"How to unbind a device​","type":1,"pageTitle":"How to transfer","url":"general/license/transfer/#how-to-unbind-a-device","content":"There are three ways to do it: by clicking the Reset license button (can be done only in AdGuard desktop apps)by logging out of your account in an AdGuard productby removing the device in your AdGuard account: Click AdGuard Ad Blocker in your AdGuard account In the license card, click the device you want to unbind Click Remove  After you have unbound the number of devices you need, you can log in to your AdGuard account on new devices. The license will be bound to them. "},{"title":"How to transfer a license to another AdGuard account​","type":1,"pageTitle":"How to transfer","url":"general/license/transfer/#transferaccount","content":"Go to the AdGuard account that contains the license you would like to transferGo to the Licenses tabFind the license you want to transfer and click Unbind from account Click Unbind (Important: be sure to note/remember the license key) Go to the AdGuard account that you would like to transfer the license toGo to the Licenses tabClick Bind license in the upper right corner Enter your license key (from step 3) In case you can't access your initial account, please contact our support team at support@adguard.com. "},{"title":"Was eine AdGuard-Lizenz ist","type":0,"sectionRef":"#","url":"general/license/what-is/","content":"","keywords":""},{"title":"Was ist eine AdGuard-Lizenz?​","type":1,"pageTitle":"Was eine AdGuard-Lizenz ist","url":"general/license/what-is/#was-ist-eine-adguard-lizenz","content":"Eine Lizenz ist die Erlaubnis zur Nutzung des AdGuard-Produkts, die in Übereinstimmung mit der Endbenutzer-Lizenzvereinbarung bereitgestellt wird. AdGuard-Lizenzen existieren in Form von Lizenzschlüsseln, Aktivierungscodes und Produktkarten im AdGuard-Konto des Benutzers. Einige Lizenzen müssen erworben werden (z. B. Einzellizenz von AdGuard Werbeblocker), andere sind kostenlos und zeitlich begrenzt (z. B. Testlizenzen von AdGuard-Apps) oder haben einen eingeschränkten Funktionsumfang (z. B. AdGuard für iOS oder AdGuard Browsererweiterung). Hier ist die Liste aller Arten von AdGuard Werbeblocker-Lizenzen. Testlizenzen sind kostenlose zeitlich begrenzte Lizenzen mit vollem Funktionsumfang: AdGuard für Windows – 14-tägige Testversion, AdGuard für Mac – 14-tägige Testversion, AdGuard für Android – 7-tägige Testversion.Kostenlose Lizenzen sind nicht zeitlich begrenzt, haben aber eingeschränkte Funktionalität: AdGuard Browsererweiterung, AdGuard Inhaltsblocker, AdGuard für iOS.Abonnements sind kostenpflichtige Lizenzen, die jeden Monat oder jedes Jahr automatisch erneuert werden. Sie können auch manuell erneuert werden. AdGuard Werbeblocker Monatliches Abonnement, AdGuard Werbeblocker 1-Jahres-Abonnement.Lizenzen, die von Distributoren erworben wurden und geschenkte Lizenzen, sind zeitlich begrenzt und können nicht automatisch verlängert werden. Sie können jedoch manuell erneuert werden: AdGuard Werbeblocker Monatliche Lizenz, AdGuard Werbeblocker 1-Jahres-Lizenz.Lebenslange Lizenzen sind nicht zeitlich begrenzt und haben den vollen Funktionsumfang: AdGuard Werbeblocker Lebenslang, AdGuard Pro für iOS. "},{"title":"Wie viele Geräte können hinzugefügt werden​","type":1,"pageTitle":"Was eine AdGuard-Lizenz ist","url":"general/license/what-is/#devices","content":"Unterschiedliche Lizenzen können mit einer unterschiedlichen Anzahl von Geräten verwendet werden: Einzellizenz: bis zu drei Geräte,Familienlizenz: bis zu neun Geräte,AdGuard Pro für iOS: ein Gerät. Um Ihre Lizenz auf einem Gerät zu verwenden, melden Sie sich bei Ihrem AdGuard-Konto an. Um das Gerätelimit zu erweitern, können Sie Ihre Lizenz erweitern. "},{"title":"Was ist ein Lizenzschlüssel​","type":1,"pageTitle":"Was eine AdGuard-Lizenz ist","url":"general/license/what-is/#license-key","content":"Ein Lizenzschlüssel ist eine eindeutige Zeichenfolge, die eine AdGuard-Werbeblocker-Lizenz darstellt. Es wird automatisch für die E-Mail-Adresse registriert, die Sie für den Lizenzkauf verwendet haben. Mit einem Lizenzschlüssel können Sie: sich bei einigen Produkten (z. B. AdGuard für Windows) bei Ihrem AdGuard-Konto anmelden,Ihre Lizenz in einem Produkt aktivieren, wenn Sie kein AdGuard-Konto haben,eine Lizenz an Ihr AdGuard-Konto binden und die Bindung aufheben. Wenn Sie eine Lizenz aufheben, sollten Sie den Lizenzschlüssel vorher aufschreiben oder auf andere (sichere) Weise notieren. Sie benötigen den Schlüssel, um Ihre Lizenz neu zu binden oder sie auf ein anderes Konto zu übertragen. "},{"title":"Wie man einen Lizenzschlüssel wiederherstellt​","type":1,"pageTitle":"Was eine AdGuard-Lizenz ist","url":"general/license/what-is/#wie-man-einen-lizenzschlüssel-wiederherstellt","content":"In Ihrem AdGuard-Konto können Sie ganz einfach überprüfen, welche Lizenzschlüssel Ihnen gehören. Der Lizenzschlüssel ist über die E-Mail-Adresse, die Sie beim Kauf von AdGuard verwendet haben, an Ihr Konto gebunden. Bitte beachten Sie, dass es oft nicht ausreicht, nur herauszufinden, was Ihr Lizenzschlüssel ist. Wenn es bereits auf einem anderen Computer verwendet wurde, muss es über das AdGuard-Konto von diesem Computer getrennt werden, bevor es erneut verwendet werden kann. "},{"title":"How to create your own ad filters","type":0,"sectionRef":"#","url":"general/ad-filtering/create-own-filters/","content":"","keywords":""},{"title":"Comments​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#comments","content":"Any line that starts with an exclamation mark is a comment. In the list of rules it is displayed in gray color. AdGuard will ignore this line, so you can write anything you want. Comments are usually placed above the rules and used to describe what a rule does. Zum Beispiel: ! This is the comment. Under this line there is an actual filtering rule. ||example.org^  "},{"title":"Examples​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#examples","content":"Blocking by domain name​  This rule blocks: http://example.org/ad1.gifhttp://subdomain.example.org/ad1.gifhttps://ads.example.org:8000/ This rule does not block: http://ads.example.org.us/ad1.gifhttp://example.com/redirect/http://ads.example.org/ Blocking exact address​  This rule blocks: http://example.org/ This rule does not block: https://example.org/banner/img Basic rule modifiers​ Filtering rules support numerous modifiers that allow you to fine-tune the rule behavior. Here is an example of a rule with some simple modifiers.  This rule blocks: http://example.org/script.js if this script is loaded from example.com. This rule does not block: https://example.org/script.js if this script is loaded from example.org.https://example.org/banner.png because it is not a script. Unblocking an address​  This rule unblocks: http://example.org/banner.png even if there is a blocking rule for this address. Blocking rules with $important modifier can override exceptions. Unblocking everything on a website​  This rule unblocks It disables all cosmetic rules on example.com.It unblocks all requests sent from this website even if there is are blocking rules matching these requests. Cosmetic rule​  Cosmetic rules are based on using a special language named CSS, which every browser understands. Basically, it adds a new CSS style to the website which purpose is to hide particular elements. You can learn more about CSS in general here. AdGuard extends CSS and lets filters developers handle much more complicated cases. However, to use these extended rules, you need to be fluent in regular CSS. Popular CSS selectors Name\tCSS selector\tDescriptionID selector\t#banners\tMatches all elements with id attribute equal to banners. Class selector\t.banners\tMatches all elements with class attribute containing banners. Attribute selector\tdiv[class=&quot;banners&quot;]\tMatches all div elements with class attribute exactly equal to banners. Attribute substring selector\tdiv[class^=&quot;advert1&quot;]\tMatches all div elements which class attribute starts with the advert1 string. Attribute substring selector\tdiv[class$=&quot;banners_ads&quot;]\tMatches all div elements which class attribute ends with the banners_ads string. Attribute substring selector\ta[href^=&quot;http://example.com/&quot;]\tMatches all links that are loaded from http://example.com/ domain. Attribute selector\ta[href=&quot;http://example.com/&quot;]\tMatches all links to exactly the http://example.com/ address.  "},{"title":"Restrictions​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#restrictions","content":"Trusted filters​ Some rules can be used only in trusted filters. This category includes: filter lists created by the AdGuard team,custom filter lists installed as trusted,user rules. "},{"title":"Basic rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rules","content":"The most simple rules are so-called Basic rules. They are used to block requests to specific URLs. Or to unblock it, if there is a special marker &quot;@@&quot; at the beginning of the rule. The basic principle for this type of rules is quite simple: you have to specify the address and additional parameters that limit or expand the rule scope. Sub-requests Basic rules for blocking requests are applied only to sub-requests. That means they will not block the loading of the page. Response status Browser detects a blocked request as completed with an error. "},{"title":"Basic rules syntax​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rules-syntax","content":" rule = [&quot;@@&quot;] pattern [ &quot;$&quot; modifiers ] modifiers = [modifier0, modifier1[, ...[, modifierN]]]  pattern — an address mask. Every request URL is collated to this mask. You can also use special characters in the template, their description is below. Note that AdGuard trims URLs to a length of 4096 characters in order to speed up matching and avoid issues with ridiculously long URLs.@@ — a marker that is used in rules of exception. To turn off filtering for a request, start your rule with this marker.modifiers — parameters that &quot;clarify&quot; the basic rule. Some of them limit the rule scope and some can completely change they way it works. "},{"title":"Special characters​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rules-special-characters","content":"* — a wildcard character. It is used to represent &quot;any set of characters&quot;. This can also be an empty string or a string of any length.|| — matching the beginning of an address. With this character you do not have to specify a particular protocol and subdomain in address mask. It means, || stands for http://*., https://*., ws://*., wss://*. at once.^ — a separator character mark. Separator character is any character, but a letter, a digit, or one of the following: _ - . %. In this example separator characters are shown in bold: http://example.com/?t=1&amp;t2=t3. The end of the address is also accepted as separator.| — a pointer to the beginning or the end of address. The value depends on the character placement in the mask. For example, a rule swf| corresponds to http://example.com/annoyingflash.swf , but not to http://example.com/swf/index.html. |http://example.org corresponds to http://example.org, but not to http://domain.com?url=http://example.org. Visual representation We also recommend to get acquainted with this article, for better understanding of how such rules should be made. "},{"title":"Regular expressions support​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#regexp-support","content":"If you want even more flexibility in making rules, you can use Regular expressions instead of a default simplified mask with special characters. Performance Rules with regular expressions work more slowly, therefore it is recommended to avoid them or to limit their scope to specific domains. If you want a blocker to determine a regular expression, the pattern has to look like this: pattern = &quot;/&quot; regexp &quot;/&quot;  For example, /banner\\d+/$third-party this rule will apply the regular expression banner\\d+ to all third-party requests. Exclusion rule with regular expression looks like this: @@/banner\\d+/. Compatibility with different versions of AdGuard AdGuard Safari and AdGuard for iOS do not fully support regular expressions because of Content Blocking API restrictions (look for &quot;The Regular expression format&quot; section). "},{"title":"Wildcard support for TLD (top-level domains)​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#wildcard-for-tld","content":"Wildcard characters are supported for TLDs of the domains in patterns of cosmetic, HTML filtering and JavaScript rules. For cosmetic rules, e.g. example.*##.banner, multiple domains are matched due to the part .*, i.e. example.com, sub.example.net, example.co.uk, etc. For basic rules the described logic is applicable only for the domains specified in $domain modifier, e.g. ||*/banners/*$image,domain=example.*. Compatibility with different versions of AdGuard In AdGuard for Windows, Mac, Android, and AdGuard Browser extension rules with wildcard .* match any public suffix (or eTLD). But for AdGuard for Safari and iOS the supported list of top-level domains is limited due to Safari limitations. Rules with wildcard for TLD are not supported by AdGuard Content Blocker. "},{"title":"Basic rules examples​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rules-examples","content":"||example.com/ads/* — a simple rule, which corresponds to addresses like http://example.com/ads/banner.jpg and even http://subdomain.example.com/ads/otherbanner.jpg. ||example.org^$third-party — this rule blocks third-party requests to example.org and its subdomains. @@||example.com$document — general exception rule. It completely disables filtering for example.com and all subdomains. There is a number of modifiers which can be used in exception rules. For more details, please follow the link below. "},{"title":"Basic rules modifiers​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#basic-rules-modifiers","content":"Basic modifiersContent type modifiersException modifiers Note The features described in this section are intended for experienced users. They extend capabilities of &quot;Basic rules&quot;, but in order to use them you need to have a basic understanding of the way your browser works. You can change the behavior of a &quot;basic rule&quot; by using additional modifiers. Modifiers should be located in the end of the rule after a $ sign and be separated by commas. Example: ||domain.com^$popup,third-party  Basic modifiers​ $app$denyallow$domain$header$important$match-case$method$popup$third-party$to The following modifiers are the most simple and frequently used. Basically, they just limit the scope of rule application. $app​ This modifier lets you narrow the rule coverage down to a specific application (or a list of applications). This might be not too important on Windows and Mac, but this is very important on mobile devices where some of the filtering rules must be app-specific. Android — use the app package name, e.g. org.example.app.Windows — use the process name, e.g. chrome.exe. Note that the process name is case-insensitive starting with CoreLibs v1.12.Mac — use the bundle ID or the process name, e.g. com.google.Chrome. For Mac, you can find out the bundle ID or the process name of the app by viewing the respective request details in the Filtering log. Examples ||baddomain.com^$app=org.example.app — a rule to block requests that match the specified mask and are sent from the org.example.app Android app.||baddomain.com^$app=org.example.app1|org.example.app2 — the same rule but it works for both org.example.app1 and org.example.app2 apps. If you want the rule not to be applied to certain apps, start the app name with the ~ sign. ||baddomain.com^$app=~org.example.app — a rule to block requests that match the specified mask and are sent from any app save for the org.example.app.||baddomain.com^$app=~org.example.app1|~org.example.app2 — same as above, but now two apps are excluded: org.example.app1 and org.example.app2. Compatibility with different versions of AdGuard Only AdGuard for Windows, Mac, Android are technically capable of using rules with $app modifier. $denyallow​ $denyallow modifier allows to avoid creating additional rules when it is needed to disable a certain rule for specific domains. $denyallow matches only target domains and not referrer domains. Adding this modifier to a rule is equivalent to excluding the domains by the rule's matching pattern or to adding the corresponding exclusion rules. To add multiple domains to one rule, use the | character as a separator. Restrictions The rule's matching pattern cannot target any specific domains, e.g. it cannot start with ||.Domains in the modifier value cannot be negated, e.g. $denyallow=~x.com, or have a wildcard TLD, e.g. $denyallow=x.*. The rules which violate these restrictions are considered invalid. Examples This rule: *$script,domain=a.com|b.com,denyallow=x.com|y.com  is equivalent to this one: /^(?!.*(x.com|y.com)).*$/$script,domain=a.com|b.com  or to the combination of these three: *$script,domain=a.com|b.com @@||x.com$script,domain=a.com|b.com @@||y.com$script,domain=a.com|b.com  Compatibility with different versions of AdGuard Rules with $denyallow modifier are not supported by AdGuard Content Blocker. $domain​ $domain limits the rule scope to requests made from the specified domains and their subdomains (as indicated by the Referer HTTP header). To add multiple domains to one rule, use the | character as a separator. Examples Just $domain: ||baddomain.com^$domain=example.org blocks requests that match the specified mask, and are sent from domain example.org or its subdomains.||baddomain.com^$domain=example.org|example.com — the same rule, but it works for both example.org and example.com. If you want the rule not to be applied to certain domains, start a domain name with ~ sign. $domain and negation ~: ||baddomain.com^$domain=~example.org blocks requests matching the pattern sent from any domain except example.org and its subdomains.||baddomain.com^$domain=example.org|~foo.example.org blocks requests sent from example.org and its subdomains, except the subdomain foo.example.org. $domain modifier matching target domain: In some cases the $domain modifier can match not only the referrer domain, but also the target domain. This happens when all of the following is true: The request has document content type.The rule pattern does not match any particular domains.The rule pattern does not contain regular expressions.The $domain modifier contains only excluded domains, e.g. $domain=~example.org|~example.com. The following predicate should be satisfied to perform a target domain matching: 1 AND ((2 AND 3) OR 4)  That is, if the modifier $domain contains only excluded domains, then the rule does not need to meet the second and third conditions to match the target domain against the modifier $domain. If some of the conditions above are not met but the rule contains $cookie or $csp modifier, the target domain will still be matched. If the referrer matches a rule with $domain that explicitly excludes the referrer domain, then the rule will not be applied even if the target domain also matches the rule. This affects rules with $cookie and $csp modifiers, too. Examples *$cookie,domain=example.org|example.com will block cookies for all requests to and from example.org and example.com.*$document,domain=example.org|example.com will block all requests to and from example.org and example.com. In the following examples it is implied that requests are sent from http://example.org/page (the referrer) and the target URL is http://targetdomain.com/page. page$domain=example.org will be matched, as it matches the referrer domain.page$domain=targetdomain.com will be matched, as it matches the target domain and satisfies all requirements mentioned above.||*page$domain=targetdomain.com will not be matched, as the pattern ||*page may match specific domains, e.g. example.page.||*page$domain=targetdomain.com,cookie will be matched because the rule contains $cookie modifier despite the pattern ||*page may match specific domains./banner\\d+/$domain=targetdomain.com will not be matched as it contains a regular expression.page$domain=targetdomain.com|~example.org will not be matched because the referrer domain is explicitly excluded. Limitations Safari does not support the simultaneous use of allowed and disallowed domains, so rules like ||baddomain.com^$domain=example.org|~foo.example.org will not work in AdGuard for Safari. Compatibility with different versions of AdGuard Starting with CoreLibs v1.12, the $domain modifier can be alternatively spelled as $from. $header​ The $header modifier allows matching the HTTP response having a specific header with (optionally) a specific value. Syntax $header &quot;=&quot; h_name [&quot;:&quot; h_value] h_value = string / regexp  where: h_name — required, an HTTP header name. It is matched case-insesitively.h_value — optional, an HTTP header value matching expression, it may be one of the following: string — a sequence of characters. It is matched against the header value lexicographically;regexp — a regular expression, starts and ends with /. The pattern works the same way as in the basic URL rules, but the characters /, $ and , must be escaped with \\. The modifier &quot;:&quot; h_value part may be omitted. In that case the modifier matches the header name only. Compatibility with different versions of AdGuard Rules with the $header modifier are supported by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.11 or later. Examples ||example.com^$header=set-cookie:foo blocks requests whose responses have the Set-Cookie header with the value matching foo literally.||example.com^$header=set-cookie blocks requests whose responses have the Set-Cookie header with any value.@@||example.com^$header=set-cookie:/foo\\, bar\\$/ unblocks requests whose responses have the Set-Cookie header with value matching the foo, bar$ regular expression.@@||example.com^$header=set-cookie unblocks requests whose responses have a Set-Cookie header with any value. $important​ The $important modifier applied to a rule increases its priority over any other rule without $important modifier. Even over basic exception rules. Examples ! blocking rule will block all requests despite of the exception rule ||example.org^$important @@||example.org^  ! if the exception rule also has `$important` modifier, it will prevail and requests won't be blocked ||example.org^$important @@||example.org^$important  ! if a document-level exception rule is applied to the document, the `$important` modifier will be ignored; ! so if a request to `example.org` is sent from the `test.org` domain, the blocking rule will not be applied despite it has the `$important` modifier ||example.org^$important @@||test.org^$document  $match-case​ This modifier defines a rule which applies only to addresses that match the case. Default rules are case-insensitive. Examples */BannerAd.gif$match-case — this rule will block http://example.com/BannerAd.gif, but not http://example.com/bannerad.gif. $method​ This modifier limits the rule scope to requests that use the specified set of HTTP methods. Negated methods are allowed. The methods must be specified in all lowercase characters, but are matched case-insensitively. Examples ||evil.com^$method=get|head blocks only GET and HEAD requests to evil.com.||evil.com^$method=~post|~put blocks any requests except POST or PUT to evil.com. Compatibility with different versions of AdGuard $method is available starting with CoreLibs v1.12. $popup​ AdGuard will try to close the browser tab with any address that matches a blocking rule with this modifier. Please note that not all the tabs can be closed. Note It may not work if the popped up page is cached by the browser. Examples ||domain.com^$popup — if you try to go to http://domain.com/ from any page in the browser, a new tab in which specified site has to be opened will be closed by this rule. Compatibility with different versions of AdGuard $popup modifier works best in AdGuard Browser Extension.In AdGuard for Safari and iOS, $popup rules simply block the page right away.In AdGuard for Windows, Mac, and Android, $popup modifier may not detect a popup in some cases and it won't be blocked. $popup modifier applies the document content type with a special flag which is passed to a blocking page. Blocking page itself can do some checks and close the window if it is really a popup. Otherwise, page should be loaded. It can be combined with other request type modifiers, such as $third-party and $important. However, the blocking page may not detect a popup in some cases, so it is recommended to use the AdGuard Popup Blocker userscript instead. $third-party​ A restriction of third-party and own requests. A third-party request is a request from a different domain. For example, a request to example.org from domain.com is a third-party request. Note To be considered as such, a third-party request should meet one of the following conditions: 1. Its referrer is not a subdomain of the target domain or vice versa. For example, a request to subdomain.example.org from example.org is not a third-party request. 1. Its Sec-Fetch-Site header is set to cross-site. If there is a $third-party modifier, the rule is only applied to third-party requests. Examples $third-party: ||domain.com^$third-party — this rule applies to all domains, except domain.com and its subdomains. An example of a third-party request: http://example.org/banner.jpg. If there is a $~third-party modifier, the rule is only applied to the requests that are not from third parties. Which means, they have to be sent from the same domain. $~third-party: ||domain.com$~third-party — this rule is applied to domain.com, but not to the other domains. Example of a request that is not a third-party request: http://domain.com/icon.ico. $to​ $to limits the rule scope to requests made to the specified domains and their subdomains. To add multiple domains to one rule, use the | character as a separator. Examples /ads$to=evil.com|evil.org blocks any request to evil.com or evil.org and their subdomains with a path matching /ads./ads$to=~not.evil.com|evil.com blocks any request to evil.com and its subdomains, with a path matching /ads, except requests to not.evil.com and its subdomains./ads$to=~good.com|~good.org blocks any request with a path matching /ads, except requests to good.com or good.org and their subdomains. Compatibility with other modifiers $denyallow can not be used together with $to. It can be expressed with inverted $to: $denyallow=a.com|b.com is equivalent to $to=~a.com|~b.com. Compatibility with different versions of AdGuard $to is available starting with CoreLibs v1.12. Restriction by content type​ $document$font$image$media$object$other$ping$script$stylesheet$subdocument$websocket$xmlhttprequest$object-subrequest (deprecated)$webrtc (deprecated) There is a set of modifiers, which can be used to limit the rule's application area to certain type of content. These modifiers can also be combined to cover, for example, both images and scripts. Compatibility with different versions of AdGuard There is a big difference in how AdGuard determines the content type on different platforms. For AdGuard Browser extension, content type for every request is provided by browser. AdGuard for Windows, Mac, Android use following method: first we try to determine the type of the request by the Sec-Fetch-Dest request header or by the filename extension. If the request is not blocked at this stage, the type will be determined using the Content-Type header at the beginning of the server response. Content type modifiers examples ||example.org^$image — corresponds to all images from example.org.||example.org^$script,stylesheet — corresponds to all the scripts and styles from example.org.||example.org^$~image,~script,~stylesheet — corresponds to all requests to example.org except for the images, scripts and styles. $document​ The rule corresponds to the main frame document requests, i.e. HTML documents that are loaded in the browser tab. It does not match iframes, there is a $subdocument modifier for these. By default, AdGuard does not block the requests that are loaded in the browser tab (e.g. &quot;main frame bypass&quot;). The idea is not to prevent pages from loading as the user clearly indicated that they want this page to be loaded. However, if the $document modifier is specified explicitly, AdGuard does not use that logic and prevents the page load. Instead, it responds with a &quot;blocking page&quot;. If this modifier is used with an exclusion rule (@@), it completely disables blocking on corresponding pages. It is equivalent to using $elemhide, $content, $urlblock, $jsinject, and $extension modifiers simultaneously. Examples @@||example.com^$document completely disables filtering on all pages at example.com and all subdomains. @@||example.com^$document,~extension completely disables blocking on any pages at example.com and all subdomains, but continues to run userscripts there. ||example.com^$document blocks HTML document request to example.com with a blocking page. ||example.com^$document,redirect=noopframe redirects HTML document request to example.com to an empty html document. ||example.com^$document,removeparam=test removes test query parameter from HTML document request to example.com. ||example.com^$document,replace=/test1/test2/ replaces test1 with test2 in HTML document request to example.com. Compatibility with different versions of AdGuard Blocking rules with $document modifier are not supported by AdGuard Content Blocker. $font​ The rule corresponds to requests for fonts, e.g. .woff filename extension. $image​ The rule corresponds to images requests. $media​ The rule corresponds to requests for media files — music and video, e.g. .mp4 files. $object​ The rule corresponds to browser plugins resources, e.g. Java or Flash. $other​ The rule applies to requests for which the type has not been determined or does not match the types listed above. $ping​ The rule corresponds to requests caused by either navigator.sendBeacon() or the ping attribute on links. Compatibility with different versions of AdGuard AdGuard for Windows, Mac, and Android often cannot accurately detect navigator.sendBeacon(). For reliable detection, use AdGuard Browser Extension. $script​ The rule corresponds to script requests, e.g. javascript, vbscript. $stylesheet​ The rule corresponds to CSS files requests. $subdocument​ The rule corresponds to requests for built-in pages — HTML tags frame and iframe. Examples ||example.com^$subdocument blocks built-in page requests (frame and iframe) to example.com and all its subdomains anywhere.||example.com^$subdocument,domain=domain.com blocks built-in page requests (frame и iframe) to example.com (and its subdomains) from domain.com and all its subdomains. $websocket​ The rule applies only to WebSocket connections. Compatibility with different versions of AdGuard $websocket modifier is supported in all AdGuard products except AdGuard Content Blocker. As for AdGuard for Safari and AdGuard for iOS, it's supported on devices with macOS Monterey (version 12) and iOS 16 or higher. $xmlhttprequest​ The rule applies only to ajax requests (requests sent via javascript object XMLHttpRequest). Compatibility with different versions of AdGuard AdGuard for Windows, Mac, Android often cannot accurately detect this type and sometimes detects it as $other or $script. For reliable detection, use AdGuard Browser Extension. $object-subrequest (deprecated)​ Deprecation notice $object-subrequest modifier is deprecated and is no longer supported. Rules with it are considered as invalid. The rule corresponds to requests by browser plugins (it is usually Flash). $webrtc (deprecated)​ Deprecation notice This modifier is deprecated and is no longer supported. Rules with it are considered as invalid. If you need to suppress WebRTC, consider using the nowebrtc scriptlet. The rule applies only to WebRTC connections. Examples ||example.com^$webrtc,domain=example.org blocks webRTC connections to example.com for example.org.@@*$webrtc,domain=example.org disables the RTC wrapper for example.org. Exception modifiers​ $content$elemhide$extension$jsinject$specifichide$stealth$urlblockGeneric rules $genericblock$generichide Exception rules disable the other basic rules for the addresses to which they correspond. They begin with a @@ mark. All the basic modifiers listed above can be applied to them and they also have a few special modifiers. Visual representation We recommend to get acquainted with this article, for better understanding of how exception rules should be made. $content​ Disables HTML filtering and $replace rules on the pages that match the rule. Examples @@||example.com^$content disables all HTML filtering rules and replace rules on pages at example.com and all its subdomains. $elemhide​ Disables any cosmetic rules on the pages matching the rule. Examples @@||example.com^$elemhide disables all cosmetic rules on pages at example.com and all subdomains. $extension​ Disables all userscripts on the pages matching this rule. Examples @@||example.com^$extension — userscripts will not work on all pages of the example.com website. Compatibility with different versions of AdGuard Only AdGuard for Windows, Mac, Android are technically capable of using rules with $extension modifier. $jsinject​ Forbids adding of javascript code to the page. You can read about javascript rules further. Examples @@||example.com^$jsinject disables javascript on pages at example.com and all subdomains. specifichide​ Disables all specific element hiding and CSS rules, but not general ones. Has an opposite effect to $generichide. Examples @@||example.org^$specifichide disables example.org##.banner but not ##.banner. Note All cosmetic rules — not just specific ones — can be disabled by $elemhide modifier. Compatibility with different versions of AdGuard Rules with $specifichide modifier are supported by AdGuard for Windows, Mac, Android, and AdGuard Browser extension for Chrome, Firefox, Edge. $stealth​ Disables the Stealth Mode module for all corresponding pages and requests. Syntax $stealth [= opt1 [| opt2 [| opt3 [...]]]]  opt(i) stand for certain Stealth Mode options disabled by the modifier. The modifier can contain any number of options (see below) or not contain them at all. In the latter case the modifier disables all the Stealth Mode features. The list of the available modifier options: searchqueries disables Hide your search queries optiondonottrack disables Send Do-Not-Track header option3p-cookie disables Self-destructing third-party cookies option1p-cookie disables Self-destructing first-party cookies option3p-cache disables Disable cache for third-party requests option3p-auth disables Block third-party Authorization header optionwebrtc disables Block WebRTC optionpush disables Block Push API optionlocation disables Block Location API optionflash disables Block Flash optionjava disables Block Java optionreferrer disables Hide Referrer from third parties optionuseragent disables Hide your User-Agent optionip disables Hide your IP address optionxclientdata disables Remove X-Client-Data header from HTTP requests optiondpi disables Protect from DPI option Examples @@||example.com^$stealth disables Stealth Mode for example.com (and subdomains) requests, except for blocking cookies and hiding tracking parameters (see below).@@||domain.com^$script,stealth,domain=example.com disables Stealth Mode only for script requests to domain.com (and its subdomains) on example.com and all its subdomains.@@||example.com^$stealth=3p-cookie|dpi disables blocking third-party cookies and DPI fooling measures for example.com. Note Blocking cookies and removing tracking parameters is achieved by using rules with $cookie and $removeparam modifiers. Exception rules with only $stealth modifier will not do those things. If you want to completely disable all Stealth Mode features for a given domain, you need to include all three modifiers: @@||example.org^$stealth,removeparam,cookie Compatibility with different versions of AdGuard Stealth Mode is available in AdGuard for Windows, Mac, Android, and AdGuard Browser Extension. All other products will ignore the rules with $stealth modifier.$stealth modifier with specific options is supported by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.10 or later. $urlblock​ Disables blocking of all requests sent from the pages matching the rule. Examples @@||example.com^$urlblock — any requests sent from the pages at example.com and all subdomains are not going to be blocked. Generic rules​ Before we can proceed to the next modifiers, we have to make a definition of generic rules. The rule is generic if it is not limited to specific domains. Wildcard character * is supported as well. For example, these rules are generic: ###banner *###banner #@#.adsblock *#@#.adsblock ~domain.com###banner ||domain.com^ ||domain.com^$domain=~example.com  And these are not: domain.com###banner ||domain.com^$domain=example.com  $genericblock​ Disables generic basic rules on pages that correspond to exception rule. Examples @@||example.com^$genericblock disables generic basic rules on any pages at example.com and all subdomains. $generichide​ Disables all generic cosmetic rules on pages that correspond to the exception rule. Examples @@||example.com^$generichide disables generic cosmetic rules on any pages at example.com and its subdomains. "},{"title":"Advanced capabilities​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#advanced-capabilities","content":"$all$badfilter$cookie$csp$hls$inline-font$inline-script$jsonprune$network$permissions$redirect$redirect-rule$replace$removeparam$removeheadernoop$empty (deprecated)$mp4 (deprecated) These modifiers are able to completely change the behaviour of basic rules. $all​ $all modifier is made of $document, $popup, and $csp modifiers. E.g. rule ||example.org^$all is converting into such a set of rules: ||example.org^$document,popup ||example.org^$csp=script-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem: ||example.org^$csp=font-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem: ||example.org^  $badfilter​ The rules with the $badfilter modifier disable other basic rules to which they refer. It means that the text of the disabled rule should match the text of the $badfilter rule (without the $badfilter modifier). Examples ||example.com$badfilter disables ||example.com||example.com$image,badfilter disables ||example.com$image@@||example.com$badfilter disables @@||example.com||example.com$domain=domain.com,badfilter disables ||example.com$domain=domain.com Rules with $badfilter modifier can disable other basic rules for specific domains if they fulfill the following conditions: The rule has a $domain modifier.The rule does not have a negated domain ~ in $domain modifier value. In that case, the $badfilter rule will disable the corresponding rule for domains specified in both the $badfilter and basic rules. Please note that wildcard-TLD logic works here as well. Examples /some$domain=example.com|example.org|example.io is disabled for example.com by /some$domain=example.com,badfilter/some$domain=example.com|example.org|example.io is disabled for example.com and example.org by /some$domain=example.com|example.org,badfilter/some$domain=example.com|example.org and /some$domain=example.io are disabled completely by /some$domain=example.com|example.org|example.io,badfilter/some$domain=example.com|example.org|example.io is disabled completely by /some$domain=example.*,badfilter/some$domain=example.* is disabled for example.com and example.org by /some$domain=example.com|example.org,badfilter/some$domain=example.com|example.org|example.io is NOT disabled for example.com by /some$domain=example.com|~example.org,badfilter because the value of $domain modifier contains a negated domain Compatibility with different versions of AdGuard Rules with $badfilter modifier are not supported by AdGuard Content Blocker. $cookie​ The $cookie modifier completely changes rule behavior. Instead of blocking a request, this modifier makes AdGuard suppress or modify the Cookie and Set-Cookie headers. Multiple rules matching a single request In case if multiple $cookie rules match a single request, we will apply each of them one by one. Syntax $cookie [= name[; maxAge = seconds [; sameSite = strategy ]]]  where: name — optional, string or regular expression to match cookie name.seconds — number of seconds for current time to offset the expiration date of cookie.strategy — string for Same-Site strategy to make cookie use. For example, ||example.org^$cookie=NAME;maxAge=3600;sameSite=lax  every time AdGuard encounters a cookie called NAME in a request to example.org, it will do the following: Set its expiration date to current time plus 3600 secondsMakes the cookie use Same-Site &quot;lax&quot; strategy. Escaping special characters If regular expression name is used for matching, two characters must be escaped: comma , and dollar sign $. Use backslash \\ escape each of them. For example, escaped comma looks like this: \\,. Examples ||example.org^$cookie blocks all cookies set by example.org; this is an equivalent to setting maxAge=0$cookie=__cfduid blocks CloudFlare cookie everywhere$cookie=/__utm[a-z]/ blocks Google Analytics cookies everywhere||facebook.com^$third-party,cookie=c_user prevents Facebook from tracking you even if you are logged in $cookie rules are not affected by regular exception rules (@@) unless it is a $document exception. In order to disable a $cookie rule, the exception rule should also have a $cookie modifier. How it works: @@||example.org^$cookie unblocks all cookies set by example.org@@||example.org^$cookie=concept unblocks a single cookie named concept@@||example.org^$cookie=/^_ga_/ unblocks every cookie that matches the regular expression Limitations $cookie rules support a limited list of modifiers: $domain, $~domain, $important, $third-party, and $~third-party. Compatibility with different versions of AdGuard Rules with $cookie modifier are not supported by AdGuard Content Blocker, AdGuard for iOS and Safari. $csp​ This modifier completely changes the rule behavior. If it is applied to a rule, the rule will not block the matching request. Response headers will be modified instead. In order to use this type of rules, it is required to have the basic understanding of the Content Security Policy security layer. For the requests matching a $csp rule, we will strengthen response security policy by enhancing the content security policy, similar to the content security policy of the $csp modifier contents. $csp rules are applied independently from any other rule type. Other basic rules have no influence on it save for document-level exceptions (see the examples section below). Multiple rules matching a single request In case if multiple $csp rules match a single request, we will apply each of them. Syntax $csp value syntax is similar to the Content Security Policy header syntax. $csp value can be empty in the case of exception rules. See examples section below. Limitations There are a few characters forbidden in the $csp value: ,, $.$csp rules support limited list of modifiers: $domain, $important, $subdocument.Rules with report-* directives are considered invalid. Examples ||example.org^$csp=frame-src 'none' blocks all frames on example.org and its subdomains.@@||example.org/page/*$csp=frame-src 'none' disables all rules with the $csp modifier exactly matching frame-src 'none' on all the pages matching the rule pattern. For instance, the rule above.@@||example.org/page/*$csp disables all the $csp rules on all the pages matching the rule pattern.||example.org^$csp=script-src 'self' 'unsafe-eval' http: https: disables inline scripts on all the pages matching the rule pattern.@@||example.org^$document or @@||example.org^$urlblock disables all the $csp rules on all the pages matching the rule pattern. Compatibility with different versions of AdGuard Rules with $csp modifier are not supported by AdGuard Content Blocker, AdGuard for iOS and Safari. $hls​ $hls rules modify the response of a matching request. They are intended as a convenient way to remove segments from HLS playlists (RFC 8216). Note The word &quot;segment&quot; in this document means either a &quot;Media Segment&quot; or a &quot;playlist&quot; as part of a &quot;Master Playlist&quot;: $hls rules do not distinguish between a &quot;Master Playlist&quot; and a &quot;Media Playlist&quot;. Syntax ||example.org^$hls=urlpattern removes segments whose URL matches the URL pattern urlpattern. The pattern works just like the one in basic URL rules, however, the characters /, $ and , must be escaped with \\ inside urlpattern.||example.org^$hls=/regexp/options removes segments where the URL or one of the tags (for certain options, if present) is matched by the regular expression regexp. Available options are: t — instead of testing the segment's URL, test each of the segment's tags against the regular expression. A segment with a matching tag is removed;i — make the regular expression case-insensitive. The characters /, $ and , must be escaped with \\ inside regexp. Exceptions Basic URL exceptions shall not disable rules with $hls modifier. They can be disabled as described below: @@||example.org^$hls disables all $hls rules for responses from URLs matching ||example.org^.@@||example.org^$hls=text disables all $hls rules with the value of the $hls modifier equal to text for responses from URLs matching ||example.org^. $hls rules can also be disabled by $document, $content and $urlblock exception rules. Restrictions $hls rules are only allowed in trusted filters$hls rules are not compatible with any other modifiers except $domain, $third-party, $app, $important, $match-case, and $xmlhttprequest$hls rules only apply to HLS playlists, which are UTF-8 encoded text starting with the line #EXTM3U. Any other response will not be modified by these rules$hls rules do not apply if the size of the original response is more than 3 MB Note When multiple $hls rules match the same request, their effect is cumulative. Examples ||example.org^$hls=\\/videoplayback^?*&amp;source=dclk_video_ads removes all segments with the matching URL.||example.org^$hls=/\\/videoplayback\\/?\\?.*\\&amp;source=dclk_video_ads/i achieves more or less the same with a regular expression instead of a URL pattern.||example.org^$hls=/#UPLYNK-SEGMENT:.*\\,ad/t removes all segments which have the matching tag. Anatomy of an HLS playlist A quick summary of the specification: An HLS playlist is a collection of text lines.A line may be empty, a comment (starts with #), a tag (also starts with #, can only be recognized by name) or a URL.A URL line is called a &quot;segment&quot;.Tags may apply to a single segment, i.e. the first URL line after the tag, to all segments following the tag and until the tag with the same name, or to the whole playlist. Some points specific to the operation of $hls rules: When a segment is removed, all of the tags that apply only to that segment are also removed.When there is a tag that applies to multiple segments, and all of those segments are removed, the tag is also removed.Since there is no way to recognize different kinds of tags by syntax, we recognize all of the tags specified by the RFC, plus some non-standard tags that we have seen in the field. Any lines starting with # and not recognized as a tag are passed through without modification, and are not matched against the rules.We do not match tags that apply to the whole playlist, and $hls rules can not be used to remove them, since $hls rules are intended for removing segments. If you know what you are doing, you can use $replace rules to remove or rewrite just a single tag from the playlist. An example of a transformation done by the rules: Original response #EXTM3U #EXT-X-TARGETDURATION:10 #EXTINF,5 preroll.ts #UPLYNK-SEGMENT:abc123,ad #UPLYNK-KEY:aabb1122 #EXT-X-DISCONTINUITY #EXTINF,10 01.ts #EXTINF,10 02.ts #UPLYNK-SEGMENT:abc123,segment #UPLYNK-KEY:ccdd2233 #EXT-X-DISCONTINUITY #EXTINF,10 01.ts #EXTINF,10 02.ts #EXT-X-ENDLIST  Applied rules ||example.org^$hls=preroll ||example.org^$hls=/#UPLYNK-SEGMENT:.*\\,ad/t  Modified response #EXTM3U #EXT-X-TARGETDURATION:10 #UPLYNK-SEGMENT:abc123,segment #UPLYNK-KEY:ccdd2233 #EXT-X-DISCONTINUITY #EXTINF,10 01.ts #EXTINF,10 02.ts #EXT-X-ENDLIST  Compatibility with different versions of AdGuard Rules with the $hls modifier are supported by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.10 or later. $inline-script​ $inline-script modifier is a sort of a shortcut for $csp modifier with specific value. E.g. the rule ||example.org^$inline-script is converting into such a rule: ||example.org^$csp=script-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:  $inline-font​ $inline-font modifier is a sort of a shortcut for $csp modifier with specific value. E.g. the rule ||example.org^$inline-font is converting into such a rule: ||example.org^$csp=font-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:  $jsonprune​ $jsonprune rules modify the response to a matching request by removing JSON items that match a modified JSONPath expression. They do not modify responses which are not valid JSON documents. In AdGuard for Windows, Mac, and Android running CoreLibs v1.11 or later, $jsonprune also supports modifying JSONP (padded JSON) documents. Syntax ||example.org^$jsonprune=expression removes items that match the modified JSONPath expression expression from the response. Due to the way rule parsing works, the characters $ and , must be escaped with \\ inside expression. The modified JSONPath syntax has the following differences from the original: Script expressions are not supported.The supported filter expressions are: ?(has &lt;key&gt;) — true if the current object has the specified key.?(key-eq &lt;key&gt; &lt;value&gt;) — true if the current object has the specified key, and its value is equal to the specified value.?(key-substr &lt;key&gt; &lt;value&gt;) — true if the specified value is a substring of the value of the specified key of the current object. Whitespace outside of double- or single-quoted strings has no meaning.Both double- and single-quoted strings can be used.Expressions ending with .. are not supported.Multiple array slices can be specified in square brackets. There are various online tools that make working with JSONPath expressions more convenient: https://www.site24x7.com/tools/jsonpath-finder-validator.html https://jsonpathfinder.com/ https://jsonpath.com/ Keep in mind, though, that all JSONPath implementations have unique features/quirks and are subtly incompatible with each other. Exceptions Basic URL exceptions shall not disable rules with $jsonprune modifier. They can be disabled as described below: @@||example.org^$jsonprune disables all $jsonprune rules for responses from URLs matching ||example.org^.@@||example.org^$jsonprune=text disable all $jsonprune rules with the value of the $jsonprune modifier equal to text for responses from URLs matching ||example.org^. $jsonprune rules can also be disabled by $document, $content and $urlblock exception rules. Restrictions $jsonprune rules are not compatible with any other modifiers except $domain, $third-party, $app, $important, $match-case, and $xmlhttprequest.$jsonprune rules do not apply if the size of the original response is more than 3 MB. Note When multiple $jsonprune rules match the same request, they are sorted in lexicographical order, the first rule is applied to the original response, and each of the remaining rules is applied to the result of applying the previous one. Compatibility with different versions of AdGuard Rules with the $jsonprune modifier are supported by AdGuard for Windows, Mac and Android, running CoreLibs version 1.10 or later. Examples ||example.org^$jsonprune=\\$..[one\\, &quot;two three&quot;] removes all occurrences of the keys &quot;one&quot; and &quot;two three&quot; anywhere in the JSON document. Input { &quot;one&quot;: 1, &quot;two&quot;: { &quot;two three&quot;: 23, &quot;four five&quot;: 45 } }  Output { &quot;two&quot;: { &quot;four five&quot;: 45 } }  ||example.org^$jsonprune=\\$.a[?(has ad_origin)] removes all children of a that have an ad_origin key. Input { &quot;a&quot;: [ { &quot;ad_origin&quot;: &quot;https://example.org&quot;, &quot;b&quot;: 42 }, { &quot;b&quot;: 1234 } ] }  Output { &quot;a&quot;: [ { &quot;b&quot;: 1234 } ] }  ||example.org^$jsonprune=\\$.*.*[?(key-eq 'Some key' 'Some value')] removes all items that are at nesting level 3 and have a property &quot;Some key&quot; equal to &quot;Some value&quot;. Input { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: {&quot;Some key&quot;: &quot;Some value&quot;}, &quot;d&quot;: {&quot;Some key&quot;: &quot;Other value&quot;}}}, &quot;e&quot;: {&quot;f&quot;: [{&quot;Some key&quot;: &quot;Some value&quot;}, {&quot;Some key&quot;: &quot;Other value&quot;}]} }  Output { &quot;a&quot;: {&quot;b&quot;: {&quot;d&quot;: {&quot;Some key&quot;: &quot;Other value&quot;}}}, &quot;e&quot;: {&quot;f&quot;: [{&quot;Some key&quot;: &quot;Other value&quot;}]} }  Nested JSONPath expressions In AdGuard for Windows, Mac and Android running CoreLibs v1.11 or later, JSONPath expressions may be used as keys in filter expressions. ||example.org^$jsonprune=\\$.elems[?(has &quot;\\$.a.b.c&quot;)] removes all children of elems which have a property selectable by the JSONPath expression $.a.b.c. Input { &quot;elems&quot;: [ { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: 123}}, &quot;k&quot;: &quot;v&quot; }, { &quot;d&quot;: {&quot;e&quot;: {&quot;f&quot;: 123}}, &quot;k1&quot;: &quot;v1&quot; } ] }  Output { &quot;elems&quot;: [ { &quot;d&quot;: {&quot;e&quot;: {&quot;f&quot;: 123}}, &quot;k1&quot;: &quot;v1&quot; } ] }  ||example.org^$jsonprune=\\$.elems[?(key-eq &quot;\\$.a.b.c&quot; &quot;abc&quot;)] removes all children of elems which have a property selectable by the JSONPath expression $.a.b.c with a value equal to &quot;abc&quot;. Input { &quot;elems&quot;: [ { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: 123}}, }, { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: &quot;abc&quot;}} } ] }  Output { &quot;elems&quot;: [ { &quot;a&quot;: {&quot;b&quot;: {&quot;c&quot;: 123}} } ] }  $network​ This is basically a Firewall-like rule allowing to fully block or unblock access to a specified remote address. $network rules match IP addresses only! You cannot use them to block or unblock access to a domain.To match an IPv6 address, you have to use the collapsed syntax, e.g. use [2001:4860:4860::8888]$network instead of [2001:4860:4860:0:0:0:0:8888]$network.An allowlist $network rule makes AdGuard bypass data to the matching endpoint, e.g. there will be no further filtering at all.If the IP part starts and ends with / character, it is treated as a regular expression. We recommend to get acquainted with this article, for better understanding of regular expressions. Examples 174.129.166.49:3478^$network blocks access to 174.129.166.49:3478 (but not to 174.129.166.49:34788).[2001:4860:4860::8888]:443^$network blocks access to [2001:4860:4860::8888]:443.174.129.166.49$network blocks access to 174.129.166.49:*.@@174.129.166.49$network makes AdGuard bypass data to the endpoint. No other rules will be applied./.+:3[0-9]{4}/$network blocks access to any port from 30000 to 39999./8.8.8.(:?8|4)/$network blocks access to both 8.8.8.8 and 8.8.8.4. Compatibility with different versions of AdGuard Only AdGuard for Windows, Mac, Android are technically capable of using rules with $network modifier. $permissions​ This modifier completely changes the rule behavior. If it is applied to a rule, the rule will not block the matching request. Response headers will be modified instead. In order to use this type of rules, it is required to have a basic understanding of the Permissions Policy security layer. For the requests matching a $permissions rule, AdGuard strengthens response's permissions policy by adding an additional permission policy equal to the $permissions modifier contents. $permissions rules are applied independently from any other rule type. Other basic rules have no influence on it save for document-level exceptions (see the examples section). Multiple rules matching a single request. In case if multiple $permissions rules match a single request, AdGuard will apply each of them. Syntax $permissions value syntax is similar to the Permissions-Policy header syntax with one exception: comma that separates several features MUST be escaped — see examples below. The list of the available directives is available here. $permissions value can be empty in the case of exception rules — see examples below. Limitations Characters forbidden in the $permissions value: $;$permissions is compatible with the limited list of modifiers: $domain, $important, and $subdocument. Examples ||example.org^$permissions=sync-xhr=() disallows synchronous XMLHttpRequest requests across example.org.@@||example.org/page/*$permissions=sync-xhr=() disables all rules with the $permissions modifier exactly matching sync-xhr=() on all the pages matching the rule pattern. For instance, the rule above.@@||example.org/page/*$permissions disables all the $permissions rules on all the pages matching the rule pattern.$domain=example.org|example.com,permissions=oversized-images=()\\, sync-script=()\\, unsized-media=() disallows oversized images, synchronous scripts and unsized media features across example.org and example.com.@@||example.org^$document or @@||example.org^$urlblock disables all the $permission rules on all the pages matching the rule pattern. Compatibility with different versions of AdGuard Rules with the $permissions modifier are supported by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.11 or later. $redirect​ AdGuard is able to redirect web requests to a local &quot;resource&quot;. Syntax AdGuard uses the same filtering rules syntax as uBlock Origin. Also, it is compatible with ABP $rewrite=abp-resource modifier. $redirect is a modifier for the basic filtering rules so rules with this modifier support all other basic modifiers like $domain, $third-party, $script, etc. The value of the $redirect modifier must be the name of the resource that will be used for redirection. $redirect rules' priority is higher than the regular basic blocking rules' priority. This means that if there is a basic blocking rule (even with $important modifier), $redirect rule will prevail over it. If there is an allowlist (@@) rule matching the same URL, it will disable redirecting as well (unless the $redirect rule is also marked as $important). Disabling $redirect rules​ ||example.org/script.js$script,redirect=noopjs — this rule redirects all requests to example.org/script.js to the resource named noopjs.||example.org/test.mp4$media,redirect=noopmp4-1s — this rule redirects all requests to example.org/test.mp4 to the resource named noopmp4-1s.@@||example.org^$redirect will disable all $redirect rules for URLs that match ||example.org^.@@||example.org^$redirect=nooptext will disable all rules with $redirect=nooptext for any request that matches ||example.org^. More information on redirects and their usage is available on GitHub. Compatibility with different versions of AdGuard Rules with $redirect modifier are not supported by AdGuard Content Blocker, AdGuard for iOS and Safari. $redirect-rule​ This is basically an alias to $redirect since it has the same &quot;redirection&quot; values and the logic is almost similar. The difference is that $redirect-rule is applied only in the case when the target request is blocked by a different basic rule. Negating $redirect-rule works exactly the same way as for regular $redirect rules. Even more than that, @@||example.org^$redirect will negate both $redirect and $redirect-rule rules. Examples ||example.org/script.js ||example.org^$redirect-rule=noopjs  In this case, only requests to example.org/script.js will be &quot;redirected&quot; to noopjs. All other requests to example.org will be kept intact. Compatibility with different versions of AdGuard Rules with $redirect-rule modifier are not supported by AdGuard Content Blocker, AdGuard for iOS and Safari. $removeheader​ Rules with $removeheader modifier are intended to remove headers from HTTP requests and responses. The initial motivation for this rule type is to be able to get rid of the Refresh header which is often used to redirect users to an undesirable location. However, this is not the only case where this modifier can be useful. Just like $csp, $redirect, $removeparam, and $cookie, this modifier exists independently, rules with it do not depend on the regular basic rules, i.e. regular exception or blocking rules will not affect it. By default, it only affects response headers. However, you can also change it to remove headers from HTTP requests as well. Syntax Basic syntax ||example.org^$removeheader=header-name removes a response header called header-name||example.org^$removeheader=request:header-name removes a request header called header-name $removeheader is case-insensitive, but we suggest always using lower case. Negating $removeheader This type of rules works pretty much the same way it works with $csp and $redirect modifiers. Use @@ to negate $removeheader: @@||example.org^$removeheader negates all $removeheader rules for URLs that match ||example.org^.@@||example.org^$removeheader=header negates the rule with $removeheader=header for any request matching ||example.org^. $removeheader rules can also be disabled by $document and $urlblock exception rules. But basic exception rules without modifiers will not do that. For example, @@||example.com^ will not disable $removeheader=p for requests to example.com, but @@||example.com^$urlblock will. Multiple rules matching a single request In case of multiple $removeheader rules matching a single request, we will apply each of them one by one. Restrictions This type of rules can be used only in trusted filters. In order to avoid compromising the security $removeheader cannot remove headers from the list below: access-control-allow-originaccess-control-allow-credentialsaccess-control-allow-headersaccess-control-allow-methodsaccess-control-expose-headersaccess-control-max-ageaccess-control-request-headersaccess-control-request-methodorigintiming-allow-originallowcross-origin-embedder-policycross-origin-opener-policycross-origin-resource-policycontent-security-policycontent-security-policy-report-onlyexpect-ctfeature-policyorigin-isolationstrict-transport-securityupgrade-insecure-requestsx-content-type-optionsx-download-optionsx-frame-optionsx-permitted-cross-domain-policiesx-powered-byx-xss-protectionpublic-key-pinspublic-key-pins-report-onlysec-websocket-keysec-websocket-extensionssec-websocket-acceptsec-websocket-protocolsec-websocket-versionp3psec-fetch-modesec-fetch-destsec-fetch-sitesec-fetch-userreferrer-policycontent-typecontent-lengthacceptaccept-encodinghostconnectiontransfer-encodingupgrade $removeheader rules are not compatible with any other modifiers except $domain, $third-party, $app, $important, $match-case, and content type modifiers, e.g. $script, $stylesheet, etc. The rules which have any other modifiers are considered invalid and will be discarded. Examples ||example.org^$removeheader=refresh removes Refresh header from all HTTP responses returned by example.org and its subdomains.||example.org^$removeheader=request:x-client-data removes X-Client-Data header from all HTTP requests.Next block of rules removes Refresh and Location headers from all HTTP responses returned by example.org save for requests to example.org/path/*, for which no headers will be removed: ||example.org^$removeheader=refresh ||example.org^$removeheader=location @@||example.org/path/$removeheader  Compatibility with different versions of AdGuard Rules with $removeheader modifier are supported by AdGuard for Windows, Mac, and Android, and AdGuard Browser extension for Chrome, Firefox, and Edge. $removeparam​ $queryprune is an alias of $removeparam. Since $queryprune is deprecated, avoid using it and use $removeparam instead. Rules with $removeparam modifier are intended to strip query parameters from requests' URLs. Please note that such rules are only applied to GET, HEAD, OPTIONS, and sometimes POST requests. $removeparam rules that do not have any content type modifiers will match only requests where content type is document. Syntax Basic syntax $removeparam=param removes query parameter with the name param from URLs of any request, e.g. a request to http://example.com/page?param=1&amp;another=2 will be transformed into http://example.com/page?another=2. $removeparam basic syntax is supported starting with v1.7 of CoreLibs and v3.6 of AdGuard Browser Extension. Regular expressions You can also use regular expressions to match query parameters and/or their values: $removeparam=/regexp/[options] — removes query parameters that matches the regexp regular expression from URLs of any request. Unlike basic syntax, it means &quot;remove query parameters normalized to a name=value string which match the regexp regular expression&quot;. [options] here is the list of regular expression options. At the moment, the only supported option is i which makes matching case-insensitive. $removeparam syntax for regular expressions will be supported starting with CoreLibs v1.8 and AdGuard Browser Extension v4.0. For now, use the simplified version: $removeparam=param. Escaping special characters Do not forget to escape special characters like ,, / and $ in the regular expressions. Use \\ character for that purpose. For example, an escaped comma should look like this: \\,. Note Regexp-type rules target both name and value of the parameter. To minimize mistakes, it is safer to start every regexp with /^ unless you specifically target parameter values. We will try to detect and ignore unescaped $ automatically using a simple rule of thumb: It is not an options delimiter if all three are true: 1. It looks like $/; 2. There is another slash character / to the left of it; 3. There is another unescaped dollar sign $ to the left of that slash character. Remove all query parameters Specify naked $removeparam to remove all query parameters: ||example.org^$removeparam — removes all query parameters from URLs matching ||example.org^. Inversion Use ~ to apply inversion: $removeparam=~param — removes all query parameters with the name different from param.$removeparam=~/regexp/ — removes all query parameters that do not match the regexp regular expression. Negating $removeparam This sort of rules work pretty much the same way it works with $csp and $redirect modifiers. Use @@ to negate $removeparam: @@||example.org^$removeparam negates all $removeparam rules for URLs that match ||example.org^.@@||example.org^$removeparam=param negates the rule with $removeparam=param for any request matching ||example.org^.@@||example.org^$removeparam=/regexp/ negates the rule with $removeparam=/regexp/ for any request matching ||example.org^. Multiple rules matching a single request In the case when multiple $removeparam rules match a single request, each of them will be applied one by one. Examples $removeparam=/^(utm_source|utm_medium|utm_term)=/ $removeparam=/^(utm_content|utm_campaign|utm_referrer)=/ @@||example.com^$removeparam  With these rules some UTM parameters will be stripped out from any request, except that requests to example.com will not be stripped at all, e.g. http://google.com/page?utm_source=s&amp;utm_referrer=fb.com&amp;utm_content=img will be transformed to http://google.com/page, but http://example.com/page?utm_source=s&amp;utm_referrer=fb.com&amp;utm_content=img will not be affected by the blocking rule. $removeparam=utm_source removes utm_source query parameter from all requests. $removeparam=/utm_.*/ — removes all utm_* query parameters from URL queries of any request, e.g. a request to http://example.com/page?utm_source=test will be transformed to http://example.com/page. $removeparam=/^utm_source=campaign$/ — removes utm_source query parameter with the value equal to campaign. It does not touch other utm_source parameters. Negating one $removeparam rule and replacing it with a different rule $removeparam=/^(gclid|yclid|fbclid)=/ @@||example.com^$removeparam=/^(gclid|yclid|fbclid)=/ ||example.com^$removeparam=/^(yclid|fbclid)=/  With these rules, Google, Yandex, and Facebook Click IDs will be removed from all requests. There is one exception: Google Click ID (gclid) will not be removed from requests to example.com. Negating $removeparam for all parameters $removeparam=/^(utm_source|utm_medium|utm_term)=/ $removeparam=/^(utm_content|utm_campaign|utm_referrer)=/ @@||example.com^$removeparam  With these rules, specified UTM parameters will be removed from any request save for requests to example.org. Compatibility with other modifiers $removeparam rules are compatible with basic modifiers, content type modifiers, and with $important and $app modifiers. The rules which have any other modifiers are considered invalid and will be discarded. Note $removeparam rules can also be disabled by $document and $urlblock exception rules. But basic exception rules without modifiers do not do that. For example, @@||example.com^ will not disable $removeparam=p for requests to example.com, but @@||example.com^$urlblock will. Compatibility with different versions of AdGuard​ Rules with $removeparam modifier are supported by AdGuard for Windows, Mac, and Android and AdGuard Browser Extension for Chrome, Firefox, and Edge. POST request types are supported only by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.10 or later. Restrictions Rules with $removeparam modifier can be used only in trusted filters. $replace​ This modifier completely changes the rule behavior. If it is applied, the rule will not block the request. The response is going to be modified instead. You will need some knowledge of regular expressions to use $replace modifier. Features $replace rules apply to any text response, but will not apply to binary (media, image, object, etc).$replace rules do not apply if the size of the original response is more than 3MB.$replace rules have a higher priority than other basic rules (including exception rules). So if a request corresponds to two different rules one of which has the $replace modifier, this rule will be applied.Document-level exception rules with $content or $document modifiers do disable $replace rules for requests matching them.Other document-level exception rules ($generichide, $elemhide or $jsinject modifiers) are applied alongside $replace rules. It means that you can modify the page content with a $replace rule and disable cosmetic rules there at the same time. $replace value can be empty in the case of exception rules. See examples section for further information. Multiple rules matching a single request In case if multiple $replace rules match a single request, we will apply each of them. The order is defined alphabetically. Syntax In general, $replace syntax is similar to replacement with regular expressions in Perl. replace = &quot;/&quot; regexp &quot;/&quot; replacement &quot;/&quot; modifiers  regexp — a regular expression.replacement — a string that will be used to replace the string corresponding to regexp.modifiers — a regular expression flags. For example, i — insensitive search, or s — single-line mode. In the $replace value, two characters must be escaped: comma , and dollar sign $. Use backslash \\ for it. For example, an escaped comma looks like this: \\,. Examples ||example.org^$replace=/(&lt;VAST[\\s\\S]*?&gt;)[\\s\\S]*&lt;\\/VAST&gt;/\\$1&lt;\\/VAST&gt;/i  There are three parts in this rule: regexp - (&lt;VAST(.|\\s)*?&gt;)(.|\\s)*&lt;\\/VAST&gt;;replacement — \\$1&lt;\\/VAST&gt; where $ is escaped;modifiers — i for insensitive search. You can see how this rule works here: http://regexr.com/3cesk Multiple $replace rules ||example.org^$replace=/X/Y/||example.org^$replace=/Z/Y/@@||example.org/page/*$replace=/Z/Y/ Both rule 1 and 2 will be applied to all requests sent to example.org.Rule 2 is disabled for requests matching ||example.org/page/, but rule 1 still works! Disabling $replace rules @@||example.org^$replace will disable all $replace rules matching ||example.org^.@@||example.org^$document or @@||example.org^$content will disable all $replace rules originated from pages of example.org including the page itself. Compatibility with different versions of AdGuard Rules with $replace modifier are supported by AdGuard for Windows, Mac, and Android and AdGuard Browser Extension for Firefox. Such rules do not work in extensions for other browsers because they are unable to modify content on the network level. Restrictions Rules with $replace modifier can be used only in trusted filters. noop​ noop modifier does nothing and can be used solely to increase rules' readability. It consists of a sequence of underscore characters (_) of any length and can appear in a rule as many times as needed. Examples ||example.com$_,removeparam=/^ss\\\\$/,_,image ||example.com$replace=/bad/good/,___,~third-party  Compatibility with different versions of AdGuard Rules with noop modifier are not supported by AdGuard Content Blocker. $empty (deprecated)​ Deprecation notice This modifier is deprecated in favor of the $redirect modifier. Rules with $empty are converting into $redirect=nooptext now. Usually, blocked requests look like a server error to browser. If you use $empty modifier, AdGuard will emulate a blank response from the server with200 OK status. Examples ||example.org^$empty returns an empty response to all requests to example.org and all subdomains. Compatibility with different versions of AdGuard Rules with $empty modifier are not supported by AdGuard Content Blocker, AdGuard for iOS and Safari. $mp4 (deprecated)​ Deprecation notice This modifier is deprecated in favor of the $redirect modifier. Rules with $mp4 are converting into $redirect=noopmp4-1s,media now. As a response to blocked request AdGuard returns a short video placeholder. Examples ||example.com/videos/$mp4 blocks all video downloads from ||example.com/videos/* and changes the response to a video placeholder. Compatibility with different versions of AdGuard Rules with $mp4 modifier are not supported by AdGuard Content Blocker, AdGuard for iOS and Safari. Non-basic rules However, the capabilities of the basic rules may not be sufficient to block ads. Sometimes you need to hide an element or change part of the HTML code of a web page without breaking anything. The rules described in this section are created specifically for this purpose. "},{"title":"Cosmetic rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#cosmetic-rules","content":"Work with non-basic rules requires the basic knowledge of HTML and CSS. So, if you want to learn how to make such rules, we recommend to get acquainted with this documentation. "},{"title":"Element hiding rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#cosmetic-elemhide-rules","content":"Element hiding rules are used to hide the elements of web pages. It is similar to applying { display: none; } style to selected element. Element hiding rules may operate differently depending on the platform. Syntax​  rule = [domains] &quot;##&quot; selector domains = [domain0, domain1[, ...[, domainN]]]  selector — CSS selector, defines the elements to be hidden.domains — domain restriction for the rule. If you want to limit the rule application area to certain domains, just enter them separated with commas. For example: example.org,example.com##selector. This rule will be also applied to all subdomains of example.org and example.com. If you want the rule not to be applied to certain domains, start a domain name with ~ sign. For example: ~example.org##selector. You can use both approaches in a single rule. For example, example.org,~subdomain.example.org##domain will work for example.org and all subdomains, except subdomain.example.org. Note Element hiding rules are not dependent on each other. If there is a rule example.org##selector in the filter and you add ~example.org##selector both rules will be applied independently. Examples example.com##div.textad — hides a div with a class textad at example.com and all subdomains.example.com,example.org###adblock — hides an element with attribute id equals adblock at example.com, example.org and all subdomains.~example.com##.textad — hides an element with a class textad at all domains, except example.com and its subdomains. Limitations Safari does not support both permitted and restricted domains. So the rules like example.org,~foo.example.org##.textad are invalid in AdGuard for Safari. Exceptions Exceptions can disable some rules on particular domains. They are very similar to usual exception rules, but instead of ## you have to use #@#. For example, there is a rule in filter: ##.textad  If you want to disable it for example.com, you can create an exception rule: example.com#@#.textad  Sometimes, it may be necessary to disable all restriction rules. For example, to conduct tests. To do this, use the exclusion rule without specifying a domain. It will completely disable matching CSS elemhide rule on ALL domains: #@#.textad  The same can be achieved by adding this rule: *#@#.textad  We recommend to use this kind of exceptions only if it is not possible to change the hiding rule itself. In other cases it is better to change the original rule, using domain restrictions. "},{"title":"CSS rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#cosmetic-css-rules","content":"Sometimes, simple hiding of an element is not enough to deal with advertising. For example, blocking an advertising element can just break the page layout. In this case AdGuard can use rules that are much more flexible than hiding rules. With this rules you can basically add any CSS styles to the page. Restrictions Styles that lead to loading any resource are forbidden. Basically, it means that you cannot use any &lt;url&gt; type of value in the style. Compatibility with different versions of AdGuard CSS rules are not supported by AdGuard Content Blocker. CSS rules may operate differently depending on the platform. Syntax  rule = [domains] &quot;#$#&quot; selector &quot;{&quot; style &quot;}&quot; domains = [domain0, domain1[, ...[, domainN]]]  selector — CSS selector, that defines the elements we want to apply the style to.domains — domain restriction for the rule. Same principles as in element hiding rules.style — CSS style, that we want to apply to selected elements. Examples example.com#$#body { background-color: #333!important; }  This rule will apply a style background-color: #333!important; to the body element at example.com and all subdomains. Exceptions Just like with element hiding, there is a type of rules that disable the selected CSS style rule for particular domains. Exception rules syntax is almost the same, you just have to change #$# to #@$#. For example, there is a rule in filter: #$#.textad { visibility: hidden; }  If you want to disable it for example.com, you can create an exception rule: example.com#@$#.textad { visibility: hidden; }  We recommend to use this kind of exceptions only if it is not possible to change the CSS rule itself. In other cases it is better to change the original rule, using domain restrictions. "},{"title":"Extended CSS selectors​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#extended-css-selectors","content":"LimitationsPseudo-class :has()Pseudo-class :contains()Pseudo-class :matches-css()Pseudo-class :matches-attr()Pseudo-class :matches-property()Pseudo-class :xpath()Pseudo-class :nth-ancestor()Pseudo-class :upward()Pseudo-class :remove() and pseudo-property removePseudo-class :is()Pseudo-class :not()Pseudo-class :if-not() (deprecated) CSS 3.0 is not always enough to block ads. To solve this problem AdGuard extends CSS capabilities by adding support for the new pseudo-elements. We have developed a separate open-source library for non-standard element selecting and applying CSS styles with extended properties. The idea of extended capabilities is an opportunity to match DOM elements with selectors based on their own representation (style, text content, etc.) or relations with other elements. There is also an opportunity to apply styles with non-standard CSS properties. Application area Extended selectors can be used in any cosmetic rule, whether they are element hiding rules or CSS rules. Compatibility with different versions of AdGuard Rules with extended CSS selectors are not supported by AdGuard Content Blocker. Syntax Regardless of the CSS pseudo-classes you are using in the rule, you can use special markers to force applying these rules by ExtendedCss. It is recommended to use these markers for all extended CSS cosmetic rules so that it was easier to find them. The syntax for extended CSS rules: #?# — for element hiding, #@?# — for exceptions#$?# — for CSS rules, #@$?# — for exceptions We strongly recommend using these markers any time when you use an extended CSS selector. Examples example.org#?#div:has(&gt; a[target=&quot;_blank&quot;][rel=&quot;nofollow&quot;]) — this rule blocks all div elements containing a child node that has a link with the attributes [target=&quot;_blank&quot;][rel=&quot;nofollow&quot;]. The rule applies only to example.org and its subdomains.example.com#$?#h3:contains(cookies) { display: none!important; } — this rule sets the style display: none!important to all h3 elements that contain the word cookies. The rule applies only to example.com and all its subdomains.example.net#?#.banner:matches-css(width: 360px) — this rule blocks all .banner elements with the style property width: 360px. The rule applies only to example.net and its subdomains.example.net#@?#.banner:matches-css(width: 360px) — this rule will disable the previous rule. You can apply standard CSS selectors using the ExtendedCss library by using a rule marker #?#, e.g. #?#div.banner. Learn more about how to debug extended selectors. Note Some pseudo-classes do not require selector before it. Still adding a universal selector * makes an extended selector easier to read, even though it has no effect on the matching behavior. So selector #block :has(&gt; .inner) works exactly like #block *:has(&gt; .inner) but second one is more obvious. Pseudo-class names are case-insensitive, e.g. :HAS() works as :has(). Still the lower-case names are used commonly. ExtendedCss Limitations​ CSS comments and at-rules are not supported. Specific pseudo-class may have its own limitations: :has(), :xpath(), :nth-ancestor(), :upward(), :is(), :not(), and :remove(). Pseudo-class :has()​ Draft CSS 4.0 specification describes the :has() pseudo-class. Unfortunately, it is not yet supported by all popular browsers. Note Rules with the :has() pseudo-class should use the native implementation of :has() if they use ## marker and if it is possible, i.e. with no other extended selectors inside. To force applying of ExtendedCss rules with :has(), use #?#/#$?# marker explicitly. Compatibility with other pseudo-classes Synonyms :-abp-has() is supported by ExtendedCss for better compatibility. Deprecation notice :if() is no longer supported as a synonym for :has(). Syntax [target]:has(selector)  target — optional, standard or extended CSS selector, can be missed for checking any elementselector — required, standard or extended CSS selector The pseudo-class :has() selects the target elements that fit to the selector. Also the selector can start with a combinator. A selector list can be set in selector as well. In this case all selectors in the list are being matched for now. In the future it will be fixed for &lt;forgiving-relative-selector-list&gt; as argument. :has() limitations​ Usage of the :has() pseudo-class is restricted for some cases (2, 3): - disallow :has() inside the pseudos accepting only compound selectors; - disallow :has() after regular pseudo-elements. Native :has() pseudo-class does not allow :has(), :is(), :where() inside :has() argument to avoid increasing the :has() invalidation complexity (case 1). But ExtendedCss did not have such limitation earlier and filter lists already contain such rules, so we have not added this limitation to ExtendedCss and allow to use :has() inside :has() as it was possible before. To use it, just force ExtendedCss usage by setting #?#/#$?# rule marker. Native implementation does not allow any usage of :scope inside :has() argument ([1], [2]). Still, there are some such rules in filter lists: div:has(:scope &gt; a) which we continue to support by simply converting them to div:has(&gt; a), as it used to be done previously. Examples div:has(.banner) selects all div elements which include an element with the banner class: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected &lt;span class=&quot;banner&quot;&gt;inner element&lt;/span&gt; &lt;/div&gt;  div:has(&gt; .banner) selects all div elements which include an banner class element as a direct child of div: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected &lt;p class=&quot;banner&quot;&gt;child element&lt;/p&gt; &lt;/div&gt;  div:has(+ .banner) selects all div elements preceding banner class element which immediately follows the div and both are children of the same parent: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected&lt;/div&gt; &lt;p class=&quot;banner&quot;&gt;adjacent sibling&lt;/p&gt; &lt;span&gt;Not selected&lt;/span&gt;  div:has(~ .banner) selects all div elements preceding banner class element which follows the div but not necessarily immediately and both are children of the same parent: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected&lt;/div&gt; &lt;span&gt;Not selected&lt;/span&gt; &lt;p class=&quot;banner&quot;&gt;general sibling&lt;/p&gt;  div:has(span, .banner) selects all div elements which include both span element and banner class element: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div&gt;Selected &lt;span&gt;child span&lt;/span&gt; &lt;p class=&quot;banner&quot;&gt;child .banner&lt;/p&gt; &lt;/div&gt;  Compatibility with old syntax Backward compatible syntax for :has() is supported but not recommended. Pseudo-class :contains()​ The :contains() pseudo-class principle is very simple: it allows to select the elements that contain specified text or which content matches a specified regular expression. Regexp flags are supported. Note The :contains() pseudo-class uses the textContent element property for matching, not the innerHTML. Compatibility with other pseudo-classes Synonyms :-abp-contains() and :has-text() are supported for better compatibility. Syntax [target]:contains(match)  target — optional, standard or extended CSS selector, can be missed for checking any elementmatch — required, string or regular expression for matching element textContent. Regular expression flags are supported. Examples For such DOM: &lt;!-- HTML code --&gt; &lt;div&gt;Not selected&lt;/div&gt; &lt;div id=&quot;match&quot;&gt;Selected as IT contains &quot;banner&quot;&lt;/div&gt; &lt;div&gt;Not selected &lt;div class=&quot;banner&quot;&gt;&lt;/div&gt;&lt;/div&gt;  the element div#match can be selected by any on these extended selectors: ! plain text div:contains(banner) ! regular expression div:contains(/as .* banner/) ! regular expression with flags div:contains(/it .* banner/gi)  Note Only the div with id=match is selected because the next element does not contain any text, and banner is a part of code, not a text. Compatibility with old syntax Backward compatible syntax for :contains() is supported but not recommended. Pseudo-class :matches-css()​ The :matches-css() pseudo-class allows to match the element by its current style properties. The work of the pseudo-class is based on using the Window.getComputedStyle() method. Syntax [target]:matches-css([pseudo-element, ] property: pattern)  target — optional, standard or extended CSS selector, can be missed for checking any elementpseudo-element — optional, valid standard pseudo-element, e.g. before, after, first-line, etc.property — required, a name of CSS property to check the element forpattern — required, a value pattern that is using the same simple wildcard matching as in the basic url filtering rules OR a regular expression. For this type of matching, AdGuard always does matching in a case-insensitive manner. In the case of a regular expression, the pattern looks like /regexp/. Special characters escaping and unescaping For non-regexp patterns (,),[,] must be unescaped, e.g. :matches-css(background-image:url(data:*)). For regexp patterns \\ should be escaped, e.g. :matches-css(background-image: /^url\\\\(&quot;data:image\\\\/gif;base64.+/). Restrictions Regexp patterns do not support flags. Examples For such DOM: &lt;!-- HTML code --&gt; &lt;style type=&quot;text/css&quot;&gt; #matched::before { content: &quot;Block me&quot; } &lt;/style&gt; &lt;div id=&quot;matched&quot;&gt;&lt;/div&gt; &lt;div id=&quot;not-matched&quot;&gt;&lt;/div&gt;  the div elements with pseudo-element ::before and with specified content property can be selected by any of these extended selectors: ! string pattern div:matches-css(before, content: block me) ! string pattern with wildcard div:matches-css(before, content: block*) ! regular expression pattern div:matches-css(before, content: /block me/)  Compatibility with other pseudo-classes Obsolete pseudo-classes :matches-css-before() and :matches-css-after() are no longer recommended but still are supported for better compatibility. Compatibility with old syntax Backward compatible syntax for :matches-css() is supported but not recommended. Pseudo-class :matches-attr()​ The :matches-attr() pseudo-class allows to select an element by its attributes, especially if they are randomized. Syntax [target]:matches-attr(&quot;name&quot;[=&quot;value&quot;])  target — optional, standard or extended CSS selector, can be missed for checking any elementname — required, simple string or string with wildcard or regular expression for attribute name matchingvalue — optional, simple string or string with wildcard or regular expression for attribute value matching Escaping special characters For regexp patterns &quot; and \\ should be escaped, e.g. div:matches-attr(class=/[\\\\w]{5}/). Restrictions Regexp patterns do not support flags. Examples div:matches-attr(&quot;ad-link&quot;) selects the element div#target1: &lt;!-- HTML code --&gt; &lt;div id=&quot;target1&quot; ad-link=&quot;1random23-banner_240x400&quot;&gt;&lt;/div&gt;  div:matches-attr(&quot;data-*&quot;=&quot;adBanner&quot;) selects the element div#target2: &lt;!-- HTML code --&gt; &lt;div id=&quot;target2&quot; data-1random23=&quot;adBanner&quot;&gt;&lt;/div&gt;  div:matches-attr(*unit*=/^click$/) selects the element div#target3: &lt;!-- HTML code --&gt; &lt;div id=&quot;target3&quot; random123-unit094=&quot;click&quot;&gt;&lt;/div&gt;  *:matches-attr(&quot;/.{5,}delay$/&quot;=&quot;/^[0-9]*$/&quot;) selects the element #target4: &lt;!-- HTML code --&gt; &lt;div&gt; &lt;inner-random23 id=&quot;target4&quot; nt4f5be90delay=&quot;1000&quot;&gt;&lt;/inner-random23&gt; &lt;/div&gt;  Pseudo-class :matches-property()​ The :matches-property() pseudo-class allows to select an element by matching its properties. Syntax [target]:matches-property(&quot;name&quot;[=&quot;value&quot;])  target — optional, standard or extended CSS selector, can be missed for checking any elementname — required, simple string or string with wildcard or regular expression for element property name matchingvalue — optional, simple string or string with wildcard or regular expression for element property value matching Escaping special characters For regexp patterns &quot; and \\ should be escaped, e.g. div:matches-property(prop=/[\\\\w]{4}/). Note Regexp patterns are supported in name for any property in chain, e.g. prop./^unit[\\\\d]{4}$/.type. Restrictions Regexp patterns do not support flags. Examples An element with such properties: divProperties = { id: 1, check: { track: true, unit_2random1: true, }, memoizedProps: { key: null, tag: 12, _owner: { effectTag: 1, src: 'ad.com', }, }, };  can be selected by any of these extended selectors: div:matches-property(check.track) div:matches-property(&quot;check./^unit_.{4,8}$/&quot;) div:matches-property(&quot;check.unit_*&quot;=true) div:matches-property(memoizedProps.key=&quot;null&quot;) div:matches-property(memoizedProps._owner.src=/ad/)  For filters maintainers: To check properties of a specific element, do the following: 1. Inspect the page element or select it in Elements tab of browser DevTools. 2. Run console.dir($0) in Console tab. Pseudo-class :xpath()​ The :xpath() pseudo-class allows to select an element by evaluating an XPath expression. Syntax [target]:xpath(expression)  target- optional, standard or extended CSS selectorexpression — required, valid XPath expression :xpath() limitations​ target can be omitted so it is optional. For any other pseudo-class that would mean &quot;apply to all DOM nodes&quot;, but in case of :xpath() it just means &quot;apply to the whole document&quot;, and such applying slows elements selecting significantly. That's why rules like #?#:xpath(expression) are limited to looking inside the body tag. For example, rule #?#:xpath(//div[@data-st-area=\\'Advert\\']) is parsed as #?#body:xpath(//div[@data-st-area=\\'Advert\\']). Extended selectors with defined target as any selector — *:xpath(expression) — can still be used but it is not recommended, so target should be specified instead. Works properly only at the end of selector, except for pseudo-class :remove(). Examples :xpath(//*[@class=&quot;banner&quot;]) selects the element div#target1: &lt;!-- HTML code --&gt; &lt;div id=&quot;target1&quot; class=&quot;banner&quot;&gt;&lt;/div&gt;  :xpath(//*[@class=&quot;inner&quot;]/..) selects the element div#target2: &lt;!-- HTML code --&gt; &lt;div id=&quot;target2&quot;&gt; &lt;div class=&quot;inner&quot;&gt;&lt;/div&gt; &lt;/div&gt;  Pseudo-class :nth-ancestor()​ The :nth-ancestor() pseudo-class allows to lookup the nth ancestor relative to the previously selected element. subject:nth-ancestor(n)  subject — required, standard or extended CSS selectorn — required, number &gt;= 1 and &lt; 256, distance to the needed ancestor from the element selected by subject Syntax subject:nth-ancestor(n)  subject — required, standard or extended CSS selectorn — required, number &gt;= 1 and &lt; 256, distance to the needed ancestor from the element selected by subject :nth-ancestor() limitations​ The :nth-ancestor() pseudo-class is not supported inside the argument of the :not() pseudo-class. Examples For such DOM: &lt;!-- HTML code --&gt; &lt;div id=&quot;target1&quot;&gt; &lt;div class=&quot;child&quot;&gt;&lt;/div&gt; &lt;div id=&quot;target2&quot;&gt; &lt;div&gt; &lt;div&gt; &lt;div class=&quot;inner&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  .child:nth-ancestor(1) selects the element div#target1, div[class=&quot;inner&quot;]:nth-ancestor(3) selects the element div#target2. Pseudo-class :upward()​ The :upward() pseudo-class allows to lookup the ancestor relative to the previously selected element. Syntax subject:upward(ancestor)  subject — required, standard or extended CSS selectorancestor — required, specification for the ancestor of the element selected by subject, can be set as: number &gt;= 1 and &lt; 256 for distance to the needed ancestor, same as :nth-ancestor()standard CSS selector for matching closest ancestor :upward() limitations​ The :upward() pseudo-class is not supported inside the argument of the :not() pseudo-class. Examples For such DOM: &lt;!-- HTML code --&gt; &lt;div id=&quot;target1&quot; data=&quot;true&quot;&gt; &lt;div class=&quot;child&quot;&gt;&lt;/div&gt; &lt;div id=&quot;target2&quot;&gt; &lt;div&gt; &lt;div&gt; &lt;div class=&quot;inner&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  .inner:upward(div[data]) selects the element div#target1, .inner:upward(div[id]) selects the element div#target2, .child:upward(1) selects the element div#target1, .inner:upward(3) selects the element div#target2. Pseudo-class :remove() and pseudo-property remove​ Sometimes, it is necessary to remove a matching element instead of hiding it or applying custom styles. In order to do it, you can use the :remove() pseudo-class as well as the remove pseudo-property. Pseudo-class :remove() can be placed only at the end of a selector. Syntax ! pseudo-class selector:remove() ! pseudo-property selector { remove: true; }  selector — required, standard or extended CSS selector :remove() and remove limitations​ The :remove() pseudo-class is limited to work properly only at the end of selector. For applying the :remove() pseudo-class to any element, a universal selector * should be used. Otherwise such extended selector may be considered as invalid, e.g. .banner &gt; :remove() is not valid for removing any child element of banner class element, so it should look like .banner &gt; *:remove(). If the :remove() pseudo-class or the remove pseudo-property is used, all style properties are ignored except for the debug pseudo-property. Examples div.banner:remove() div:has(&gt; div[ad-attr]):remove() div:contains(advertisement) { remove: true; } div[class]:has(&gt; a &gt; img) { remove: true; }  Note Rules with the remove pseudo-property should use #$?# marker: $ for CSS style rules syntax, ? for ExtendedCss syntax. Pseudo-class :is()​ The :is() pseudo-class allows to match any element that can be selected by any of selectors passed to it. Invalid selectors are skipped and the pseudo-class deals with valid ones with no error thrown. Our implementation of the native :is() pseudo-class. Syntax [target]:is(selectors)  target — optional, standard or extended CSS selector, can be missed for checking any elementselectors — forgiving selector list of standard or extended selectors. For extended selectors only compound selectors are supported, not complex. :is() limitations​ Rules with the :is() pseudo-class should use the native implementation of :is() if rules use ## marker and it is possible, i.e. with no other extended selectors inside. To force applying ExtendedCss rules with :is(), use #?#/#$?# marker explicitly. If the :is() pseudo-class argument selectors is an extended selector, due to the way how the :is() pseudo-class is implemented in ExtendedCss v2.0, it is impossible to apply it to the top DOM node which is html, i.e. #?#html:is(&lt;extended-selectors&gt;) does not work. So if target is not defined or defined as a universal selector *, the extended pseudo-class applying is limited to html's children, e.g. rules #?#:is(...) and #?#*:is(...) are parsed as #?#html *:is(...). Please note that there is no such limitation for a standard selector argument, i.e. #?#html:is(.locked) works fine. Complex selectors with extended pseudo-classes are not supported as selectors argument for :is() pseudo-class, only compound ones are allowed. Check examples below for more details. Examples #container *:is(.inner, .footer) selects only the element div#target1: &lt;!-- HTML code --&gt; &lt;div id=&quot;container&quot;&gt; &lt;div data=&quot;true&quot;&gt; &lt;div&gt; &lt;div id=&quot;target1&quot; class=&quot;inner&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  Due to limitations :is(*:not([class]) &gt; .banner)' does not work but :is(*:not([class]):has(&gt; .banner)) can be used instead of it to select the element div#target2: &lt;!-- HTML code --&gt; &lt;span class=&quot;span&quot;&gt;text&lt;/span&gt; &lt;div id=&quot;target2&quot;&gt; &lt;p class=&quot;banner&quot;&gt;inner paragraph&lt;/p&gt; &lt;/div&gt;  Pseudo-class :not()​ The :not() pseudo-class allows to select elements which are not matched by selectors passed as argument. Invalid argument selectors are not allowed and error is to be thrown. Our implementation of the :not() pseudo-class. Syntax [target]:not(selectors)  target — optional, standard or extended CSS selector, can be missed for checking any elementselectors — list of standard or extended selectors :not() limitations​ Rules with the :not() pseudo-class should use the native implementation of :not() if rules use ## marker and it is possible, i.e. with no other extended selectors inside. To force applying ExtendedCss rules with :not(), use #?#/#$?# marker explicitly. If the :not() pseudo-class argument selectors is an extended selector, due to the way how the :not() pseudo-class is implemented in ExtendedCss v2.0, it is impossible to apply it to the top DOM node which is html, i.e. #?#html:not(&lt;extended-selectors&gt;) does not work. So if target is not defined or defined as a universal selector *, the extended pseudo-class applying is limited to html's children, e.g. rules #?#:not(...) and #?#*:not(...) are parsed as #?#html *:not(...). Please note that there is no such limitation for a standard selector argument, i.e. #?#html:not(.locked) works fine. The :not() is considered as a standard CSS pseudo-class inside the argument of the :upward() pseudo-class because :upward() supports only standard selectors. &quot;Up-looking&quot; pseudo-classes which are :nth-ancestor() and :upward() are not supported inside selectors argument for :not() pseudo-class. Examples #container &gt; *:not(h2, .text) selects only the element div#target1: &lt;!-- HTML code --&gt; &lt;div id=&quot;container&quot;&gt; &lt;h2&gt;Header&lt;/h2&gt; &lt;div id=&quot;target1&quot;&gt;&lt;/div&gt; &lt;span class=&quot;text&quot;&gt;text&lt;/span&gt; &lt;/div&gt;  Pseudo-class :if-not() (deprecated)​ Deprecation notice The :if-not() pseudo-class is deprecated and is no longer supported. Rules with it are considered as invalid. This pseudo-class was basically a shortcut for :not(:has()). It was supported by ExtendedCss for better compatibility with some filters subscriptions. "},{"title":"Cosmetic rules priority​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#cosmetic-rules-priority","content":"The way element hiding and CSS rules are applied is platform-specific. In AdGuard for Windows, Mac, and Android, we use a stylesheet injected into the page. The priority of cosmetic rules is the same as any other websites' CSS stylesheet. But there is a limitation: element hiding and CSS rules cannot override inline styles. In such cases, it is recommended to use extended selectors or HTML filtering. In AdGuard Browser extension, the so called &quot;user stylesheets&quot; are used. They have higher priority than even the inline styles. Extended CSS selectors use JavaScript to work and basically add an inline style themselves, therefore they can override any style. "},{"title":"HTML filtering rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#html-filtering-rules","content":"In most cases, the basis and cosmetic rules are enough to filter ads. But sometimes it is necessary to change the HTML-code of the page itself before it is loaded. This is when you need filtering rules for HTML content. They allow to indicate the HTML elements to be cut out before the browser loads the page. Compatibility with different versions of AdGuard HTML filtering rules are supported by AdGuard for Windows, Mac, Android, and AdGuard Browser extension for Firefox. Such rules do not work in extensions for other browsers because they are unable to modify content on network level. Syntax  rule = [domains] &quot;$$&quot; tagName [attributes] domains = [domain0, domain1[, ...[, domainN]]] attributes = &quot;[&quot; name0 = value0 &quot;]&quot; &quot;[&quot; name1 = value2 &quot;]&quot; ... &quot;[&quot; nameN = valueN &quot;]&quot;  tagName — name of the element in lower case, for example, div or script.domains — domain restriction for the rule. Same principles as in element hiding rules syntax.attributes — a list of attributes, that limit the elements selection. name — attribute name, value — substring, that is contained in attribute value. Examples HTML code: &lt;script data-src=&quot;/banner.js&quot;&gt;&lt;/script&gt;  Rule: example.org$$script[data-src=&quot;banner&quot;]  This rule removes all script elements with the attribute data-src containing the substring banner. The rule applies only to example.org and all its subdomains. Special attributes In addition to usual attributes, which value is every element checked for, there is a set of special attributes that change the way a rule works. Below there is a list of these attributes: tag-content This is the most frequently used special attribute. It limits selection with those elements whose innerHTML code contains the specified substring. You should use &quot;&quot; to escape &quot;, for instance: $$script[tag-content=&quot;alert(&quot;&quot;this is ad&quot;&quot;)&quot;] For example, take a look at this HTML code: &lt;script type=&quot;text/javascript&quot;&gt; document.write('&lt;div&gt;banner text&lt;/div&gt;&quot; /&gt;'); &lt;/script&gt;  Following rule will delete all script elements with a banner substring in their code: $$script[tag-content=&quot;banner&quot;]  Nested elements If we are dealing with multiple nested elements and they all fall within the same HTML filtering rule, they all are going to be deleted. wildcard This special attribute works almost like tag-content and allows you to check the innerHTML code of the document. Rule will check if HTML code of the element fits to the search pattern. You should use &quot;&quot; to escape &quot;, for instance: $$script[wildcard=&quot;&quot;banner&quot;&quot;] For example: $$script[wildcard=&quot;*banner*text*&quot;] It will check, if the code of element contains two consecutive substrings banner and text. max-length Specifies the maximum length for content of HTML element. If this parameter is set and the content length exceeds the value, a rule does not apply to the element. Default value If this parameter is not specified, the max-length is considered to be 8192. Zum Beispiel: $$div[tag-content=&quot;banner&quot;][max-length=&quot;400&quot;]  This rule will remove all the div elements, whose code contains the substring banner and the length of which does not exceed 400 characters. min-length Specifies the minimum length for content of HTML element. If this parameter is set and the content length is less than preset value, a rule does not apply to the element. Zum Beispiel: $$div[tag-content=&quot;banner&quot;][min-length=&quot;400&quot;]  This rule will remove all the div elements, whose code contains the substring banner and the length of which exceeds 400 characters. Exceptions Similar to hiding rules, there is a special type of rules that disable the selected HTML filtering rule for particular domains. The syntax is the same, you just have to change $$ to $@$. For example, there is a rule in filter: $$script[tag-content=&quot;banner&quot;]  If you want to disable it for example.com, you can create an exception rule: example.com$@$script[tag-content=&quot;banner&quot;]  Sometimes, it may be necessary to disable all restriction rules. For example, to conduct tests. To do this, use the exclusion rule without specifying a domain. $@$script[tag-content=&quot;banner&quot;]  We recommend to use this kind of exceptions only if it is not possible to change the hiding rule itself. In other cases it is better to change the original rule, using domain restrictions. "},{"title":"JavaScript rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#javascript-rules","content":"AdGuard supports a special type of rules that allows you to inject any javascript code to websites pages. Restrictions JavaScript rules can be used only in trusted filters. Compatibility with different versions of AdGuard JavaScript rules are not supported by AdGuard Content Blocker. We strongly recommend using scriptlets instead of JavaScript rules whenever possible. JS rules are supposed to help with debugging, but as a long-time solution a scriptlet rule should be used. Syntax rule = [domains] &quot;#%#&quot; script  domains — domain restriction for the rule. Same principles as in element hiding rules.script — arbitrary javascript code in one string. Examples example.org#%#window.__gaq = undefined; executes the code window.__gaq = undefined; on all pages at example.org and all subdomains. Exceptions Similar to hiding rules, there is a special type of rules that disable the selected javascript rule for particular domains. The syntax is the same, you just have to change #%# to #@%#. For example, there is a rule in filter: #%#window.__gaq = undefined;  If you want to disable it for example.com, you can create an exception rule: example.com#@%#window.__gaq = undefined;  Sometimes, it may be necessary to disable all restriction rules. For example, to conduct tests. To do this, use the exclusion rule without specifying a domain. #@%#window.__gaq = undefined;  We recommend to use this kind of exceptions only if it is not possible to change the hiding rule itself. In other cases it is better to change the original rule, using domain restrictions. "},{"title":"Scriptlet rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#scriptlets","content":"Scriptlet is a JavaScript function that provides extended capabilities for content blocking. These functions can be used in a declarative manner in AdGuard filtering rules. Restrictions Trusted scriptlets rules can be used only in trusted filters. Note AdGuard supports a lot of different scriptlets. In order to achieve cross-blocker compatibility, we also support syntax of uBO and ABP. Syntax rule = [domains] &quot;#%#//scriptlet(&quot; scriptletName arguments &quot;)&quot;  scriptletName — required, a name of the scriptlet from AdGuard's Scriptlets libraryarguments — optional, a list of string arguments (no other types of arguments are supported) Examples example.org#%#//scriptlet(&quot;abort-on-property-read&quot;, &quot;alert&quot;)  This rule will be applied to example.org and subdomains pages and will execute the abort-on-property-read scriptlet with the alert parameter. Learn more about how to debug scriptlets. More information about scriptlets can be found on GitHub. Compatibility with different versions of AdGuard Scriptlet rules are not supported by AdGuard Content Blocker. "},{"title":"Trusted scriptlets​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#trusted-scriptlets","content":"Trusted scriptlets are scriptlets with extended functionality. It means the same syntax and restrictions. Trusted scriptlet names are prefixed with trusted-, e.g. trusted-set-cookie, to be easily distinguished from common scriptlets. Note Trusted scriptlets are not compatible with other ad blockers except AdGuard Compatibility with different versions of AdGuard Trusted scriptlets rules are now supported by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.10.141 or later. Learn more about how to debug scriptlets. More information about trusted scriptlets can be found on GitHub. "},{"title":"Modifiers for non-basic type of rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#modifiers-for-non-basic-type-of-rules","content":"$app$domain$path$url Each rule can be modified using the modifiers described in the following paragraphs. Syntax rule = &quot;[$&quot; modifiers &quot;]&quot; [rule text] modifiers = modifier0[, modifier1[, ...[, modifierN]]]  modifier — set of the modifiers described below.rule text — a rule to be modified. For example, [$domain=example.com,app=test_app]##selector. In the modifiers values of the following characters must be escaped: [, ], ,, and \\ (unless it is used for the escaping). Use \\ to escape them. For example, an escaped bracket looks like this: \\]. $app​ $app modifier lets you narrow the rule coverage down to a specific application or a list of applications. The modifier's behavior and syntax perfectly match the corresponding basic rules $app modifier. Examples [$app=org.example.app]example.com##.textad hides a div with a class textad at example.com and all subdomains in requests sent from the org.example.app Android app.[$app=~org.example.app1|~org.example.app2]example.com##.textad hides a div with a class textad at example.com and all subdomains in requests sent from any app except org.example.app1 and org.example.app2.[$app=com.apple.Safari]example.org#%#//scriptlet('prevent-setInterval', 'check', '!300') applies scriptlet prevent-setInterval only in Safari browser on Mac.[$app=org.example.app]#@#.textad disables all ##.textad rules for all domains while using org.example.app. Compatibility with different versions of AdGuard Such rules with $app modifier are supported by AdGuard for Windows, Mac and Android. $domain​ $domain modifier limits the rule application area to a list of domains and their subdomains. The modifier's behavior and syntax perfectly match the corresponding basic rules $domain modifier. Examples [$domain=example.com]##.textad — hides a div with a class textad at example.com and all subdomains.[$domain=example.com|example.org]###adblock — hides an element with attribute id equals adblock at example.com, example.org and all subdomains.[$domain=~example.com]##.textad — this rule hides div elements of the class textad for all domains, except example.com and its subdomains. Please note that there are 2 ways to specify domain restrictions for non-basic rules: the &quot;classic&quot; way is to specify domains before rule mask and attributes: example.com##.textad;the modifier approach is to specify domains via $domain modifier: [$domain=example.com]##.textad. But rules with mixed style domains restriction are considered invalid. So, for example, the rule [$domain=example.org]example.com##.textad will be rejected. Compatibility with different versions of AdGuard Such rules with $domain modifier are supported by AdGuard for Windows, Mac, Android, and AdGuard Browser extension for Chrome, Firefox, Edge. $path​ $path modifier limits the rule application area to specific locations or pages on websites. Syntax $path [&quot;=&quot; pattern]  pattern — optional, a path mask to which the rule is restricted. Its syntax and behavior are pretty much the same as with the pattern for basic rules. You can also use special characters, except for ||, which does not make any sense in this case (see examples below). If pattern is not set for $path, rule will apply only on the main page of website. $path modifier matches the query string as well. $path modifier supports regular expressions in the same way basic rules do. Examples [$path=page.html]##.textad hides a div with a class textad at /page.html or /page.html?&lt;query&gt; or /sub/page.html or /another_page.html[$path=/page.html]##.textad hides a div with a class textad at /page.html or /page.html?&lt;query&gt; or /sub/page.html of any domain but not at /another_page.html[$path=|/page.html]##.textad hides a div with a class textad at /page.html or /page.html?&lt;query&gt; of any domain but not at /sub/page.html[$path=/page.html|]##.textad hides a div with a class textad at /page.html or /sub/page.html of any domain but not at /page.html?&lt;query&gt;[$path=/page*.html]example.com##.textad hides a div with a class textad at /page1.html or /page2.html or any other path matching /page&lt;...&gt;.html of example.com[$path]example.com##.textad hides a div with a class textad at the main page of example.com[$domain=example.com,path=/page.html]##.textad hides a div with a class textad at page.html of example.com and all subdomains but not at another_page.html[$path=/\\\\/(sub1|sub2)\\\\/page\\\\.html/]##.textad hides a div with a class textad at both /sub1/page.html and /sub2/page.html of any domain (please note the escaped special characters) Compatibility with different versions of AdGuard Rules with $path modifier are supported by AdGuard for Windows, Mac, Android, and AdGuard Browser extension for Chrome, Firefox, Edge. url​ $url modifier limits the rule application area to URLs matching the specified mask. Syntax url = pattern  where pattern is pretty much the same as pattern of the basic rules assuming that some characters must be escaped. The special characters and regular expressions are supported as well. Examples [$url=||example.com/content/*]##div.textad hides a div with a class textad at addresses like https://example.com/content/article.html and even https://subdomain.example.com/content/article.html.[$url=||example.org^]###adblock hides an element with attribute id equal to adblock at example.org and its subdomains.[$url=/\\[a-z\\]+\\\\.example\\\\.com^/]##.textad hides div elements of the class textad for all domains matching the regular expression [a-z]+\\.example\\.com^. Compatibility with different versions of AdGuard Rules with the $url modifier are supported by AdGuard for Windows, Mac, and Android, running CoreLibs version 1.11 or later. "},{"title":"Information for filters maintainers​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#information-for-filters-maintainers","content":"If you maintain a third-party filter that is known to AdGuard, you might be interested in the information presented in this section. Please note that hints will be applied to registered filters only. The filter is considered to be registered and known by AdGuard, if it is present in the known filters index. If you want your filter to be registered, please file an issue to AdguardFilters repo. "},{"title":"Preprocessor directives​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#preprocessor-directives","content":"We provide preprocessor directives that can be used by filters maintainers to improve compatibility with different ad blockers and provide: including a fileapplying rules conditionally by ad blocker typecontent blocker specifying for rules applying in Safari Note Any mistake in a preprocessor directive will lead to AdGuard failing the filter update in the same way as if the filter URL was unavailable. Preprocessor directives can be used in the user rules or in the custom filters. Including a file​ The !#include directive allows to include contents of a specified file into the filter. It supports only files from the same origin to make sure that the filter maintainer is in control of the specified file. The included file can also contain pre- directives (even other !#include directives). Ad blockers should consider the case of recursive !#include and implement a protection mechanism. Syntax !#include file_path  where file_path is a same origin absolute or relative file path to be included. The files must originate from the same domain but may be located in a different folder. If included file is not found or unavailable, the whole filter update should fail. Same-origin limitation should be disabled for local custom filters. Examples Filter URL: https://example.org/path/filter.txt ! Valid (same origin): !#include https://example.org/path/includedfile.txt ! ! Valid (relative path): !#include /includedfile.txt !#include ../path2/includedfile.txt ! ! Invalid (another origin): !#include https://domain.com/path/includedfile.txt  Conditions​ Filters maintainers can use conditions to supply different rules depending on the ad blocker type. When an adblocker encounters an !#if directive, followed eventually by an !#endif directive, it will compile the code inside of the directives block only if the specified condition is true. Condition supports all the basic logical operators. A conditional directive beginning with an !#if directive must explicitly be terminated with an !#endif directive. Whitespaces matter. !#if is a valid directive, while !# if is not. Syntax !#if (conditions) rules_list !#endif  where: !#if (conditions) — start of the blockconditions — just like in some popular programming languages, preprocessor conditions are based on constants declared by ad blockers. Ad blocker authors define on their own what exact constants do they declare. Possible values: adguard always declared; shows maintainers that this is one of AdGuard products; should be enough in 95% of casesproduct-specific constants for cases when you need a rule to work (or not work — then ! should be used before constant) in a specific product only: adguard_app_windows — AdGuard for Windowsadguard_app_mac — AdGuard for Macadguard_app_android — AdGuard for Androidadguard_app_ios — AdGuard for iOSadguard_ext_safari — AdGuard for Safariadguard_ext_chromium — AdGuard Browser extension for Chrome (and chromium-based browsers, e.g. new Microsoft Edge)adguard_ext_firefox — AdGuard Browser extension for Firefoxadguard_ext_edge — AdGuard Browser extension for Edge Legacyadguard_ext_opera — AdGuard Browser extension for Operaadguard_ext_android_cb — AdGuard Content Blocker for mobile Samsung and Yandex browsersext_ublock — special case; this one is declared when a uBlock version of a filter is compiled by the FiltersRegistry rules_list — list of rules!#endif — end of the block Examples ! for all AdGuard products except AdGuard for Safari !#if (adguard &amp;&amp; !adguard_ext_safari) ||example.org^$third-party domain.com##div.ad !#endif  ! directives even can be combined !#if (adguard_app_android) !#include /androidspecific.txt !#endif  Safari affinity​ Safari is notoriously known for its harsh 150k max limit for filtering rules in content blockers. But in AdGuard for Safari and AdGuard for iOS max rule count is raised to 300k by splitting them into several content blockers. Generally, several filters categories are more or less independent, so there is such content blockers with such categories included: AdGuard General — Ad Blocking, Language-specificAdGuard Privacy — PrivacyAdGuard Social — Social Widgets, AnnoyancesAdGuard Security — SecurityAdGuard Other — OtherAdGuard Custom — Custom User rules and Allowlist are added to every content blocker. The main issue with using multiple content blockers is that rules inside these content blockers cannot influence each other. This may lead to different unexpected issues. So filters maintainers may use !#safari_cb_affinity to define Safari content blockers affinity for the rules inside of the directive block. Syntax !#safari_cb_affinity(content_blockers) rules_list !#safari_cb_affinity  where: !#safari_cb_affinity(content_blockers) — start of the blockcontent_blockers — comma-separated list of content blockers. Possible values: general — AdGuard General content blockerprivacy — AdGuard Privacy content blockersocial — AdGuard Social content blockersecurity — AdGuard Security content blockerother — AdGuard Other content blockercustom — AdGuard Custom content blockerall — special keyword that means that the rules must be included into all content blockers rules_list — list of rules!#safari_cb_affinity — end of the block Examples ! to unhide specific element which is hidden by AdGuard Base filter: !#safari_cb_affinity(general) example.org#@#.adBanner !#safari_cb_affinity  ! to allowlist basic rule from AdGuard Tracking Protection filter filter: !#safari_cb_affinity(privacy) @@||example.org^ !#safari_cb_affinity  "},{"title":"Hints​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#hints","content":"&quot;Hint&quot; is a special comment, instruction to the filters compiler used on the server side (see FiltersRegistry). Syntax !+ HINT_NAME1(PARAMS) HINT_NAME2(PARAMS)  Multiple hints can be applied. NOT_OPTIMIZED hint​ For each filter, AdGuard compiles two versions: full and optimized. Optimized version is much more lightweight and does not contain rules which are not used at all or used rarely. Rules usage frequency comes from the collected filter rules statistics. But filters optimization is based on more than that — some filters have specific configuration. This is how it looks like for Base filter: &quot;filter&quot;: AdGuard Base filter, &quot;percent&quot;: 30, &quot;minPercent&quot;: 20, &quot;maxPercent&quot;: 40, &quot;strict&quot;: true  where: filter — filter identifierpercent — expected optimization percent ~= (rules count in optimized filter) / (rules count in original filter) * 100minPercent — lower bound of percent valuemaxPercent — upper bound of percent valuestrict — if percent &lt; minPercent OR percent &gt; maxPercent and strict mode is on then filter compilation should fail, otherwise original rules must be used In other words, percent is the &quot;compression level&quot;. For instance, for the Base filter it is configured to 40%. It means that optimization algorithm should strip 60% of rules. Eventually, here are the two versions of the Base filter for AdGuard Browser extension: full: https://filters.adtidy.org/extension/chromium/filters/2.txtoptimized: https://filters.adtidy.org/extension/chromium/filters/2_optimized.txt If you want to add a rule which should not be removed at optimization use the NOT_OPTIMIZED hint: !+ NOT_OPTIMIZED ||example.org^  And this rule will not be optimized only for AdGuard for Android: !+ NOT_OPTIMIZED PLATFORM(android) ||example.org^  PLATFORM and NOT_PLATFORM hints​ Used to specify the platforms to apply the rules. List of existing platforms and links to Base filter, for example, for each of them: windows — AdGuard for Windows — https://filters.adtidy.org/windows/filters/2.txt mac — AdGuard for Mac — https://filters.adtidy.org/mac_v2/filters/2.txt android — AdGuard for Android — https://filters.adtidy.org/android/filters/2.txt ios — AdGuard for iOS — https://filters.adtidy.org/ios/filters/2.txt ext_chromium — AdGuard Browser extension for Chrome — https://filters.adtidy.org/extension/chromium/filters/2.txt ext_ff — AdGuard Browser extension for Firefox — https://filters.adtidy.org/extension/firefox/filters/2.txt ext_edge — AdGuard Browser extension for Edge — https://filters.adtidy.org/extension/edge/filters/2.txt ext_opera — AdGuard Browser extension for Opera — https://filters.adtidy.org/extension/opera/filters/2.txt ext_safari — AdGuard for Safari — https://filters.adtidy.org/extension/safari/filters/2.txt ext_android_cb — AdGuard Content Blocker — https://filters.adtidy.org/extension/android-content-blocker/filters/2.txt ext_ublock — uBlock Origin — https://filters.adtidy.org/extension/ublock/filters/2.txt Examples This rule will be available only in AdGuard for Windows, Mac, Android: !+ PLATFORM(windows,mac,android) ||example.org^  This rule will be available for every platform except AdGuard for Safari, AdGuard Content Blocker, and AdGuard for iOS: !+ NOT_PLATFORM(ext_safari, ext_android_cb, ios) ||example.org^  "},{"title":"How to debug filtering rules​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#how-to-debug-filtering-rules","content":"It may be possible to create simple filtering rules &quot;in your head&quot; but for anything even slightly more complicated you will need additional tools to debug and iterate them. There are tools to assist you with that. You can use DevTools in Chrome and its analogs in other browsers but most AdGuard products provide another one — Filtering log. "},{"title":"Filtering log​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#filtering-log","content":"Filtering log is an advanced tool that will be helpful mostly to filter developers. It lists all web requests that pass through AdGuard, gives you exhaustive information on each of them, offers multiple sorting options, and has other useful features. Depending on which AdGuard product you are using, Filtering log can be located in different places. In AdGuard for Windows you will find it inside Ad Blocker tab or via the tray menu;In AdGuard for Mac it is under Settings → Advanced → Filtering log;In AdGuard for Android it is a separate item in the side menu, also filtering log for a specific app or website is accessible from the Assistant.In AdGuard Browser extension it is accessible from the Miscellaneous settings tab or by right-clicking the extension icon. Only Chromium- and Firefox-based browsers show applied element hiding rules (including CSS, ExtCSS) and JS rules and scriptlets in their Filtering logs. In AdGuard for iOS and in AdGuard for Safari Filtering log does not exist because of the way content blockers are implemented in Safari. AdGuard does not see the web requests and therefore cannot display them. "},{"title":"Selectors debugging mode​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#selectors-debug-mode","content":"Sometimes, you might need to check the performance of a given selector or a stylesheet. In order to do it without interacting with JavaScript directly, you can use a special debug style property. When ExtendedCss meets this property, it enables the debugging mode either for a single selector or for all selectors, depending on the debug value. Open the browser console while on a web page to see the timing statistics for selector(s) that were applied there. Debugging mode displays the following stats as object where each of the debugged selectors are keys, and value is an object with such properties: Always printed: selectorParsed — text of eventually parsed selectortimings — list of DOM nodes matched by the selector appliesCount — total number of times that the selector has been applied on the pageappliesTimings — time that it took to apply the selector on the page, for each of the instances that it has been applied (in milliseconds)meanTiming — mean time that it took to apply the selector on the pagestandardDeviation — standard deviationtimingsSum — total time it took to apply the selector on the page across all instances Printed only for remove pseudos: removed — flag to signal if elements we removed Printed if elements are not removed: matchedElements — list of DOM nodes matched by the selectorstyleApplied — parsed rule style declaration related to the selector Examples Debugging a single selector: When the value of the debug property is true, only information about this selector will be shown in the browser console. #$?#.banner { display: none; debug: true; }  Enabling global debug: When the value of the debug property is global, the console will display information about all extended CSS selectors that have matches on the current page, for all the rules from any of the enabled filters. #$?#.banner { display: none; debug: global; }  Testing extended selectors without AdGuard ExtendedCss can be executed on any page without using any AdGuard product. In order to do that you should copy and execute the following code in a browser console: !function(e,t,d){C=e.createElement(t),C.src=d,C.onload=function(){alert(&quot;ExtendedCss loaded successfully&quot;)},s=e.getElementsByTagName(t)[0],s?s.parentNode.insertBefore(C,s):(h=e.getElementsByTagName(&quot;head&quot;)[0],h.appendChild(C))}(document,&quot;script&quot;,&quot;https://AdguardTeam.github.io/ExtendedCss/extended-css.min.js&quot;);  Alternatively, install the ExtendedCssDebugger userscript. Now you can now use the ExtendedCss from global scope, and run its method query() as Document.querySelectorAll(). Examples const selector = 'div.block:has=(.header:matches-css(after, content: Ads))'; // array of HTMLElements matched the `selector` is to be returned ExtendedCss.query(selector);  "},{"title":"Debugging scriptlets​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#debug-scriptlets","content":"If you are using AdGuard Browser extension and want to debug a scriptlet or a trusted scriptlet rule, you can get additional information by opening the Filtering log. In that case, scriptlets will switch to debug mode and there will be more information in the browser console. The following scriptlets are especially developed for debug purposes: debug-current-inline-scriptdebug-on-property-readdebug-on-property-writelog-addEventListenerlog-on-stack-tracelog-evallog The following scriptlets also may be used for debug purposes: json-pruneprevent-fetchprevent-requestAnimationFrameprevent-setIntervalprevent-setTimeoutprevent-window-open with specified replacement parameterprevent-xhrtrusted-replace-fetch-responsetrusted-replace-xhr-response "},{"title":"Good luck with creating filters!​","type":1,"pageTitle":"How to create your own ad filters","url":"general/ad-filtering/create-own-filters/#good-luck-with-creating-filters","content":"We wish you luck with creating you own ad filters. If you need an advice on how to create your own filters properly, our forum has a special section dedicated to writing your own filtering rules. "},{"title":"Stealth Mode","type":0,"sectionRef":"#","url":"general/stealth-mode/","content":"","keywords":""},{"title":"Allgemein​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#general","content":""},{"title":"Hide your search queries​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#searchqueries","content":"When you get directed to a website from Google, Yahoo, or any other search engine, this option hides the search query that you used to find that website. "},{"title":"Send Do-Not-Track header​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#donottrack","content":"It sends a Do-Not-Track (DNT) HTTP header to queried websites, thus requiring web apps to disable tracking of your activity. "},{"title":"Strip tracking parameters from URLs​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#strip-tracking-parameters-from-urls","content":"If you enable this option, AdGuard will strip tracking parameters like utm_* and fb_ref from pages’ URLs. "},{"title":"Tracking methods​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#tracking-methods","content":""},{"title":"Self-destructing third-party cookies​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#3p-cookie","content":"Websites use cookies to store your information and preferences, such as the language you selected, your location, or the list of items in your shopping cart. When you return to a website, your browser sends back the cookies belonging to that website, which allows it to &quot;remember&quot; your data. Third-party cookies are those implemented by a website that is different from the one you are currently browsing. For example, cnn.com may have a Facebook &quot;Like&quot; widget on its homepage. This widget will implement a cookie that may be read later by Facebook. Some advertisers use such cookies to track what other sites you visit where their ads are placed. Set a time period (in minutes) at the end of which all third-party cookies will be destroyed. Set the timer to 0 to block them completely. "},{"title":"Self-destructing first-party cookies​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#1p-cookie","content":"We do not recommend enabling this option as it may severely interfere with the work of certain sites. Set a time period (in minutes) at the end of which all cookies will be destroyed. Set the timer to 0 to block them completely. "},{"title":"Disable cache for third-party requests​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#3p-cache","content":"When a browser addresses a page, the server assigns an ETag to that page. This ETag is used by the browser to cache the page's contents. Upon subsequent requests, the browser sends the ETag to the corresponding server, thus letting the server learn the visitor’s identity. As long as the site's files are cached, the ETag is sent every time your browser addresses this site. If the site has embedded content from another server (such as an image or iframe), that server can track your activities without your knowledge. "},{"title":"Block third-party Authorization header​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#3p-auth","content":"&quot;Authorization&quot; header value is cached by the browser, and then is sent alongside every request to that domain. It means that it can be used for tracking purposes just like cookies. "},{"title":"Browser API​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#browser-api","content":""},{"title":"Block WebRTC​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#webrtc","content":"WebRTC (Web Real-Time Communication) is a technology that allows direct streaming of data between browsers and apps. It can let others know your true IP address, even if you use a proxy or VPN. Enabling this option can disrupt the work of certain browser applications, such as messengers, chats, cinemas, or games. "},{"title":"Block Push API​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#push","content":"The Push API enables servers to send messages to web applications regardless of the activity status of your browser. Thus, you may see notifications from various websites even if your browser is hidden in the tray or not launched. Enable this option to block the browser's Push API completely. "},{"title":"Block Location API​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#location","content":"Enabling this option will prevent the browser from sending GPS data that could be used to determine your location, modify your search results, or otherwise influence your web experience. "},{"title":"Block Flash​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#flash","content":"The Flash Player plugin has become increasingly vulnerable to such online threats as viruses and hackers; it may also significantly affect website loading time. Turning this setting on makes AdGuard block browsers' ability to detect components (such as plugins and ActiveXObject objects) that allow Flash to display content. This effectively means that browsers are unable to support Flash. "},{"title":"Java sperren​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#java","content":"Some websites and web services still use the old technology to support Java plugins. The Java plugin API, which is the basis of Java plugins, has serious security flaws. For security purposes, you can disable such plugins. Nevertheless, even if you decide to use the &quot;Block Java&quot; option, JavaScript will still be enabled. "},{"title":"Sonstiges​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#miscellaneous","content":""},{"title":"Hide Referrer from third parties​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#referrer","content":"Referrer is an HTTP header used in browser-to-server requests. It contains the URL of the request source. When you navigate from one page to another, Referrer saves the URL of the initial page. The server that hosts the destination web page often has software that parses Referrer and extracts various pieces of information from it. Enabling the Hide Referrer from third-parties option hides the current website from third-party sites by altering the HTTP header. You can also set an arbitrary value for Referrer by entering it into the Custom Referrer field. To use default Referrer, leave the field blank. Note that to be able to filter traffic, AdGuard applications 'intercept' browser-to-server requests. Requests to ad, tracking, and phishing servers may be altered before sending them to the server or blocked completely. Same goes for the Hide Referrer from third parties option: AdGuard intercepts HTTP(S) requests, in particular to remove or change the Referrer header if this option is enabled. However, it happens only after these requests “leave” the browser. This means that if you monitor Referrer inside the browser (for example, with the help of Chrome's Developer Tools), you will see the original Referrer because the request hasn't reached AdGuard yet. You can use software like Fiddler to make sure that Referrer gets altered correctly. On the opposite, due to the nature of all browser extensions, AdGuard Browser extension works 'inside' the browser. It will alter the Referrer right then and there, so Developer Tools will show the desired Referrer for your requests. "},{"title":"Hide your User-Agent​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#useragent","content":"When you visit a website, your browser sends its information to the server. It looks like a text line that is part of an HTTP request that begins with &quot;User-Agent:&quot;. It usually includes the name and version of the browser, the operating system, and language settings. We cut User-Agent from identifying information so that advertisers cannot obtain it. You can also set an arbitrary value for User-Agent by entering it into the Custom User-Agent field. To use default User-Agent, leave the field blank. "},{"title":"Hide your IP address​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#ip","content":"Stealth Mode cannot hide your IP address. However, we can conceal it so that websites you visit will think you are a proxy. Sometimes this helps, and websites ignore your true IP address. You can set an arbitrary IP address, which you would like others to perceive as yours, by simply entering it into the corresponding field. To use the default IP address, leave the field blank. "},{"title":"Remove X-Client-Data header from HTTP requests​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#xclientdata","content":"It forbids Google Chrome from sending its version and modification information with requests to Google domains (including Double Click and Google Analytics). "},{"title":"Protect from DPI​","type":1,"pageTitle":"Stealth Mode","url":"general/stealth-mode/#dpi","content":"The Deep Packet Inspection is a system of deep analysis and filtering of traffic by packet content, as well as the accumulation of statistical data. Using this technology, ISPs have the ability to control the passing traffic and limit access to content for their clients. AdGuard can modify outgoing packet data so that the client does not fall under the DPI blocking criteria. This means that by enabling this option, users can get access to the content they want. Not all DPI systems can be bypassed at this time, but we are constantly working to improve this. The &quot;Protect from DPI&quot; feature is already implemented in AdGuard for Windows, AdGuard for Mac, and AdGuard for Android. "},{"title":"Benutzerskripte","type":0,"sectionRef":"#","url":"general/userscripts/","content":"","keywords":""},{"title":"Supported apps​","type":1,"pageTitle":"Benutzerskripte","url":"general/userscripts/#supported-apps","content":"AdGuard can significantly broaden website functionality by acting as a userscript manager. You can add your custom scripts or manage the existing ones in our three products: AdGuard for Windows, AdGuard for Android and AdGuard for Mac. "},{"title":"Recommended AdGuard scripts​","type":1,"pageTitle":"Benutzerskripte","url":"general/userscripts/#recommended-adguard-scripts","content":"These userscripts come directly from the AdGuard developers, and we can guarantee that they are effective and safe. Remember: whenever you download a userscript from an unknown source, you expose yourself to risk, as some scripts may be harmful to your computer. Get new scripts only from the sources you trust 100%. Furthermore, here are some examples of popular sites with scripts. AdGuard Extra. An extension that blocks advertising in difficult cases when the usual filter-based approach is not enough. AdGuard Popup Blocker. The name speaks for itself: it blocks pop-ups — one of the most annoying types of ads on web pages. AdGuard Assistant (legacy version). This custom extension is designed to control filtering directly from the browser page (manual blocking, exclusion of the site, etc.). Note that this version of Assistant is legacy and there is no point in using it on new systems, since it has been replaced with the full-fledged Browser Assistant. Der ältere Assistent kann jedoch hilfreich sein, wenn es keine Browser-Assistent-Erweiterung für Ihren Browser gibt. Disable AMP. A script, pre-installed only in AdGuard for Android, that disables AMP (Accelerated Mobile Pages) on the Google search results page. "},{"title":"Where can you get more userscripts?​","type":1,"pageTitle":"Benutzerskripte","url":"general/userscripts/#more-userscripts","content":"As userscripts are created mainly by enthusiasts, you should be cautious when installing them. Yet, there is a great variety of interesting scripts that can really make using some websites more convenient. Here we will describe some of the most popular userscript catalogs. "},{"title":"Stylish (userstyles.org)​","type":1,"pageTitle":"Benutzerskripte","url":"general/userscripts/#stylish-userstylesorg","content":"Userstyles.org is a catalog of user styles, but it allows you to load them as userscripts. Thus, any user style can be installed via AdGuard. Be careful if you decide to install an unpopular script — there's a risk it might be harmful. "},{"title":"Greasy Fork​","type":1,"pageTitle":"Benutzerskripte","url":"general/userscripts/#greasy-fork","content":"Greasy Fork is a userscript catalog by Stylish creators. Unlike the above-mentioned userstyles.org, the scripts in this catalog undergo moderation, so their credibility is much higher. "},{"title":"OpenUserJS.org​","type":1,"pageTitle":"Benutzerskripte","url":"general/userscripts/#openuserjsorg","content":"OpenUserJS.org is an open source userscript catalog written in nodeJS. It doesn't have moderation so stay alert to any suspicious scripts. "},{"title":"Community​","type":1,"pageTitle":"Benutzerskripte","url":"general/userscripts/#community","content":"If you like the idea of personifying your browser with the help of userscripts, and you have any questions, you can ask them on one of these websites: StackoverflowFreeNodeReddit "},{"title":"Development​","type":1,"pageTitle":"Benutzerskripte","url":"general/userscripts/#development","content":""},{"title":"Request License​","type":1,"pageTitle":"Benutzerskripte","url":"general/userscripts/#request-license","content":"If you are developing your own custom script and want to test how it works with AdGuard, request a beta-license key for the app. To get it, please send an email to devteam@adguard.com with the following information: Subject: Userscript author license request Body: Please tell us about the userscripts you are working on. Here is a mailto link. "},{"title":"Compatibility​","type":1,"pageTitle":"Benutzerskripte","url":"general/userscripts/#compatibility","content":"Metadata block​ Supported properties​ @name @namespace @description @version @match @include @exclude @grant @connect @require @resource @downloadURL @updateURL @supportURL @homepageURL @homepage @website @source @run-at @noframes @icon @iconURL @defaulticon @icon64 @icon64URL  Unsupported properties​ These properties will be simply ignored by Adguard. @unwrap  Supported GM functions​ AdGuard supports both old GM_ functions and new GM4 API that use GM object. Values​ Note that all listed old Greasemonkey functions are deprecated but still supported. GM.info / GM_info GM.setValue / GM_setValue GM.getValue / GM_getValue GM.listValues / GM_listValues GM.deleteValue / GM_deleteValue GM.getResourceUrl / GM_getResourceURL GM.setClipboard / GM_setClipboard GM.xmlHttpRequest / GM_xmlhttpRequest GM.openInTab / GM_openInTab GM.notification unsafeWindow GM_getResourceText GM_addStyle GM_log  Here you can find more information about Greasemonkey API. "},{"title":"Example​","type":1,"pageTitle":"Benutzerskripte","url":"general/userscripts/#example","content":"// ==UserScript== // @name Name as shown to the user when locale is english or unknown // @name:ru Name as shown to the user when locale is russian // @description Description as shown to the user when locale is english or unknown // @description:ru Description as shown to the user when locale is russian // @icon https://myhomepage.com/myuserscript.png // @version 1.0.0.0 // @downloadURL https://dl.myhomepage.org/myuserscript.user.js // @updateURL https://dl.myhomepage.org/myuserscript.meta.js // @homepageURL https://myhomepage.com/myuserscript // @include * // @exclude *://website.com/* // @resource https://myhomepage.com/myuserscript.css // @require https://myhomepage.com/mylibrary.js // @grant property:settings // @grant GM_getValue // @grant GM_setValue // @grant GM_deleteValue // @grant GM_listValues // @grant GM_getResourceText // @grant GM_getResourceURL // @grant GM_addStyle // @grant GM_log // @grant GM_setClipboard // @grant GM_xmlhttpRequest // @grant unsafeWindow // @grant GM_info // @grant GM_openInTab // @grant GM_registerMenuCommand // @run-at document-start // ==/UserScript== !function(){( console.log(&quot;I am loaded!&quot;); )}();  "},{"title":"Adware & Viren","type":0,"sectionRef":"#","url":"guides/adware/","content":"","keywords":""},{"title":"Kostenlose Antivirenprogramme​","type":1,"pageTitle":"Adware & Viren","url":"guides/adware/#free-antivirus","content":"Es gibt viele davon und Sie können jeden verwenden, den Sie bevorzugen, zum Beispiel: Dr.Web CureIt! Wenn diese Überprüfung mit Antivirenprogrammen nichts ergeben hat, der Computer sich aber immer noch verdächtig verhält, versuchen Sie, ihn auf Adware zu testen, die ihre Werbung auf allen von Ihnen geöffneten Seiten platzieren kann. "},{"title":"Wie man das System von Adware befreit​","type":1,"pageTitle":"Adware & Viren","url":"guides/adware/#adware","content":"Im Internet finden Sie viele Anwendungen, die auf dieses Problem abzielen. Sie können jedes beliebige Programm verwenden. Wir empfehlen jedoch dringend die Verwendung von AdwareCleaner von Malwarebytes, Avast One von Avast, oder Adaware. Diese Adware-Scanner sind recht einfach zu bedienen, und Sie werden sie selbst bedienen können. Nehmen wir als Beispiel AdwareCleaner. Nachdem die Anwendung heruntergeladen und erfolgreich installiert wurde, führen Sie die folgenden Schritte aus: 1) Starten Sie die Anwendung und klicken Sie auf Scan now.  2) Sobald der Scan abgeschlossen ist, müssen Sie verdächtige Objekte an Quarantine senden.  3) Wenn die Elemente in Quarantine verschoben wurden, können Sie das System von unnötigem Ballast befreien, indem Sie Clear the system wählen. 4) In einigen Fällen müssen Sie möglicherweise das System neu starten (Reboot system), nachdem die Reinigung abgeschlossen ist.  5) Nach dem Neustart des Systems ist die Reinigung abgeschlossen. Bei Bedarf können Sie jederzeit den Report über die geleistete Arbeit lesen.  Wenn das nicht geholfen hat, deaktivieren Sie vorübergehend alle Erweiterungen und einige andere Einstellungen im Browser gemäß diese Anweisungen. Wenn das Deaktivieren von Einstellungen und Erweiterungen nicht hilft, versuchen Sie, Verknüpfungen Ihres Browsers neu zu erstellen. Weiter unten auf dieser Seite beschreiben wir die Anweisungen zum Entfernen einiger der am häufigsten vorkommenden Anzeigenerweiterungen. "},{"title":"Wie man Einstellungen und Erweiterungen im Browser deaktiviert​","type":1,"pageTitle":"Adware & Viren","url":"guides/adware/#instructions","content":"Nachfolgend finden Sie Anweisungen zum Deaktivieren von Einstellungen und Erweiterungen für die gängigsten Browser: für Google Chrome für Mozilla Firefox für Opera "},{"title":"Wie man Verknüpfungen für Ihre Browser neu erstellt​","type":1,"pageTitle":"Adware & Viren","url":"guides/adware/#shortcuts","content":"Sehr oft installieren Malware- und Adware-Programme ihre Homepage auf sehr einfache Weise — sie ersetzen die Desktop-Verknüpfung Ihres Browsers, die Taskleiste und die Start-Menüpunkte. Die einfachste Lösung in diesem Fall ist, alle Verknüpfungen manuell zu löschen und selbst neu zu erstellen. "},{"title":"How to install a proxy certificate","type":0,"sectionRef":"#","url":"guides/proxy-certificate/","content":"","keywords":""},{"title":"How to download and install the certificate​","type":1,"pageTitle":"How to install a proxy certificate","url":"guides/proxy-certificate/#how-to-download-and-install-the-certificate","content":"Depending on the operation system of your device (Windows/Mac/Android/iOS), follow one of these instructions: "},{"title":"Windows​","type":1,"pageTitle":"How to install a proxy certificate","url":"guides/proxy-certificate/#windows","content":"Note the IP address of your desktop computer with installed AdGuard. Make sure the AdGuard protection is enabled. Then check the box Use AdGuard as an HTTP proxy in the Network tab of its settings. On the same device with AdGuard follow this link using any browser: http://local.adguard.org/cert. Click the Download button. Transfer the downloaded cert.cer file to the device which traffic you want to route through AdGuard. On that device, press the Win button, type Manage computer certificates and press Enter. On the Certificates - Local Computer page, find the Trusted Root Certification → Certificates folder. Right-click the Certificates folder and click All Tasks → Import. On the Certificate Import Wizard page, click Next. Click Browse to import the certificate. Navigate to the cert.cer certificate file, select it, then click Open. Click Next. Select the Place all certificates in the following store checkbox. Ensure that the Certificate store field displays Trusted Root Certification Authorities and click Next. Click Finish. Press the Win key, then open Settings. Select Network &amp; Internet → Proxy. Toggle Automatically detect settings off. Click Set up in the Use a proxy server tab. Turn the toggle on. For Proxy IP address, enter the noted IP address of your desktop computer (step 1). For Port, enter the port chosen in the network settings of the desktop AdGuard app. Click Save. "},{"title":"Mac​","type":1,"pageTitle":"How to install a proxy certificate","url":"guides/proxy-certificate/#mac","content":"Note the IP address of your desktop computer with installed AdGuard. Make sure the AdGuard protection is enabled. Then go to Settings → Network → HTTP proxy and check the box Use AdGuard as an HTTP proxy. From the computer with AdGuard, follow this link using a web browser: http://local.adguard.org/cert. Click the Download button. Transfer the downloaded cert.cer file to the device which traffic you want to route through AdGuard. Double-click the downloaded certificate file. Enter the administrator password and then click Modify Keychain. Go to Spotlight (the search icon in the top right corner), type in &quot;Keychain Access&quot;, and then select Keychain Access from the search results. Under System, highlight the certificate that you added. Right-click it and choose Get Info from the context menu. Expand Trust to display the trust policies for the certificate. Under Secure Sockets Layers (SSL), select Always Trust. Open System Preferences → Network and choose the upper active connection. Click Details... and navigate to the Proxies tab. Tick two checkboxes: Web proxy (HTTP) and Secure web proxy (HTTPS). In the Server field, enter the noted IP address of your computer (step 1). In the Port field, enter the port chosen in the network settings of the AdGuard desktop app. "},{"title":"Android​","type":1,"pageTitle":"How to install a proxy certificate","url":"guides/proxy-certificate/#android","content":"Note the IP address of your desktop computer with installed AdGuard. Make sure the AdGuard protection is enabled. Then check the box Use AdGuard as an HTTP proxy in the Network tab of its settings. From the computer with AdGuard, follow this link using a web browser: http://local.adguard.org/cert. Click the Download button. Transfer the downloaded cert.cer file to the device which traffic you want to route through AdGuard. Locate and tap the previously downloaded cert.cer certificate to open the file. On some phones, you might be asked to enter your device password. Do that, then press OK. The certificate is now installed. Open advanced settings of the active Wi-Fi network. Switch the Proxy type to Manual. For Proxy hostname, enter the noted IP address of your desktop computer (step 1). For Proxy port, enter the port chosen in the network settings of the AdGuard desktop app. "},{"title":"iOS​","type":1,"pageTitle":"How to install a proxy certificate","url":"guides/proxy-certificate/#ios","content":"Note the IP address of your desktop computer with installed AdGuard. Make sure the AdGuard protection is enabled. Then check the box Use AdGuard as an HTTP proxy in the Network tab of its settings. From the computer with AdGuard, follow this link using a web browser: http://local.adguard.org/cert. Click the Download button. Transfer the downloaded cert.cer file to the device which traffic you want to route through AdGuard. Open Settings → Security → Encryption &amp; Credentials → Install a certificate. Android devices do not trust certificates by default so there will be a warning when you choose CA certificate. Tap Install anyway. Open Settings → Profile Donwloaded and tap Install in the top right corner. Enter your password and confirm the installation. Tap Done. Go to Settings → General → About → Certificate Trust Settings. Enable the switch beside Adguard Personal CA. The certificate is now installed. On that device, open advanced settings of the active Wi-Fi network. Switch the Proxy type to Manual. For Proxy hostname, enter the noted IP address of your computer (step 1). For Proxy port, enter the port chosen in the network settings of the AdGuard desktop app. "},{"title":"How to collect a HAR file","type":0,"sectionRef":"#","url":"guides/collect-har-file/","content":"","keywords":""},{"title":"Chrome​","type":1,"pageTitle":"How to collect a HAR file","url":"guides/collect-har-file/#chrome","content":"To create a HAR file in Chrome: Go to the URL where the issue occurs. Do not reproduce the issue yet. Open Developer Tools: From menu: Menu → More Tools → Developer Tools.Keyboard: Ctrl+Shift+C, or Ctrl+Alt+I, or ⌥+⌘+I for Mac. Click on the Network tab. Locate the round button at the top left of the Network tab and confirm it is in red recording mode. If it's grey, click to turn red to start recording. Use the clear button (the circle button with a line through it next to the record button) to clear all previous activity. Select the Preserve log check box on the Network tab. Check the Disable cache check box.  Reproduce the steps that create the issue. Save session as a .har file by right-clicking the grid and selecting Save as HAR with content. Forward to AdGuard support (support@adguard.com) with detailed explanation of issue. Supporting screenshots can be helpful, as well. "},{"title":"Edge​","type":1,"pageTitle":"How to collect a HAR file","url":"guides/collect-har-file/#edge","content":"Go to the URL where the issue occurs. Do not reproduce the issue yet. Open Developer Tools: From menu: Menu → More Tools → Developer Tools.Keyboard: Ctrl+Shift+C, or Ctrl+Alt+I, or ⌥+⌘+I for Mac. Click on the Network tab. Locate the round button at the top left of the Network tab and confirm it is in red recording mode. If it's grey, click to turn red to start recording. Use the clear button (the circle button with a line through it next to the record button) to clear all previous activity. Select the Preserve log check box on the Network tab. Check the Disable cache check box.  Reproduce the steps that create the issue. Save session as a .har file by right-clicking the grid and selecting Save as HAR with content. Forward to AdGuard support (support@adguard.com) with detailed explanation of issue. Supporting screenshots can be helpful, as well. "},{"title":"Firefox​","type":1,"pageTitle":"How to collect a HAR file","url":"guides/collect-har-file/#firefox","content":"To create a HAR file in Firefox: Go to the URL where the issue occurs. Do not reproduce the issue yet. Open Developer Tools in Network mode: From menu: Menu→Web Developer→Network.Keyboard: Ctrl+Shift+C, or ⌥+⌘+E (Mac). Note the play/pause button at the top left of the Network tab. Button should be in play mode. If any information is currently displayed in the grid, clear by clicking the delete trash can button next to the play/pause button. Select the Persist Logs check box on the Network tab. Check the Disable cache check box.  Reproduce the steps that create the issue. Save session as a .har file by right-clicking the grid and selecting Save all as HAR. Forward to AdGuard support (support@adguard.com) with detailed explanation of issue. Supporting screenshots can be helpful, as well. "},{"title":"Internet Explorer 11​","type":1,"pageTitle":"How to collect a HAR file","url":"guides/collect-har-file/#ie11","content":"To create a HAR file in Internet Explorer 11: Go to the URL where the issue occurs. Do not reproduce the issue yet. Open Developer Tools in Network mode: From Tools cog wheel menu: Developer Tools → Network tab.Keyboard: F12→Network tab. Note the start profiling session Play button and stop profiling Stop button at top left of Network tab. Play button will be gray when recording and Stop button will be red. Put in Play mode. Clear any session info appearing in the lower grid using the Clear session button on Network tab. Hover over icons to see names. Clear session button is a three line icon with an x on it. Check the Disable cache check box. Reproduce the steps that create the issue. Save session as a .har file by clicking on the Save disk button (Export as HAR) on Network tab. Forward to AdGuard support (support@adguard.com) with detailed explanation of issue. Supporting screenshots can be helpful, as well. "},{"title":"Safari​","type":1,"pageTitle":"How to collect a HAR file","url":"guides/collect-har-file/#safari","content":"To create a HAR file in Safari: Check the Safari menu bar at the top of the screen for a Develop menu. Check the checkbox at the bottom next to Show Develop menu in menu bar. If not visible, turn it on by going to Safari→Preferences→Advanced. Go to the URL where the issue occurs. Do not reproduce the issue yet. Open Network tab in Web Inspector: From menu: Develop→Show Web Inspector→Network.Keyboard: ⌥+⌘+I→Network Check Preserve Log checkbox on right side of the Network tabs. Clear current Network items by clicking the delete Trash icon at the far right of Network tabs. Check the Disable cache check box. Reproduce the steps that create the issue. Save session as a .har file by clicking the Export icon next to Preserve Log. Forward to AdGuard support (support@adguard.com) with detailed explanation of issue. Supporting screenshots can be helpful, too. "},{"title":"Android​","type":1,"pageTitle":"How to collect a HAR file","url":"guides/collect-har-file/#android","content":"To get HAR files follow these steps: Open AdGuard and go to Settings. Choose Advanced in the menu. Choose Low Level Settings Activate pref.har.capture (you will have to restart the protection). Now reproduce the problem — open the app, perform the necessary actions to make the ad appear. Now turn pref.har.capture off again. Go back and tap Export logs and system info → Save. "},{"title":"Windows​","type":1,"pageTitle":"How to collect a HAR file","url":"guides/collect-har-file/#windows","content":"Open Settings → General settings → *Advanced settings and scroll down. Check the Enable HAR writing box. Reproduce the problem. Go to General settings → Click on Export logs → Save. Disable HAR writing by unchecking the corresponding box. "},{"title":"Wie man Fehler meldet","type":0,"sectionRef":"#","url":"guides/report-bugs/","content":"","keywords":""},{"title":"Bevor Sie beginnen​","type":1,"pageTitle":"Wie man Fehler meldet","url":"guides/report-bugs/#bevor-sie-beginnen","content":""},{"title":"Wann Sie Fehler melden sollten​","type":1,"pageTitle":"Wie man Fehler meldet","url":"guides/report-bugs/#wann-sie-fehler-melden-sollten","content":"Prüfen Sie, ob Sie die aktuellste Version haben, und wenn nicht, aktualisieren Sie: Der Fehler könnte in der neuen Version bereits behoben sein. Überprüfen Sie, ob der Fehler nicht schon einmal gemeldet wurde. Wir empfehlen, sowohl auf offene als auch auf geschlossene Probleme zu achten.  "},{"title":"Wie man ein Problem beschreibt​","type":1,"pageTitle":"Wie man Fehler meldet","url":"guides/report-bugs/#wie-man-ein-problem-beschreibt","content":"Versuchen Sie, so viele Details wie möglich anzugeben — das macht es für uns einfacher, den Fehler zu reproduzieren und herauszufinden, wie er behoben werden kann. Das erwarten wir von einem Fehlerbericht: Ihre App-VersionIhre OS-VersionWann Sie das Problem bemerkt habenWas Sie getan haben oder was mit der Anwendung passiert ist, bevor Sie das Problem bemerkt haben. Schritte zur Reproduktion des ProblemsOb es wieder auftritt und mit welcher HäufigkeitOb Sie ein VPN oder eine Antiviren-Software haben "},{"title":"Wie man Protokolle sammelt​","type":1,"pageTitle":"Wie man Fehler meldet","url":"guides/report-bugs/#wie-man-protokolle-sammelt","content":"Lesen Sie über das Sammeln von Protokollen in speziellen Artikeln für jede Plattform. "},{"title":"Wie man für Fehlerberichte oder Funktionswünsche abstimmt​","type":1,"pageTitle":"Wie man Fehler meldet","url":"guides/report-bugs/#wie-man-für-fehlerberichte-oder-funktionswünsche-abstimmt","content":"Wenn Sie die Implementierung einer neuen Funktion oder eines Bugfixes unterstützen möchten, können Sie auf GitHub dafür stimmen. Um abzustimmen, reagieren Sie einfach mit einem Emoji.   Sie finden die Reaktionen in der oberen rechten Ecke oder am Ende einer Ausgabe. "},{"title":"Anweisungen für alle Plattformen​","type":1,"pageTitle":"Wie man Fehler meldet","url":"guides/report-bugs/#anweisungen-für-alle-plattformen","content":""},{"title":"AdGuard für Windows​","type":1,"pageTitle":"Wie man Fehler meldet","url":"guides/report-bugs/#adguard-für-windows","content":"Überprüfen Sie das Windows Repo, um sicherzustellen, dass das Problem noch nicht gemeldet wurde. Öffnen Sie eine Seite zum Erstellen neuer Probleme und wählen Sie Fehlerbericht. Füllen Sie das Formular aus. Wenn möglich, fügen Sie Screenshots oder eine Bildschirmaufnahme bei.  "},{"title":"AdGuard für Mac​","type":1,"pageTitle":"Wie man Fehler meldet","url":"guides/report-bugs/#adguard-für-mac","content":"Überprüfen Sie das Mac Repo, um sicherzustellen, dass das Problem noch nicht gemeldet wurde. Öffnen Sie eine Seite zum Erstellen neuer Ausgaben. Füllen Sie das Formular aus. Wenn möglich, fügen Sie Screenshots oder eine Bildschirmaufnahme bei. "},{"title":"AdGuard für Android​","type":1,"pageTitle":"Wie man Fehler meldet","url":"guides/report-bugs/#adguard-für-android","content":"Überprüfen Sie das Android Repo, um sicherzustellen, dass das Problem noch nicht gemeldet wurde. Öffnen Sie eine Seite zum Erstellen neuer Probleme und wählen Sie Fehlerbericht. Füllen Sie das Formular aus. Wenn möglich, fügen Sie Screenshots oder eine Bildschirmaufnahme bei. "},{"title":"AdGuard für iOS​","type":1,"pageTitle":"Wie man Fehler meldet","url":"guides/report-bugs/#adguard-für-ios","content":"Überprüfen Sie das iOS Repo, um sicherzustellen, dass das Problem noch nicht gemeldet wurde. Öffnen Sie eine Seite zum Erstellen neuer Probleme und wählen Sie Fehlerbericht. Füllen Sie das Formular aus. Wenn möglich, fügen Sie Screenshots oder eine Bildschirmaufnahme bei. "},{"title":"AdGuard-Browsererweiterung​","type":1,"pageTitle":"Wie man Fehler meldet","url":"guides/report-bugs/#adguard-browsererweiterung","content":"Überprüfen Sie das Browser Extension Repo, um sicherzustellen, dass das Problem noch nicht gemeldet wurde. Öffnen Sie eine Seite zum Erstellen neuer Probleme und wählen Sie Fehlerbericht. Füllen Sie das Formular aus. Wenn möglich, fügen Sie Screenshots oder eine Bildschirmaufnahme bei. "},{"title":"AdGuard für Safari​","type":1,"pageTitle":"Wie man Fehler meldet","url":"guides/report-bugs/#adguard-für-safari","content":"Überprüfen Sie das Safari Repo, um sicherzustellen, dass das Problem noch nicht gemeldet wurde. Öffnen Sie eine Seite zum Erstellen neuer Probleme und wählen Sie Fehlerbericht. Füllen Sie das Formular aus. Wenn möglich, fügen Sie Screenshots oder eine Bildschirmaufnahme bei. "},{"title":"How to report a website","type":0,"sectionRef":"#","url":"guides/report-website/","content":"","keywords":""},{"title":"Report a website​","type":1,"pageTitle":"How to report a website","url":"guides/report-website/#report","content":"Note: When you send a complaint via the app or via AdGuard Browser Assistant, all information is pre-filled automatically. Except for the screenshots, you'll have to make and attach them yourself. If you're using a direct link, you’ll need to enter data manually. To report a reinsertion of an ad or incorrect displaying of a website, you need to: "},{"title":"Browser extension​","type":1,"pageTitle":"How to report a website","url":"guides/report-website/#extension","content":"Open the browser extension settings by clicking on the corresponding icon;Click on Report an issue:  After you've filled in the form, an issue on GitHub will be created automatically. There will also be a link to monitor progress towards the solution of your problem. "},{"title":"Windows​","type":1,"pageTitle":"How to report a website","url":"guides/report-website/#windows","content":"Open AdGuard Browser Assistant and hit Report an issue:  Fill in the form for reporting a complaint;After you've done it, an issue on GitHub will be created automatically. There will also be a link to monitor progress towards the solution of your problem. "},{"title":"Android​","type":1,"pageTitle":"How to report a website","url":"guides/report-website/#android","content":"Open AdGuard settings;Сhoose Support, then Send Feedback → Missed ad/Incorrect blocking:  After you've filled in the form, an issue on GitHub will be created automatically. There will also be a link to monitor progress towards the solution of your problem. "},{"title":"Mac​","type":1,"pageTitle":"How to report a website","url":"guides/report-website/#mac","content":"Open AdGuard Browser Assistant and hit Report an issue:  Fill in the form for reporting a complaint;After you've done it, an issue on GitHub will be created automatically. There will also be a link to monitor progress towards the solution of your problem. "},{"title":"iOS​","type":1,"pageTitle":"How to report a website","url":"guides/report-website/#ios","content":"Open AdGuard settings;Choose Support, then Report incorrect blocking:  Fill in the form for reporting a complaint;After you've done it, an issue on GitHub will be created automatically. There will also be a link to monitor progress towards the solution of your problem. "},{"title":"Filling in the form​","type":1,"pageTitle":"How to report a website","url":"guides/report-website/#form","content":"Note: When you send a complaint via the app or via AdGuard Assistant, all information is pre-filled automatically. Except for the screenshots, you'll have to make and attach them yourself. If you're using a direct link, you’ll need to enter data manually. Filling in the form starts with detailing the type and version of a product;  Specify the type of problem and additional information on using third-party software (antivirus, VPN);  Enter the address of the page and the browser (or the download link in case of an app) where you've encountered a problem;  Application configuration must be specified: Filters you use;Stealth mode settings, if this function is enabled.  Provide a screenshot that captures the essence of a problem; Important: Hide your personal information (email, phone number, etc.) because screenshots will become publicly available.  Provide additional information that will help filter developers understand the situation; Also enter your account on GitHub, if available (it's necessary for developers to be able to reach you in case they need some additional details);  Check each step before sending the form;  You'll be provided with a link to track progress on your task.  "},{"title":"Diagnosis of an issue​","type":1,"pageTitle":"How to report a website","url":"guides/report-website/#issue","content":"This option is suitable for those who aren’t afraid of difficulties and don’t mind trying to find the problem on their own. This does not require any special skills or in-depth knowledge of HTML and CSS. For example, you are faced with a situation that your favorite website won’t open, authorization has broken, or some page elements are displayed incorrectly. The cause may be using a specific filter/extension/Stealth Mode setting. To diagnose these problems, you need to do the following: "},{"title":"Filters​","type":1,"pageTitle":"How to report a website","url":"guides/report-website/#filters","content":"Disable Ad Blocker;If it solved the problem, re-enable the module and disable filters one by one. This is done to identify filters that &quot;break&quot; the page;If you have managed to find out which filter &quot;breaks&quot; a page, you should inform the developers when filling out the form (see above). In this case, it is desirable to return to the initial settings;If turning off all the filters hasn't produced any results, apply rule @@||example.com^$document,extension; where example.com is an example site name that needs to be replaced by your own option;In case of failure (issue not solved), turn to section Stealth Mode. "},{"title":"Stealth Mode​","type":1,"pageTitle":"How to report a website","url":"guides/report-website/#stealth-mode","content":"Disable Stealth Mode;If this solved the problem, turn the module on and turn off the Stealth Mode options one by one. This is done to detect which filters are &quot;breaking&quot; the page;If you have managed to to detect which setting &quot;breaks&quot; a page, you should inform the developers when filling out the form (see above). In this case, it is desirable to return to the initial settings;In case of failure (issue not solved), turn to section Extensions. "},{"title":"Extensions​","type":1,"pageTitle":"How to report a website","url":"guides/report-website/#extensions","content":"Disable Extensions;If this solved the problem, turn on the module and turn off Extensions settings one by one. This is done to find out which setting &quot;breaks&quot; the page;If you have managed to detect which setting &quot;breaks&quot; a page, inform the developers when filling out the form (see above). In this case, it is desirable to return to the initial settings. "},{"title":"Third-party blockers​","type":1,"pageTitle":"How to report a website","url":"guides/report-website/#third-party-blockers","content":"Some browsers and antivirus programs (such as Yandex Browser, Kaspersky, etc.) have built-in ad blockers. They may affect and cause problems in the operation of sites. If you use such programs, make sure that the problem is on the side of AdGuard: disable AdGuard filtering and try to repeat the problem. If it remains, it means that the problem is caused by another application or browser. If the problem is caused by AdGuard, follow the steps described in the previous paragraphs. "},{"title":"How to take a screenshot","type":0,"sectionRef":"#","url":"guides/take-screenshot/","content":"","keywords":""},{"title":"Android​","type":1,"pageTitle":"How to take a screenshot","url":"guides/take-screenshot/#android","content":"Taking a screenshot on an Android device can be done in various ways — depending on the device model and its manufacturer. Generally, you should use the following button combination for Android: Hold down at once the Volume Down and the Power buttons for 1–2 seconds Your Android device will capture the entire screen and save it as a photo. So, you can find the screenshot in a Screenshots folder in your Gallery. But, as it has been already said, there can be differences depending on a particular device. Let’s look at other possible combinations: Hold down at once Home and Power for 1–2 seconds;Hold down at once the Back and the Home buttons On Android 8 and later you can also take a screenshot with other manipulations, for example by placing your hand vertically along the left or right edge of your phone and swiping in from that edge with your hand touching the screen (Samsung devices), or you can do it with three fingers swiping down (OnePlus devices), etc. Find out about other options to take a screenshot in the settings of your device. Besides, you can always use any special applications for taking screenshots on your devices, for example — Screenshot Easy, Screenshot Ultimate, Screenshot Snap, etc. "},{"title":"iOS​","type":1,"pageTitle":"How to take a screenshot","url":"guides/take-screenshot/#ios","content":"Any iOS device (barring ancient ones) lets you take a screenshot using standard tools. To take a screenshot on an iOS device, use the following combination: Press the Sleep/Wake (side) button and the Home button at the same time, then quickly release them and this one for iPhone X or later: Press the Sleep/Wake button and the Volume up button at the same time, then quickly release them Your iOS device will capture the entire screen and save it as a photo. You can find it in a standard Photo app. "},{"title":"Windows​","type":1,"pageTitle":"How to take a screenshot","url":"guides/take-screenshot/#windows","content":"To take a screenshot on Windows, press the PrtScn button On some notebooks you have to hold Fn and then press PrtScn. Please note: PrtScn (Print Screen) button can be differently abbreviated on various keyboards — PrntScrn, PrtScn, PrtScr or PrtSc. Windows captures the entire screen and copies it to the (invisible) clipboard. To take a screenshot of an active window, use the following combination: Hold down Alt and press PrtScn (or Fn + Alt + PrtScn on some laptops) To take a screenshot of a specific area, you should use the following combination: Hold down Win (the Windows button) and Shift and press S** After you take a screenshot, it will be saved in the clipboard. In most cases you will be able to paste it into a document that you are currently editing by using Ctrl + V button combination. Alternatively, if you need to save the screenshot into a file, you should open the standard Paint program (or any other app that can work with images). Paste your screenshot there using the same button combination or by clicking the Paste button (usually in the top left corner of the screen) and then save it. Windows 8 and 10 let you take a screenshot very quickly with a Win + PrtScn combination. As soon as you press these buttons, the screenshot will be automatically saved as a file to your Pictures → Screenshots Folder. There is also a dedicated program for taking screenshots called Snipping Tool that you can find via Start menu among standard programs of your computer. Snipping Tool lets you capture of any area of your desktop or the entire screen. After taking a screenshot using this program you can edit the picture and save it to any folder on your computer. Besides, you can also try using different apps for taking screenshots on your computer, like PicPick, Nimbus Screenshot, Screenshot Captor, Snipaste, Monosnap, etc. "},{"title":"macOS​","type":1,"pageTitle":"How to take a screenshot","url":"guides/take-screenshot/#mac","content":"To take a screenshot on Mac, use the following button combination: Press and hold together ⌘ Cmd + Shift + 3** Your Mac will capture the entire screen and save it as a file on the desktop. To take a screenshot of an active window, use the following combination: Press and hold together ⌘ Cmd + Shift + 4 + Space bar. The pointer will change to a camera icon. Click the window to capture it. Press the Esc button to cancel taking a screenshot To take a screenshot of a specific area, you should use the following combination: Press and hold together ⌘ Cmd + Shift + 4**. Drag the crosshair to select the needed area. Release your mouse or trackpad to take a screenshot, press the Esc button to cancel it. To take a screenshot of the Touch Bar (MacBook Pro) use the following combination: Hold down ⌘ Cmd + Shift + 6** Your Mac captures the entire Touch Bar and saves it as a file on the desktop. To copy a screenshot to the clipboard instead of saving it, hold down Ctrl together with any of the combinations above. Then you can paste the screenshot (from the clipboard) into a document or an image you are currently editing by using Cmd + V combination. You can also take screenshots by using Preview and choosing Take screenshot (of the selected area, window, or the entire screen). With Preview you can save your screenshots in JPG, TIFF, PDF, and other file formats. "},{"title":"Credits & Acknowledgements","type":0,"sectionRef":"#","url":"miscellaneous/acknowledgements/","content":"","keywords":""},{"title":"Third-party software​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#software","content":"This is the list of libraries and other resources that really helped us with AdGuard software development process. "},{"title":"AdGuard für Windows​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#win","content":"SQLLite database engine: https://sqlite.orgADO.NET provider for SQLite: https://system.data.sqlite.org/index.html/doc/trunk/www/index.wikiJson.NET — high-performance JSON framework for .NET: https://www.newtonsoft.com/jsonAvalonEdit — WPF-based text editor component: https://avalonedit.net "},{"title":"AdGuard für Mac​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#mac","content":"Red Sweater Software, LLC for RSVerticallyCenteredTextFieldCell component: http://www.red-sweater.com/blog/148/what-a-difference-a-cell-makesIlija Tovilo for ITProgressIndicator component: https://github.com/iluuu1994/ITProgressIndicatorSparkle Project for Sparkle.framework component: http://sparkle-project.orgRobbie Hanson for GCDAsyncSocket component: https://github.com/robbiehanson/CocoaAsyncSocketTony Million for Reachability component: https://github.com/tonymillion/ReachabilityAugust «Gus» Mueller for Fmdb component: https://github.com/ccgus/fmdbStephen F. Booth for SFBCrashReporter project: https://github.com/sbooth/SFBCrashReporterBartosz Janda for Acextract component: https://github.com/bartoszj/acextractFLOPageViewController: https://github.com/floschliep/FLOPageViewController "},{"title":"AdGuard für Android​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#android","content":"Logback-android by Tony19: https://tony19.github.io/logback-androidOtto by Square: http://square.github.io/ottoRootTools Library by Stericson: https://github.com/Stericson/RootToolsMaterialDateRangePicker by Supratim Chakraborty: https://github.com/borax12/MaterialDateRangePickerHelloCharts by Leszek Wach: https://github.com/lecho/hellocharts-android "},{"title":"AdGuard für iOS​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#ios","content":"Reachability component by Tony Million: https://github.com/tonymillion/ReachabilityFmdb component by August «Gus» Mueller: https://github.com/ccgus/fmdbNSStringPunycodeAdditions component by Nate Weaver: https://github.com/Wevah/Punycode-CocoaMinizip-ng library by Nathan Moinvaziri: https://github.com/zlib-ng/minizip-ngLottie for iOS library by Brandon Withrow: https://github.com/airbnb/lottie-ios "},{"title":"AdGuard Browsererweiterung​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#extension","content":"moment: https://github.com/moment/momentsimply-deferred: https://github.com/sudhirj/simply-deferredSHA256: https://github.com/AndersLindman/SHA256D3: https://github.com/d3/d3c3: https://github.com/c3js/c3nanobar: https://github.com/jacoborus/nanobarcrypto-js: https://github.com/brix/crypto-jsace: https://github.com/ajaxorg/ace "},{"title":"AdGuard für Safari​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#safari","content":"ace: https://github.com/ajaxorg/aceadm-zip: https://github.com/cthackers/adm-zipconfig: https://github.com/lorenwest/node-configelectron-debug: https://github.com/sindresorhus/electron-debugelectron-log: https://github.com/megahertz/electron-logelectron-remote: https://github.com/electron-userland/electron-remoteelectron-simple-updater: https://github.com/megahertz/electron-simple-updaterelectron-store: https://github.com/sindresorhus/electron-storeelectron-updater: https://github.com/electron-userland/electron-builderi18n: https://github.com/mashpie/i18n-noderequest-promise: https://github.com/request/request-promisexmlhttprequest: https://github.com/driverdan/node-XMLHttpRequestaxios: https://github.com/axios/axiosdevtron: https://github.com/electron-userland/devtronelectron: https://github.com/electron/electronelectron-osx-sign: https://github.com/electron/electron-osx-signelectron-rebuild: https://github.com/electron/electron-rebuildfind-in-files: https://github.com/kaesetoast/find-in-filesgulp: https://github.com/gulpjs/gulpgulp-hash-creator: https://github.com/wahaha2012/gulp-hash-creatorrequest: https://github.com/request/requestrequire-dir: https://github.com/aseemk/requireDir "},{"title":"AdGuard Browser Assistant​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#assistant","content":"React: https://github.com/facebook/reactwebextension-polyfill: https://github.com/mozilla/webextension-polyfillreact-intl: https://github.com/formatjs/formatjs/tree/main/packages/react-intlmobx: https://github.com/mobxjs/mobxmobx-react: https://github.com/mobxjs/mobx-reactlodash: https://github.com/lodash/lodashnanoid: https://github.com/ai/nanoidreact-modal: https://github.com/reactjs/react-modalclassnames: https://github.com/JedWatson/classnamesbabel: https://github.com/babel/babelaxios: https://github.com/axios/axioscrx: https://github.com/oncletom/crxeslint: https://github.com/eslint/eslintjest: https://github.com/facebook/jestpostcss: https://github.com/postcss/postcssweb-ext: https://github.com/mozilla/web-extwebpack: https://github.com/webpack/webpack "},{"title":"CoreLibs​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#corelibs","content":"BoringSSL: https://github.com/google/boringssl/blob/master/LICENSEbrotli: https://github.com/google/brotli/blob/master/LICENSEChromium: https://github.com/chromium/chromium/blob/master/LICENSEDetours: https://github.com/microsoft/Detours/blob/main/LICENSE.mdeDistantObject: https://github.com/google/eDistantObject/blob/master/LICENSEFF/FFOS libs by Simon Zolin: https://github.com/stsaz/ffbase/blob/master/README.mdGoogle test: https://github.com/google/googletest/blob/master/LICENSEhttp-parser: https://github.com/nodejs/http-parser/blob/master/LICENSE-MITjsmn: https://github.com/zserge/jsmn/blob/master/LICENSEklib: https://github.com/attractivechaos/klib/blob/master/khash.hlibevent: https://github.com/libevent/libevent/blob/master/LICENSELibreSSL: https://github.com/libressl-portable/openbsd/blob/master/src/lib/libssl/LICENSElwIP: https://lwip.wikia.com/wiki/Licenseminiz: https://github.com/richgel999/miniz/blob/master/LICENSEnghttp2: https://github.com/nghttp2/nghttp2/blob/master/COPYINGPCRE2: https://www.pcre.org/licence.txtSQLite: https://www.sqlite.org/copyright.htmlzlib: https://zlib.net/zlib_license.html "},{"title":"Special thanks​","type":1,"pageTitle":"Credits & Acknowledgements","url":"miscellaneous/acknowledgements/#testers","content":"Also a huge thanks and gratitude to all beta testers and other engaged users, whose help in finding/eliminating all the bugs, translating AdGuard and moderating our communities was priceless. Special thanks to: ag_bug_finder — beta tester of AdGuard for WindowsAikatsui — active contributor to AdGuard HomeAndy Kleinert (AndyKl) — translator and proofreader to German in CrowdinBigDargon — contributed the hostsVN project as a source to the list of AdGuard DNSBlaz — started as a filter contributor and now working at AdGuardBoo Berry — forum and Telegram group moderatorbuuuuuuu190 — beta tester, active AdGuard Forum memberclarke — beta tester, active AdGuard Forum memberdartrax — beta tester, active AdGuard Forum memberdja2k — beta tester, active AdGuard Forum memberEduardo Addad de Oliveira (eduardoaddad) — translator and proofreader to Portuguese and Portuguese, Brazilian in Crowdinfabjazz — beta tester, active AdGuard Forum memberGörkem Emrah Güler (gork7777) — translator and proofreader to Turkish in Crowdinhanschke — beta tester, active AdGuard Forum memberiDjay — outstanding beta tester of AdGuard for iOSImre Kristoffer Eilertsen (DandelionSprout) — maintainer of &quot;Dandelion Sprout’s Nordic Filters&quot; that are included in all AdGuard toolsIONIL — translator and proofreader to Hebrew in Crowdinitabmedia — beta tester, active AdGuard Forum memberkirasam — beta tester, active AdGuard Forum memberkrystian3w — very active filter contributorlancelot.moon — translator and proofreader to Chinese Traditional in Crowdin, beta testerLord Ami — beta tester, active AdGuard Forum memberLukas Novotny (novas78) — translator and proofreader to Czech in Crowdinmalware1 — beta tester, active AdGuard Forum membermilder — beta tester, active AdGuard Forum memberNicos18 — beta tester, active AdGuard Forum memberOizaro — translator and proofreader to Italian in CrowdinOleg Chashko — very active beta tester of AdGuard for SafariOskari Lavinto (olavinto) — translator and proofreader to Finnish in Crowdinouzbed — beta tester, active AdGuard Forum memberPentagramTr — filter contributor, namely, he has brought a lot of new things to the Turkish filterPeter Hubinsky (hubak) — translator and proofreader to Slovak in CrowdinPiQuark6046 — filter contributorrickyoh — beta tester, active AdGuard Forum memberRonin427 — beta tester, active AdGuard Forum memberSanjay Nand — beta tester, active AdGuard Forum membersaturnotaku — beta tester, active AdGuard Forum membersteve1209 — beta tester, active AdGuard Forum memberstreetwolf — beta tester, active AdGuard Forum membersuperlex — helps us with scriptlets, filters, and AdGuard for SafariTayTayTheKiller — beta tester, active AdGuard Forum memberTPS — bug finder, filter contributorYuki2718 — actively contributes to AdGuard filterszznosar — active beta tester focused on AdGuard for iOSSergey Zozulya (sviperz) — active member of our Telegram group, beta tester  We also want to thank the xda-developers users. Thank you for your helpful feedback! We always appreciate comments from our users, especially constructive ones. You can always contact us to share your thoughts about AdGuard, request new features, and submit bugs. Join the AdGuard Forum, Subreddit, Xda-developers Forum or visit our page on GitHub. "},{"title":"AdGuard Beta Testing","type":0,"sectionRef":"#","url":"miscellaneous/contribute/beta-testing/","content":"","keywords":""},{"title":"Beta-Tester:in werden​","type":1,"pageTitle":"AdGuard Beta Testing","url":"miscellaneous/contribute/beta-testing/#intro","content":"Unsere Anforderungen sind einfach: Verwenden Sie AdGuard, aktualisieren Sie auf die Beta-Version, sobald diese verfügbar ist, und melden Sie alle Fehler, die Sie bemerken. Sie benötigen jedoch entweder ein Forum- oder ein GitHub-Konto (oder beides), um unser Beta-Tester zu werden. In jedem Fall ist alles, was Sie wissen müssen, auf einer eigenen Seite gesammelt. Wenn Sie den Beschreibungsteil überspringen und direkt zur Aktion übergehen möchten, können Sie sich hier bewerben. Ihre Bewerbung wird innerhalb von 1-3 Werktagen geprüft und Sie erhalten eine Antwort per E-Mail. "},{"title":"Fehler melden​","type":1,"pageTitle":"AdGuard Beta Testing","url":"miscellaneous/contribute/beta-testing/#report-a-bug","content":"Wenn Sie einen Fehler entdeckt haben oder einfach nur Ihren Vorschlag teilen möchten, teilen Sie uns dies auf eine der möglichen Arten mit: Gehen Sie auf forum.adguard.com und posten Sie dort einen neuen Thread (oder suchen Sie einen bestehenden) im Beta-Forum Kategorie. Lesen Sie unbedingt Forenregeln; Gehen Sie auf GitHub und suchen Sie ein passendes Repository. Erstellen Sie dort ein neues Thema (issue) und beschreiben Sie den Fehler bzw. den Wunsch nach einem neuen Feature im Detail. Die beiden oben genannten Methoden sind die am meisten bevorzugten, aber Sie können bei Bedarf auch andere verwenden: Finden Sie uns auf verschiedenen Social-Media-Plattformen wie Facebook, Reddit, usw. Dies ist jedoch nicht der bequemste Weg, um technische Fragen zu diskutieren. Senden Sie eine E-Mail an unser Support-Team über die Registerkarte „Support“ in der App oder schreiben Sie direkt an support@adguard.com. "},{"title":"Beta-Schlüssel in der iOS-App aktivieren​","type":1,"pageTitle":"AdGuard Beta Testing","url":"miscellaneous/contribute/beta-testing/#ios","content":"Wenn Sie bereits einen Beta-Schlüssel erhalten haben und dieser in Ihrem adguard.com Konto aufgeführt ist, gehen Sie zur App und öffnen Sie den Lizenzbereich (Get Premium). Geben Sie dort die Anmeldeinformationen Ihres AdGuard-Kontos ein. Danach werden die Premium-Funktionen automatisch verfügbar. "},{"title":"Was sonst?​","type":1,"pageTitle":"AdGuard Beta Testing","url":"miscellaneous/contribute/beta-testing/#was-sonst","content":"Es gibt nicht viel mehr hinzuzufügen. Sie müssen sich nicht die Mühe machen, Fehler zu finden. Sie können AdGuard wie gewohnt weiter verwenden. Wenn Sie jedoch auf einen Fehler stoßen, melden Sie ihn bitte. Natürlich freuen wir uns über jeden zusätzlichen Aufwand und/oder zusätzliche Forumsaktivitäten usw. Gelegentlich erhalten Sie unsere Newsletter, die Sie über die neuesten Änderungen in der Beta (falls Sie sie verpasst haben) und andere wichtige Neuigkeiten auf dem Laufenden halten. Sie können sich jederzeit wieder abmelden. "},{"title":"Zu AdGuard-Filtern beitragen","type":0,"sectionRef":"#","url":"miscellaneous/contribute/filters/","content":"","keywords":""},{"title":"Filterregeln​","type":1,"pageTitle":"Zu AdGuard-Filtern beitragen","url":"miscellaneous/contribute/filters/#filtering-rules","content":"Wie Sie wahrscheinlich wissen, verwendet AdGuard Filterregeln, um Werbung zu blockieren, und diese Regeln werden in thematischen Blockierungsfiltern zusammengefasst, wie AdGuard Base Filter, Mobile Ads Filter, usw. Lesen Sie mehr darüber, wie die Werbeblockierung funktioniert. Websites ändern ständig die Art und Weise, wie sie Anzeigen einbetten, und wir fügen unseren Filtern neue Regeln hinzu, damit sie effektiv bleiben. Filteringenieure arbeiten an der Erstellung neuer Regeln, aber wir freuen uns immer über die Hilfe und Unterstützung von Freiwilligen. "},{"title":"Wie man anfängt​","type":1,"pageTitle":"Zu AdGuard-Filtern beitragen","url":"miscellaneous/contribute/filters/#how-to-start","content":"Die Arbeit mit blockierenden Filtern erfordert jedoch spezifische Fähigkeiten. Wenn Sie diese haben und wissen, wie man Regeln erstellt, dann gehen Sie direkt zu unserem AdGuard Filters Repository auf GitHub. Dort finden Sie viele offene Probleme (issues), die jeweils auf ein Problem mit einer Website verweisen – eine verpasste Anzeige, ein falsch positives Ergebnis usw. Wählen Sie beliebige aus und schlagen Sie Ihre eigenen Regeln in den Kommentaren vor. AdGuard-Filteringenieure prüfen Ihre Vorschläge und wenn sie sie für angemessen halten, werden Ihre Regeln zu AdGuard-Filtern hinzugefügt. Wenn Sie mit der Syntax unserer Filterregeln noch nicht vertraut sind oder vielleicht eine Auffrischung benötigen, finden Sie die Grundlagen der Syntax in unserer Wissensdatenbank. Weitere Anleitungen für Fortgeschrittene finden Sie im Internet, und wenn Sie Fragen zur Syntax haben, besuchen Sie unser Forum. "},{"title":"Belohnung​","type":1,"pageTitle":"Zu AdGuard-Filtern beitragen","url":"miscellaneous/contribute/filters/#rewards","content":"Wenn Sie mehrere Filterregeln vorgeschlagen haben und einige davon genehmigt wurden, dann ist es Zeit für Sie, eine Belohnung zu erhalten. Senden Sie uns eine Nachricht an st@adguard.com mit Ihrem GitHub-Kontonamen und Sie erhalten einen kostenlosen AdGuard-Lizenzschlüssel. Was die genaue Anzahl der Regeln betrifft, die Sie genehmigen müssen, um eine Lizenz zu bekommen, gibt es keine festen Regeln. Diese Aufgabe ist nicht einfach, daher sollte alles über 5 ausreichen. "},{"title":"Übersetzer/Korrekturleser werden","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/become-translator/","content":"","keywords":""},{"title":"Korrekturleser:in werden​","type":1,"pageTitle":"Übersetzer/Korrekturleser werden","url":"miscellaneous/contribute/translate/become-translator/#proofreaders","content":"Wir haben Korrekturleser (Proofreader) für jede Sprache. Und jede:r aktive Übersetzer:in hat die Möglichkeit, eine:r zu werden. Wofür sind Korrekturleser verantwortlich? Korrekturleser: genehmigen (approve) qualitativ hochwertige Übersetzungen und lehnen die schlechten ab; achten auf die Relevanz von Übersetzungen; antworten auf Kommentare zu Übersetzungen in ihrer Sprache. Jedes Jahr erhalten die besten Korrektoren Geschenke von AdGuard. Auch aktive Übersetzer bleiben nicht unbelohnt. Lesen Sie mehr über unser Belohnungssystem. "},{"title":"Leitlinien und Empfehlungen","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/guidelines/","content":"Leitlinien und Empfehlungen Es gibt einige Dinge, die Sie wissen sollten, bevor Sie mit der Übersetzung beginnen. Das spart Ihnen nicht nur Zeit und Mühe, sondern stellt auch sicher, dass wir in Bezug auf die Bedeutung der zu übersetzenden Sätze auf derselben Seite sind. Sobald Sie unsere Seite auf Crowdin geöffnet haben, wählen Sie ein beliebiges Projekt und Ihre Sprache aus. Sie können auch nach dem Öffnen bestimmter Produktordner zwischen den Sprachen wechseln. Wählen Sie einen der verfügbaren Produktordner und eine Datei aus – jetzt können Sie mit der Übersetzung beginnen. Bitte beachten Sie: Sie können die Sprache der Crowdin-Benutzeroberfläche auch ändern, indem Sie auf das Symbol Einstellungen in der oberen rechten Ecke der Seite klicken. Scrollen Sie im geöffneten Fenster nach unten zur Registerkarte UI language. Öffnen Sie sie, wählen Sie eine Sprache und klicken Sie auf Change. Die folgenden Leitlinien helfen Ihnen bei diesem Prozess. Sie können Übersetzungen filtern, indem Sie auf diese Schaltfläche klicken und eine der angebotenen Optionen auswählen. Wechseln Sie einfach zwischen den Dateien des Projekts. Achten Sie auf die Glossarbegriffe, die in einer Quellphrase mit einer gepunkteten Linie hervorgehoben sind. Normalerweise handelt es sich um spezielle Wörter (wie Markennamen), die nicht übersetzt werden sollten. Sie können Ihre Übersetzung für übersetzbare Begriffe im Projekt AdGuard Glossary vorschlagen. In Crowdin können Strings mit Notizen versehen werden, die das Verständnis und die Übersetzung von Sätzen erleichtern. Suchen Sie im Feld „Context“ der Quellphrase danach. Achten Sie auch auf Screenshots, die häufig neben Quellphrasen im Feld „Context“ stehen. Sie helfen, den Kontext zu verstehen und vermitteln die genaue Bedeutung. Bitte beachten Sie, dass Sie den Kontext anfordern können, indem Sie auf die Schaltfläche „Request“ klicken. Sie können nicht nur neue Übersetzungen vorschlagen, sondern auch Kommentare zu Strings hinterlassen. Verwenden Sie Kommentare, um uns über Fehler in den vorhandenen Übersetzungen zu informieren, Notizen zu machen oder Fragen zu stellen. Wenn Sie einen Kommentar zu Ihrer Übersetzung sehen, versuchen Sie, darauf zu antworten. Es gibt auch eine Registerkarte Discussions auf der Hauptprojektseite, auf der Sie bequem alle Kommentare für die spezifische Sprache in diesem Projekt anzeigen können. Crowdin bietet ein sehr nützliches und praktisches Tool namens Translation Memory. Mit seiner Hilfe können Sie die zuvor erstellten Übersetzungen der gleichen Wörter und Phrasen finden und in Ihren Übersetzungen wiederverwenden. Sobald Sie einem Projekt beitreten, indem Sie auf die Schaltfläche „Beitreten“ klicken, sehen Sie die Registerkarte Tasks auf der Projektseite, auf der die Aufgaben für bestimmte Projektdateien erstellt werden. Bitte beachten Sie diese: Sie haben in der Regel eine höhere Priorität. Manchmal findet man Sätze mit Pluralformen. Bitte seien Sie bei der Übersetzung solcher Sätze besonders aufmerksam. Wie man Pluralformen übersetzt, können Sie hier nachlesen. Die Verwendung korrekter Pluralformen ist äußerst wichtig: Bitte fragen Sie uns in den Kommentaren, wenn etwas unklar ist. Bitte schreiben Sie nicht direkt an die in den Projektinfos aufgeführten Projektmanager und Korrektoren. Wenn Sie Fragen zu Übersetzungen haben, können Sie unsere Korrekturleser oder Administratoren jederzeit über Kommentare fragen. Haftungsausschluss: Sie können uns Fragen zur Übersetzung von AdGuard stellen, indem Sie eine E-Mail an translate@adguard.com senden oder unserem Telegramm-Chat beitreten. Die Admins werden Ihnen so schnell wie möglich antworten.","keywords":""},{"title":"Pluralformen","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/plural-forms/","content":"","keywords":""},{"title":"Was bedeuten Pluralformen?​","type":1,"pageTitle":"Pluralformen","url":"miscellaneous/contribute/translate/plural-forms/#plurals","content":"Substantive in verschiedenen Sprachen können mehrere Wortformen im Plural haben. Ihre Verwendung hängt von der Anzahl der Dinge ab, über die Sie sprechen. Zum Beispiel haben englische Wörter zwei Wortformen, wenn sie im Singular über etwas sprechen, wie „one star“, und im Plural – „2 stars“. Es spielt keine Rolle, ob Sie fünf, sechsundzwanzig oder sogar fünfhundertzweiunddreißig Sterne sagen – die Endung „s“ bleibt gleich. Einige Sprachen können jedoch nur eine oder mehrere Pluralformen enthalten. Im Gegensatz zum Englischen gibt es in der polnischen Sprache drei Substantivformen im Plural. Eine von ihnen wird verwendet, wenn über etwas im Singular gesprochen wird, eine andere Form wird im Plural verwendet, aber mit Zahlen, die auf 2-4 enden, außer 12-14, und die dritte Form – für Wörter mit anderen Zahlen davor. Schauen wir uns dieses Bild an. Hier sieht man die Zahlengruppen, die eine Wortform bestimmen, wenn sie davor stehen.  Ziehen wir zum besseren Verständnis eine kleine Parallele zwischen Englisch und Polnisch:  Die englische Version: Die polnischen Entsprechung: 1. Form — It takes one hour. 1. Form — Zajmuje to godzinę. 2. Form — It takes two hours. 2. Form — Zajmuje to dwie godziny. 3. Form — It takes five hours. 3. Form — Zajmuje to pięć godzin.  Nun ist klar, dass die polnische 'godzinę' (Stunde) drei verschiedene Formen hat, während das englische Wort seine Form bei gegebenen Zahlen nur zweimal ändert. Außer Polnisch gibt es viele andere Sprachen, die drei Pluralformen und mehr haben, wie Russisch, Serbisch, Slowakisch, Tschechisch usw. Aber nicht alle halten sich an dieselbe Regel. Deshalb ist es so wichtig zu wissen, wie viele Pluralformen Ihre Sprache enthält und wie Sie diese anwenden können. "},{"title":"Wo kann man etwas über die Anzahl der Pluralformen erfahren?​","type":1,"pageTitle":"Pluralformen","url":"miscellaneous/contribute/translate/plural-forms/#where-to-learn","content":"Wenn Sie eine Phrase mit Pluralformen übersetzen, können Sie möglicherweise nicht sofort erkennen, wie viele Wortformen Ihre Sprache enthält. Hier sind einige Informationsquellen, die Sie verwenden können. Localization Guide enthält eine umfangreiche Liste von Sprachen. Die Anzahl der Pluralformen für verschiedene Sprachen wird folgendermaßen angezeigt: 'nplurals=2', 'nplurals=4' und so weiter. Die Zahl nach dem Gleichheitszeichen '=' gibt die Anzahl der Pluralformen der jeweiligen Sprache an. Informationen zu Pluralformen finden Sie auch im Unicode Common Locale Data Repository (CLDR). Die CLDR-Pluralregeln geben eine zusätzliche Wortform für Dezimalzahlen an (1,5; 2,3; 100,1…), aber wir verwenden sie nicht in AdGuard-Übersetzungen. "},{"title":"Pluralformen in AdGuard-Übersetzungen​","type":1,"pageTitle":"Pluralformen","url":"miscellaneous/contribute/translate/plural-forms/#translations","content":"Zunächst möchten wir erwähnen, dass nicht jede AdGuard-Übersetzung die Verwendung von Pluralformen erfordert. Derzeit haben wir 4 Arten von Strings auf Crowdin, die die Verwendung von Pluralformen beinhalten. Schauen wir sie uns genauer an. "},{"title":"1. Phrasen mit String-Schlüsseln, die auf .singular, .dual, .plural enden​","type":1,"pageTitle":"Pluralformen","url":"miscellaneous/contribute/translate/plural-forms/#1type","content":" Die meisten von ihnen sind im Projekt AdGuard for Windows vertreten und bestehen nur aus einem oder zwei Wörtern: days;extensions;hours Bitte achten Sie auf die Schlüssel solcher Phrasen und auf das Feld „Context“, wo Sie einige wichtige Hinweise zu Pluralformen sehen können. Die Schlüssel können Singular, Dual, Plural Wörter enthalten (z. B.FormatDayDeclensionDual). In diesem Fall sollten Sie die entsprechende Pluralform so belassen, wie sie im Schlüssel angegeben ist. "},{"title":"2. Strings mit Singular- und Pluralnomen, die durch Kommas getrennt sind​","type":1,"pageTitle":"Pluralformen","url":"miscellaneous/contribute/translate/plural-forms/#2type","content":"Diese Art von Strings konzentriert sich hauptsächlich auf das AdGuard for Android Projekt. Bitte schauen Sie sich das Beispiel an:  Wenn es in Ihrer Sprache 3 Pluralformen von Substantiven gibt (wie im Polnischen), schreiben Sie bitte alle Pluralformen durch Kommas getrennt. hour, hours — godzinę, godziny, godzin Falls ein Substantiv nur 2 Formen hat, muss dieselbe Form nicht zweimal geschrieben werden (normalerweise nur für diese Art von Strings mit Plural!). Es ist jedoch kein Fehler, wenn Sie die Form zweimal wiederholen. "},{"title":"3. Strings, die das von Crowdin entwickelte Muster verwenden​","type":1,"pageTitle":"Pluralformen","url":"miscellaneous/contribute/translate/plural-forms/#3type","content":"Dies ist das benutzerfreundlichste Schema zum Übersetzen von Strings mit Pluralformen. Crowdin schlägt den Benutzern vor, die bestimmte Menge an Phrasen mit verschiedenen Pluralformen zu übersetzen. Wenn Ihre Sprache nur eine Pluralform bietet, sehen Sie nur ein Formular mir einer zu übersetzenden Phrase. Wenn drei oder mehr Formen vorliegen, stellt Crowdin Ihnen die Formulare zur Verfügung, die in andere zwei oder drei zu übersetzende Phrasen unterteilt ist. Zum Beispiel:  Bitte seien Sie aufmerksam, wenn Sie diese Strings übersetzen und genehmigen. Wenn Sie keine Ahnung haben, was das Feld „Other“ bedeutet, fügen Sie einfach die gleiche Form wie in das Feld „Many“ ein. Die Übersetzungen der Felder „Many“ und „Other“ können identisch sein. "},{"title":"4. Strings mit Vorlagen, die durch das vertikale Balkenzeichen getrennt sind​","type":1,"pageTitle":"Pluralformen","url":"miscellaneous/contribute/translate/plural-forms/#4type","content":"Dies ist die komplizierteste Art von AdGuard-Strings, die am häufigsten in AdGuard Websites-Projekt verwendet wird. Achten Sie genau auf ein vertikales Balkenzeichen zwischen den Sätzen und %count%-Platzhalter in Originalphrasen – dies wird Ihnen helfen, Phrasen mit Pluralformen zu identifizieren.  Stellen Sie sich nun vor, Sie sehen eine solche Phrase: Standard license for %count% computer | Standard license for %count% computers. Was sollte man wissen, um es richtig zu übersetzen? Nennen wir die Sätze, die durch ein vertikales Strichzeichen getrennt sind, „Vorlagen“, weil sie eigentlich als Vorlagen für Sätze mit unterschiedlichen Nummern dienen. Um auf das Beispiel zurückzukommen: Da die englische Sprache nur zwei Formen umfasst, sollte es jeweils zwei Vorlagen geben: Standard license for *%count%* computer | Standard license for *%count%* computers wobei Vorlage 1 – Standard license for %count% computer, und Vorlage 2 — Standard license for %count% computers Eine weitere wichtige Sache, auf die Sie Ihre Aufmerksamkeit richten sollten, sind %count%-Platzhalter, die wie üblich vor den Wörtern stehen, die sie definieren. Anstelle von %count% erscheinen hier unterschiedliche Zahlen, je nachdem, welche Vorlagen ausgewählt werden. In einer Situation mit einer anderen Sprache, die beispielsweise drei Pluralformen hat, sollten drei Vorlagen mit zwei vertikalen Balkenzeichen dazwischen vorhanden sein. Wenn wir zum Beispiel den oben erwähnten Satz ins Slowakische übersetzen, der gemäß der Regel von Localization Guide drei Wortformen hat, sieht die korrekte Übersetzung so aus: **Štandartná licencia pre *%count%* počítač | Štandartná licencia pre *%count%* počítače | Štandartná licencia pre *%count%* počítačov**  In diesem Fall sehen wir drei Vorlagen, die drei Formen des slowakischen Wortes „počítač“ (Computer) enthalten. Wenn wir eine der Formen ignorieren und nur zwei statt drei Vorlagen für Slowakisch verwenden, kann das System für bestimmte Zahlen keine geeignete Vorlage verwenden, und als Ergebnis haben wir Grammatikfehler in Sätzen, wie z. B. im Englischen: Standard license for 5 computer. Verwenden Sie immer so viele Formen, wie es in Ihrer Sprache gibt, auch wenn das Wort selbst weniger Wortformen hat. Zum Beispiel hat das serbische Wort 'računar' (Computer) nur zwei Formen. Aber es gibt 3 Pluralformen im Serbischen.  Die Übersetzung aus dem Englischen ins Serbische sollte also lauten: **Standardna licenca za *%count%* računar | Standardna licenca za *%count%* računara | Standardna licenca za *%count%* računara** Obwohl es offensichtlich ist, dass die letzten beiden Vorlagen keine Unterschiede aufweisen, ist es sehr wichtig, die Regel einzuhalten: Die Anzahl der Vorlagen sollte die Anzahl der Pluralformen der jeweiligen Sprache widerspiegeln!(typisch für diese Art von Strings mit Plural). "},{"title":"Kurze Zusammenfassung​","type":1,"pageTitle":"Pluralformen","url":"miscellaneous/contribute/translate/plural-forms/#summury","content":"Achten Sie beim Übersetzen von AdGuard-Projekten genau auf Formulierungen, die die Verwendung von Pluralformen erfordern. Während die ersten drei Arten solcher Strings mehr oder weniger leicht durchzuführen sind, erfordert die vierte Art mehr Wachsamkeit. Und noch einmal: Wenn Sie auf einen Originalsatz mit zwei wichtigen Elementen stoßen: das vertikale Balkenzeichen und %count%-Platzhalter, gehen Sie bitte wie folgt vor: Beziehen Sie sich auf die Pluralregel einer Sprache, in die Sie übersetzen; Die Anzahl Ihrer Vorlagen sollte mit der Anzahl der Pluralformen in Ihrer Sprache übereinstimmen, auch wenn einige Wörter selbst weniger Formen haben. Zwei Pluralformen – zwei Vorlagen in Übersetzungen; fünf Pluralformen – fünf Vorlagen usw. Vergessen Sie nicht, ein vertikales Balkenzeichen zwischen Vorlagen zu verwenden, wie es in Originalphrasen dargestellt wird; Die %count%-Platzhalter dürfen nicht übersetzt, ausgefüllt oder gelöscht werden. Indem Sie diese einfachen Regeln befolgen, helfen Sie AdGuard-Entwicklern, viele unnötige Schwierigkeiten während des Lokalisierungsprozesses zu vermeiden. "},{"title":"AdGuard übersetzen","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/program/","content":"AdGuard übersetzen Haftungsausschluss: Sie können uns Fragen zur Übersetzung von AdGuard stellen, indem Sie eine E-Mail an translate@adguard.com senden oder unserem Telegramm-Chat beitreten. Wenn es um Übersetzungen geht, sind wir bei AdGuard immer stark auf Freiwillige angewiesen. Wir verwenden jetzt die Crowdin-Plattform, um die Übersetzungen unserer Produkte zu verwalten. Dies ist also der richtige Ort für alle, die zu AdGuard beitragen möchten, indem sie eines unserer Produkte übersetzen. Wenn Sie uns bei der Übersetzung von AdGuard auch helfen möchten, lesen Sie bitte die Informationen darüber, wie Sie unser:e Übersetzer:in werden können und wie wir mit ihnen zusammenarbeiten.","keywords":""},{"title":"Belohnungssystem","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/rewards/","content":"Belohnungssystem Da jede ehrliche und gut gemachte Arbeit belohnt werden sollte, können aktive Übersetzer:innen auf Crowdin einen kostenlosen AdGuard-Lizenzschlüssel und ein VPN-Abonnement anfordern. Um einen einjährigen AdGuard-Lizenzschlüssel oder ein einjähriges AdGuard VPN-Abonnement anzufordern, müssen Sie mindestens 500 bzw. 2.500 Wörter übersetzen. Um Ihren Übersetzungsfortschritt zu überprüfen, öffnen Sie ein Projekt, an dem Sie gearbeitet haben, klicken Sie auf die Registerkarte Reports und wählen Sie My Contribution. Sie können die Anzahl der in verschiedenen Projekten übersetzten Wörter zusammenzählen, um eine Lizenz zu erhalten. So funktioniert unser Belohnungssystem Für die erste einjährige AdGuard-Lizenz müssen Sie 500 Wörter übersetzen. Für die zweite Lizenz benötigen Sie 1.000 Wörter, also insgesamt 1.500 Wörter. Alle nachfolgenden Lizenzen erfordern zusätzlich 1.500 Wörter pro Lizenz. Für das erste einjährige AdGuard VPN-Abonnement müssen Sie 2.500 Wörter übersetzen. Alle nachfolgenden Abonnements oder Verlängerungen erfordern zusätzlich 2.500 Wörter pro Abonnement. Senden Sie uns einfach eine Anfrage an translate@adguard.com und Sie erhalten die Lizenz als Zeichen unserer Dankbarkeit. Außerdem können die aktivsten Übersetzer in Zukunft den Status eines Korrekturlesers erhalten, wenn sie eine solche Absicht äußern. Jedes Jahr senden wir unseren aktiven Korrektoren Geschenke mit dem AdGuard-Logo. Wenn Sie einer von ihnen werden möchten, schreiben Sie bitte an translate@adguard.com.","keywords":""},{"title":"Übersetzungspriorität der Crowdin-Dateien","type":0,"sectionRef":"#","url":"miscellaneous/contribute/translate/translation-priority/","content":"Übersetzungspriorität der Crowdin-Dateien Es gibt fünf große AdGuard-Projekte auf Crowdin – AdGuard Applications, AdGuard Websites, AdGuard Knowledge Base, AdGuard VPN Knowledge Base und AdGuard DNS Knowledge Base. Wir haben keine klaren Richtlinien, mit welchen Dateien oder Produkten des Projekts AdGuard Applications Sie beginnen sollen. Wählen Sie einfach ein beliebiges Produkt aus. Es gibt nur ein paar Dinge, die wir erwähnen möchten: Sie können die App nur in den Sprachen sehen, für die alle Übersetzungen in Crowdin abgeschlossen sind;Wir empfehlen, die Beschreibungen für App-Stores an zweiter Stelle zu übersetzen, da die Beschreibungen ohne die Übersetzung der Produkte selbst nicht benötigt werden. Anders verhält es sich bei dem Projekt AdGuard Websites . Sprachen können der Website auch dann hinzugefügt werden, wenn noch keine vollständigen Übersetzungen vorhanden sind. Dies hängt jedoch davon ab, welche Dateien bereits übersetzt wurden. Deshalb empfehlen wir Ihnen, mit den wichtigsten Dateien zu beginnen – sie sind unten aufgeführt: AdGuard Werbeblocker-Website critical.resxauth.resxwelcome.resx AdGuard VPN-Website critical.resxauth.resx AdGuard DNS-Website critical.resxauth.resx Das Hinzufügen neuer Strings sowie das Aktualisieren vorhandener in diesen Dateien erfordert besondere Aufmerksamkeit von den Projektübersetzern und Korrekturlesern. Neben Websites gibt es im AdGuard Websites-Projekt eine Datei zum Übersetzen von Transaktions-E-Mails. Neu hinzugefügte Phrasen in dieser Datei haben ebenfalls eine hohe Übersetzungspriorität.","keywords":""},{"title":"Über AdGuard schreiben","type":0,"sectionRef":"#","url":"miscellaneous/contribute/writing-about-adguard/","content":"Über AdGuard schreiben Wenn Ihnen AdGuard gefällt und Sie Ihre Eindrücke von dem/den Produkt(en) über das Internet verbreiten möchten – in sozialen Medien, persönlichen Blogs und/oder auf Websites – dann kann dieser Artikel für Sie nützlich sein. Wenn Sie Ihre Erfahrungen online teilen, senden Sie uns einen Link an pr@adguard.com und wir danken Ihnen mit einem kostenlosen Lizenzschlüssel. Es spielt keine Rolle, ob das Publikum Ihrer Website zehn oder tausend Personen umfasst, wir respektieren jede Anstrengung. Der einzige Hinweis, den Sie beachten sollten, ist, dass Ihre Rezension ungefähr 300 bis 500 Wörter umfassen sollte. Wenn Sie ein Video machen oder etwas anderes tun möchten, teilen Sie uns dies im Voraus mit, um in Zukunft Missverständnisse zu vermeiden. Dasselbe gilt, wenn Ihr Plan die Verwendung des AdGuard-Logos, von Bannern oder anderen visuellen Elementen beinhaltet. Die Kontakt-E-Mail bleibt gleich: pr@adguard.com.","keywords":""},{"title":"Wissensdatenbanken aktualisieren","type":0,"sectionRef":"#","url":"miscellaneous/contribute/updating-knowledge-base/","content":"","keywords":""},{"title":"Änderungen vorschlagen / einen neuen Artikel schreiben​","type":1,"pageTitle":"Wissensdatenbanken aktualisieren","url":"miscellaneous/contribute/updating-knowledge-base/#suggest-change","content":"Sie können Änderungen an aktuellen Artikeln vorschlagen und neue zu unserer Wissensdatenbank hinzufügen, indem Sie die oben erwähnte Funktionalität von GitHub verwenden. Wenn Sie mit den Prinzipien der Arbeit mit der Plattform nicht vertraut sind, lesen Sie zunächst GitHub-Dokumentation. Sobald Sie startbereit sind, arbeiten Sie im KnowledgeBase-Repository. Alle Texte in unserer Wissensdatenbank sind in Markdown Auszeichnungssprache geschrieben. Befolgen Sie die Markdown-Regeln, wenn Sie Artikel bearbeiten oder schreiben. Folgen Sie diesem Link, um mehr über die Markdown-Syntax zu erfahren. Die Website der Wissensdatenbank wurde mit Docusaurus 2 erstellt, einem modernen Generator für statische Websites. Wenn Sie Änderungen oder Ergänzungen vorschlagen, beachten Sie bitte, dass alle Dokumente den Grundsätzen der Plattform entsprechen müssen. Sie können über sie in Docusaurus Guides lesen. Sie können die Wissensdatenbank auch lokal auf Ihrem Computer bereitstellen, um eine Vorschau auf die von Ihnen vorgeschlagenen Änderungen zu erhalten. Detaillierte Anweisungen dazu finden Sie in der README-Datei auf der GitHub-Seite dieser Wissensdatenbank. "},{"title":"Artikel übersetzen​","type":1,"pageTitle":"Wissensdatenbanken aktualisieren","url":"miscellaneous/contribute/updating-knowledge-base/#translate-adguard","content":"Die Übersetzung der bestehenden Artikel der Wissensdatenbank erfolgt auf der Crowdin-Plattform. Alle Details zu Übersetzungen und zur Arbeit mit Crowdin finden Sie im entsprechenden Artikel der Wissensdatenbank von AdGuard Werbeblocker. Wenn Sie an Artikeln der AdGuard-Wissensdatenbank arbeiten, stoßen Sie möglicherweise auf Strings mit Pluralformen, die Sie mit besonderer Aufmerksamkeit übersetzen sollten. In einem separaten Artikel haben wir ausführlich die Schwierigkeiten beschrieben, die beim Übersetzen von Strings mit Pluralformen auftreten können, und eine ausführliche Anleitung gegeben, wie man damit auf der Crowdin-Plattform arbeiten kann. "},{"title":"An Open Issues arbeiten​","type":1,"pageTitle":"Wissensdatenbanken aktualisieren","url":"miscellaneous/contribute/updating-knowledge-base/#an--open-issues-arbeiten","content":"Manchmal gibt es offene Probleme (open issues) auf GitHub im Zusammenhang mit der Aktualisierung der Wissensdatenbank. Sie können uns dabei helfen, die Fertigstellung zu beschleunigen genauso wie Sie andere Änderungen an der Wissensdatenbank vorschlagen würden. Wählen Sie ein beliebiges Thema, das Sie ansprechend finden, und beginnen Sie, daran zu arbeiten. Wenn Sie Fragen haben, können Sie diese direkt in den Kommentaren zum Problem stellen. "}]